// Code generated by entc, DO NOT EDIT.

package cabinet

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the cabinet type in the database.
	Label = "cabinet"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldLastModifier holds the string denoting the last_modifier field in the database.
	FieldLastModifier = "last_modifier"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldBranchID holds the string denoting the branch_id field in the database.
	FieldBranchID = "branch_id"
	// FieldSn holds the string denoting the sn field in the database.
	FieldSn = "sn"
	// FieldBrand holds the string denoting the brand field in the database.
	FieldBrand = "brand"
	// FieldSerial holds the string denoting the serial field in the database.
	FieldSerial = "serial"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDoors holds the string denoting the doors field in the database.
	FieldDoors = "doors"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldModels holds the string denoting the models field in the database.
	FieldModels = "models"
	// FieldHealth holds the string denoting the health field in the database.
	FieldHealth = "health"
	// FieldBin holds the string denoting the bin field in the database.
	FieldBin = "bin"
	// FieldBatteryNum holds the string denoting the battery_num field in the database.
	FieldBatteryNum = "battery_num"
	// FieldBatteryFullNum holds the string denoting the battery_full_num field in the database.
	FieldBatteryFullNum = "battery_full_num"
	// EdgeBranch holds the string denoting the branch edge name in mutations.
	EdgeBranch = "branch"
	// EdgeBms holds the string denoting the bms edge name in mutations.
	EdgeBms = "bms"
	// EdgeFaults holds the string denoting the faults edge name in mutations.
	EdgeFaults = "faults"
	// Table holds the table name of the cabinet in the database.
	Table = "cabinet"
	// BranchTable is the table that holds the branch relation/edge.
	BranchTable = "cabinet"
	// BranchInverseTable is the table name for the Branch entity.
	// It exists in this package in order to avoid circular dependency with the "branch" package.
	BranchInverseTable = "branch"
	// BranchColumn is the table column denoting the branch relation/edge.
	BranchColumn = "branch_id"
	// BmsTable is the table that holds the bms relation/edge. The primary key declared below.
	BmsTable = "cabinet_bms"
	// BmsInverseTable is the table name for the BatteryModel entity.
	// It exists in this package in order to avoid circular dependency with the "batterymodel" package.
	BmsInverseTable = "battery_model"
	// FaultsTable is the table that holds the faults relation/edge.
	FaultsTable = "cabinet_fault"
	// FaultsInverseTable is the table name for the CabinetFault entity.
	// It exists in this package in order to avoid circular dependency with the "cabinetfault" package.
	FaultsInverseTable = "cabinet_fault"
	// FaultsColumn is the table column denoting the faults relation/edge.
	FaultsColumn = "cabinet_id"
)

// Columns holds all SQL columns for cabinet fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldCreator,
	FieldLastModifier,
	FieldRemark,
	FieldBranchID,
	FieldSn,
	FieldBrand,
	FieldSerial,
	FieldName,
	FieldDoors,
	FieldStatus,
	FieldModels,
	FieldHealth,
	FieldBin,
	FieldBatteryNum,
	FieldBatteryFullNum,
}

var (
	// BmsPrimaryKey and BmsColumn2 are the table columns denoting the
	// primary key for the bms relation (M2M).
	BmsPrimaryKey = []string{"cabinet_id", "battery_model_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/auroraride/aurservd/internal/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultHealth holds the default value on creation for the "health" field.
	DefaultHealth uint8
	// DefaultBatteryNum holds the default value on creation for the "battery_num" field.
	DefaultBatteryNum uint
	// DefaultBatteryFullNum holds the default value on creation for the "battery_full_num" field.
	DefaultBatteryFullNum uint
)
