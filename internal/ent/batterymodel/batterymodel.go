// Code generated by ent, DO NOT EDIT.

package batterymodel

import (
	"time"
)

const (
	// Label holds the string label denoting the batterymodel type in the database.
	Label = "battery_model"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldModel holds the string denoting the model field in the database.
	FieldModel = "model"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeCabinets holds the string denoting the cabinets edge name in mutations.
	EdgeCabinets = "cabinets"
	// Table holds the table name of the batterymodel in the database.
	Table = "battery_model"
	// CabinetsTable is the table that holds the cabinets relation/edge. The primary key declared below.
	CabinetsTable = "cabinet_models"
	// CabinetsInverseTable is the table name for the Cabinet entity.
	// It exists in this package in order to avoid circular dependency with the "cabinet" package.
	CabinetsInverseTable = "cabinet"
)

// Columns holds all SQL columns for batterymodel fields.
var Columns = []string{
	FieldID,
	FieldModel,
	FieldCreatedAt,
}

var (
	// CabinetsPrimaryKey and CabinetsColumn2 are the table columns denoting the
	// primary key for the cabinets relation (M2M).
	CabinetsPrimaryKey = []string{"cabinet_id", "battery_model_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
