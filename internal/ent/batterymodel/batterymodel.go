// Code generated by entc, DO NOT EDIT.

package batterymodel

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the batterymodel type in the database.
	Label = "battery_model"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldLastModifier holds the string denoting the last_modifier field in the database.
	FieldLastModifier = "last_modifier"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldVoltage holds the string denoting the voltage field in the database.
	FieldVoltage = "voltage"
	// FieldCapacity holds the string denoting the capacity field in the database.
	FieldCapacity = "capacity"
	// EdgeCabinets holds the string denoting the cabinets edge name in mutations.
	EdgeCabinets = "cabinets"
	// EdgePlans holds the string denoting the plans edge name in mutations.
	EdgePlans = "plans"
	// Table holds the table name of the batterymodel in the database.
	Table = "battery_model"
	// CabinetsTable is the table that holds the cabinets relation/edge. The primary key declared below.
	CabinetsTable = "cabinet_bms"
	// CabinetsInverseTable is the table name for the Cabinet entity.
	// It exists in this package in order to avoid circular dependency with the "cabinet" package.
	CabinetsInverseTable = "cabinet"
	// PlansTable is the table that holds the plans relation/edge. The primary key declared below.
	PlansTable = "plan_pms"
	// PlansInverseTable is the table name for the Plan entity.
	// It exists in this package in order to avoid circular dependency with the "plan" package.
	PlansInverseTable = "plan"
)

// Columns holds all SQL columns for batterymodel fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldCreator,
	FieldLastModifier,
	FieldRemark,
	FieldVoltage,
	FieldCapacity,
}

var (
	// CabinetsPrimaryKey and CabinetsColumn2 are the table columns denoting the
	// primary key for the cabinets relation (M2M).
	CabinetsPrimaryKey = []string{"cabinet_id", "battery_model_id"}
	// PlansPrimaryKey and PlansColumn2 are the table columns denoting the
	// primary key for the plans relation (M2M).
	PlansPrimaryKey = []string{"plan_id", "battery_model_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/auroraride/aurservd/internal/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
