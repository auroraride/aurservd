// Code generated by ent, DO NOT EDIT.

package coupon

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the coupon type in the database.
	Label = "coupon"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldLastModifier holds the string denoting the last_modifier field in the database.
	FieldLastModifier = "last_modifier"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldRiderID holds the string denoting the rider_id field in the database.
	FieldRiderID = "rider_id"
	// FieldAssemblyID holds the string denoting the assembly_id field in the database.
	FieldAssemblyID = "assembly_id"
	// FieldOrderID holds the string denoting the order_id field in the database.
	FieldOrderID = "order_id"
	// FieldPlanID holds the string denoting the plan_id field in the database.
	FieldPlanID = "plan_id"
	// FieldTemplateID holds the string denoting the template_id field in the database.
	FieldTemplateID = "template_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldRule holds the string denoting the rule field in the database.
	FieldRule = "rule"
	// FieldMultiple holds the string denoting the multiple field in the database.
	FieldMultiple = "multiple"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldExpiresAt holds the string denoting the expires_at field in the database.
	FieldExpiresAt = "expires_at"
	// FieldUsedAt holds the string denoting the used_at field in the database.
	FieldUsedAt = "used_at"
	// FieldDuration holds the string denoting the duration field in the database.
	FieldDuration = "duration"
	// EdgeRider holds the string denoting the rider edge name in mutations.
	EdgeRider = "rider"
	// EdgeAssembly holds the string denoting the assembly edge name in mutations.
	EdgeAssembly = "assembly"
	// EdgeOrder holds the string denoting the order edge name in mutations.
	EdgeOrder = "order"
	// EdgePlan holds the string denoting the plan edge name in mutations.
	EdgePlan = "plan"
	// EdgeTemplate holds the string denoting the template edge name in mutations.
	EdgeTemplate = "template"
	// EdgeCities holds the string denoting the cities edge name in mutations.
	EdgeCities = "cities"
	// EdgePlans holds the string denoting the plans edge name in mutations.
	EdgePlans = "plans"
	// Table holds the table name of the coupon in the database.
	Table = "coupon"
	// RiderTable is the table that holds the rider relation/edge.
	RiderTable = "coupon"
	// RiderInverseTable is the table name for the Rider entity.
	// It exists in this package in order to avoid circular dependency with the "rider" package.
	RiderInverseTable = "rider"
	// RiderColumn is the table column denoting the rider relation/edge.
	RiderColumn = "rider_id"
	// AssemblyTable is the table that holds the assembly relation/edge.
	AssemblyTable = "coupon"
	// AssemblyInverseTable is the table name for the CouponAssembly entity.
	// It exists in this package in order to avoid circular dependency with the "couponassembly" package.
	AssemblyInverseTable = "coupon_assembly"
	// AssemblyColumn is the table column denoting the assembly relation/edge.
	AssemblyColumn = "assembly_id"
	// OrderTable is the table that holds the order relation/edge.
	OrderTable = "coupon"
	// OrderInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrderInverseTable = "order"
	// OrderColumn is the table column denoting the order relation/edge.
	OrderColumn = "order_id"
	// PlanTable is the table that holds the plan relation/edge.
	PlanTable = "coupon"
	// PlanInverseTable is the table name for the Plan entity.
	// It exists in this package in order to avoid circular dependency with the "plan" package.
	PlanInverseTable = "plan"
	// PlanColumn is the table column denoting the plan relation/edge.
	PlanColumn = "plan_id"
	// TemplateTable is the table that holds the template relation/edge.
	TemplateTable = "coupon"
	// TemplateInverseTable is the table name for the CouponTemplate entity.
	// It exists in this package in order to avoid circular dependency with the "coupontemplate" package.
	TemplateInverseTable = "coupon_template"
	// TemplateColumn is the table column denoting the template relation/edge.
	TemplateColumn = "template_id"
	// CitiesTable is the table that holds the cities relation/edge. The primary key declared below.
	CitiesTable = "coupon_cities"
	// CitiesInverseTable is the table name for the City entity.
	// It exists in this package in order to avoid circular dependency with the "city" package.
	CitiesInverseTable = "city"
	// PlansTable is the table that holds the plans relation/edge. The primary key declared below.
	PlansTable = "coupon_plans"
	// PlansInverseTable is the table name for the Plan entity.
	// It exists in this package in order to avoid circular dependency with the "plan" package.
	PlansInverseTable = "plan"
)

// Columns holds all SQL columns for coupon fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreator,
	FieldLastModifier,
	FieldRemark,
	FieldRiderID,
	FieldAssemblyID,
	FieldOrderID,
	FieldPlanID,
	FieldTemplateID,
	FieldName,
	FieldRule,
	FieldMultiple,
	FieldAmount,
	FieldCode,
	FieldExpiresAt,
	FieldUsedAt,
	FieldDuration,
}

var (
	// CitiesPrimaryKey and CitiesColumn2 are the table columns denoting the
	// primary key for the cities relation (M2M).
	CitiesPrimaryKey = []string{"coupon_id", "city_id"}
	// PlansPrimaryKey and PlansColumn2 are the table columns denoting the
	// primary key for the plans relation (M2M).
	PlansPrimaryKey = []string{"coupon_id", "plan_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/auroraride/aurservd/internal/ent/runtime"
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultMultiple holds the default value on creation for the "multiple" field.
	DefaultMultiple bool
)
