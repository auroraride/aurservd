// Code generated by entc, DO NOT EDIT.

package branch

import (
	"time"
)

const (
	// Label holds the string label denoting the branch type in the database.
	Label = "branch"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldLastModifier holds the string denoting the last_modifier field in the database.
	FieldLastModifier = "last_modifier"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldCityID holds the string denoting the city_id field in the database.
	FieldCityID = "city_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldLng holds the string denoting the lng field in the database.
	FieldLng = "lng"
	// FieldLat holds the string denoting the lat field in the database.
	FieldLat = "lat"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldPhotos holds the string denoting the photos field in the database.
	FieldPhotos = "photos"
	// EdgeContracts holds the string denoting the contracts edge name in mutations.
	EdgeContracts = "contracts"
	// EdgeCabinets holds the string denoting the cabinets edge name in mutations.
	EdgeCabinets = "cabinets"
	// EdgeCity holds the string denoting the city edge name in mutations.
	EdgeCity = "city"
	// Table holds the table name of the branch in the database.
	Table = "branch"
	// ContractsTable is the table that holds the contracts relation/edge.
	ContractsTable = "branch_contract"
	// ContractsInverseTable is the table name for the BranchContract entity.
	// It exists in this package in order to avoid circular dependency with the "branchcontract" package.
	ContractsInverseTable = "branch_contract"
	// ContractsColumn is the table column denoting the contracts relation/edge.
	ContractsColumn = "branch_id"
	// CabinetsTable is the table that holds the cabinets relation/edge.
	CabinetsTable = "cabinet"
	// CabinetsInverseTable is the table name for the Cabinet entity.
	// It exists in this package in order to avoid circular dependency with the "cabinet" package.
	CabinetsInverseTable = "cabinet"
	// CabinetsColumn is the table column denoting the cabinets relation/edge.
	CabinetsColumn = "branch_id"
	// CityTable is the table that holds the city relation/edge.
	CityTable = "branch"
	// CityInverseTable is the table name for the City entity.
	// It exists in this package in order to avoid circular dependency with the "city" package.
	CityInverseTable = "city"
	// CityColumn is the table column denoting the city relation/edge.
	CityColumn = "city_id"
)

// Columns holds all SQL columns for branch fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldCreator,
	FieldLastModifier,
	FieldRemark,
	FieldCityID,
	FieldName,
	FieldLng,
	FieldLat,
	FieldAddress,
	FieldPhotos,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
