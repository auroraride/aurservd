// Code generated by ent, DO NOT EDIT.

package assettransfer

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/auroraride/aurservd/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldDeletedAt, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldRemark, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldStatus, v))
}

// Sn applies equality check predicate on the "sn" field. It's identical to SnEQ.
func Sn(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldSn, v))
}

// FromLocationType applies equality check predicate on the "from_location_type" field. It's identical to FromLocationTypeEQ.
func FromLocationType(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldFromLocationType, v))
}

// FromLocationID applies equality check predicate on the "from_location_id" field. It's identical to FromLocationIDEQ.
func FromLocationID(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldFromLocationID, v))
}

// ToLocationType applies equality check predicate on the "to_location_type" field. It's identical to ToLocationTypeEQ.
func ToLocationType(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldToLocationType, v))
}

// ToLocationID applies equality check predicate on the "to_location_id" field. It's identical to ToLocationIDEQ.
func ToLocationID(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldToLocationID, v))
}

// OutNum applies equality check predicate on the "out_num" field. It's identical to OutNumEQ.
func OutNum(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldOutNum, v))
}

// InNum applies equality check predicate on the "in_num" field. It's identical to InNumEQ.
func InNum(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldInNum, v))
}

// OutUserID applies equality check predicate on the "out_user_id" field. It's identical to OutUserIDEQ.
func OutUserID(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldOutUserID, v))
}

// OutRoleType applies equality check predicate on the "out_role_type" field. It's identical to OutRoleTypeEQ.
func OutRoleType(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldOutRoleType, v))
}

// InUserID applies equality check predicate on the "in_user_id" field. It's identical to InUserIDEQ.
func InUserID(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldInUserID, v))
}

// InRoleType applies equality check predicate on the "in_role_type" field. It's identical to InRoleTypeEQ.
func InRoleType(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldInRoleType, v))
}

// OutTimeAt applies equality check predicate on the "out_time_at" field. It's identical to OutTimeAtEQ.
func OutTimeAt(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldOutTimeAt, v))
}

// InTimeAt applies equality check predicate on the "in_time_at" field. It's identical to InTimeAtEQ.
func InTimeAt(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldInTimeAt, v))
}

// TransferType applies equality check predicate on the "transfer_type" field. It's identical to TransferTypeEQ.
func TransferType(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldTransferType, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldDeletedAt))
}

// CreatorIsNil applies the IsNil predicate on the "creator" field.
func CreatorIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldCreator))
}

// CreatorNotNil applies the NotNil predicate on the "creator" field.
func CreatorNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldCreator))
}

// LastModifierIsNil applies the IsNil predicate on the "last_modifier" field.
func LastModifierIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldLastModifier))
}

// LastModifierNotNil applies the NotNil predicate on the "last_modifier" field.
func LastModifierNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldLastModifier))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkIsNil applies the IsNil predicate on the "remark" field.
func RemarkIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldRemark))
}

// RemarkNotNil applies the NotNil predicate on the "remark" field.
func RemarkNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldRemark))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldContainsFold(FieldRemark, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldStatus, v))
}

// SnEQ applies the EQ predicate on the "sn" field.
func SnEQ(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldSn, v))
}

// SnNEQ applies the NEQ predicate on the "sn" field.
func SnNEQ(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldSn, v))
}

// SnIn applies the In predicate on the "sn" field.
func SnIn(vs ...string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldSn, vs...))
}

// SnNotIn applies the NotIn predicate on the "sn" field.
func SnNotIn(vs ...string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldSn, vs...))
}

// SnGT applies the GT predicate on the "sn" field.
func SnGT(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldSn, v))
}

// SnGTE applies the GTE predicate on the "sn" field.
func SnGTE(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldSn, v))
}

// SnLT applies the LT predicate on the "sn" field.
func SnLT(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldSn, v))
}

// SnLTE applies the LTE predicate on the "sn" field.
func SnLTE(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldSn, v))
}

// SnContains applies the Contains predicate on the "sn" field.
func SnContains(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldContains(FieldSn, v))
}

// SnHasPrefix applies the HasPrefix predicate on the "sn" field.
func SnHasPrefix(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldHasPrefix(FieldSn, v))
}

// SnHasSuffix applies the HasSuffix predicate on the "sn" field.
func SnHasSuffix(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldHasSuffix(FieldSn, v))
}

// SnEqualFold applies the EqualFold predicate on the "sn" field.
func SnEqualFold(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEqualFold(FieldSn, v))
}

// SnContainsFold applies the ContainsFold predicate on the "sn" field.
func SnContainsFold(v string) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldContainsFold(FieldSn, v))
}

// FromLocationTypeEQ applies the EQ predicate on the "from_location_type" field.
func FromLocationTypeEQ(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldFromLocationType, v))
}

// FromLocationTypeNEQ applies the NEQ predicate on the "from_location_type" field.
func FromLocationTypeNEQ(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldFromLocationType, v))
}

// FromLocationTypeIn applies the In predicate on the "from_location_type" field.
func FromLocationTypeIn(vs ...uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldFromLocationType, vs...))
}

// FromLocationTypeNotIn applies the NotIn predicate on the "from_location_type" field.
func FromLocationTypeNotIn(vs ...uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldFromLocationType, vs...))
}

// FromLocationTypeGT applies the GT predicate on the "from_location_type" field.
func FromLocationTypeGT(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldFromLocationType, v))
}

// FromLocationTypeGTE applies the GTE predicate on the "from_location_type" field.
func FromLocationTypeGTE(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldFromLocationType, v))
}

// FromLocationTypeLT applies the LT predicate on the "from_location_type" field.
func FromLocationTypeLT(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldFromLocationType, v))
}

// FromLocationTypeLTE applies the LTE predicate on the "from_location_type" field.
func FromLocationTypeLTE(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldFromLocationType, v))
}

// FromLocationTypeIsNil applies the IsNil predicate on the "from_location_type" field.
func FromLocationTypeIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldFromLocationType))
}

// FromLocationTypeNotNil applies the NotNil predicate on the "from_location_type" field.
func FromLocationTypeNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldFromLocationType))
}

// FromLocationIDEQ applies the EQ predicate on the "from_location_id" field.
func FromLocationIDEQ(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldFromLocationID, v))
}

// FromLocationIDNEQ applies the NEQ predicate on the "from_location_id" field.
func FromLocationIDNEQ(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldFromLocationID, v))
}

// FromLocationIDIn applies the In predicate on the "from_location_id" field.
func FromLocationIDIn(vs ...uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldFromLocationID, vs...))
}

// FromLocationIDNotIn applies the NotIn predicate on the "from_location_id" field.
func FromLocationIDNotIn(vs ...uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldFromLocationID, vs...))
}

// FromLocationIDGT applies the GT predicate on the "from_location_id" field.
func FromLocationIDGT(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldFromLocationID, v))
}

// FromLocationIDGTE applies the GTE predicate on the "from_location_id" field.
func FromLocationIDGTE(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldFromLocationID, v))
}

// FromLocationIDLT applies the LT predicate on the "from_location_id" field.
func FromLocationIDLT(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldFromLocationID, v))
}

// FromLocationIDLTE applies the LTE predicate on the "from_location_id" field.
func FromLocationIDLTE(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldFromLocationID, v))
}

// FromLocationIDIsNil applies the IsNil predicate on the "from_location_id" field.
func FromLocationIDIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldFromLocationID))
}

// FromLocationIDNotNil applies the NotNil predicate on the "from_location_id" field.
func FromLocationIDNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldFromLocationID))
}

// ToLocationTypeEQ applies the EQ predicate on the "to_location_type" field.
func ToLocationTypeEQ(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldToLocationType, v))
}

// ToLocationTypeNEQ applies the NEQ predicate on the "to_location_type" field.
func ToLocationTypeNEQ(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldToLocationType, v))
}

// ToLocationTypeIn applies the In predicate on the "to_location_type" field.
func ToLocationTypeIn(vs ...uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldToLocationType, vs...))
}

// ToLocationTypeNotIn applies the NotIn predicate on the "to_location_type" field.
func ToLocationTypeNotIn(vs ...uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldToLocationType, vs...))
}

// ToLocationTypeGT applies the GT predicate on the "to_location_type" field.
func ToLocationTypeGT(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldToLocationType, v))
}

// ToLocationTypeGTE applies the GTE predicate on the "to_location_type" field.
func ToLocationTypeGTE(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldToLocationType, v))
}

// ToLocationTypeLT applies the LT predicate on the "to_location_type" field.
func ToLocationTypeLT(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldToLocationType, v))
}

// ToLocationTypeLTE applies the LTE predicate on the "to_location_type" field.
func ToLocationTypeLTE(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldToLocationType, v))
}

// ToLocationTypeIsNil applies the IsNil predicate on the "to_location_type" field.
func ToLocationTypeIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldToLocationType))
}

// ToLocationTypeNotNil applies the NotNil predicate on the "to_location_type" field.
func ToLocationTypeNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldToLocationType))
}

// ToLocationIDEQ applies the EQ predicate on the "to_location_id" field.
func ToLocationIDEQ(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldToLocationID, v))
}

// ToLocationIDNEQ applies the NEQ predicate on the "to_location_id" field.
func ToLocationIDNEQ(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldToLocationID, v))
}

// ToLocationIDIn applies the In predicate on the "to_location_id" field.
func ToLocationIDIn(vs ...uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldToLocationID, vs...))
}

// ToLocationIDNotIn applies the NotIn predicate on the "to_location_id" field.
func ToLocationIDNotIn(vs ...uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldToLocationID, vs...))
}

// ToLocationIDGT applies the GT predicate on the "to_location_id" field.
func ToLocationIDGT(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldToLocationID, v))
}

// ToLocationIDGTE applies the GTE predicate on the "to_location_id" field.
func ToLocationIDGTE(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldToLocationID, v))
}

// ToLocationIDLT applies the LT predicate on the "to_location_id" field.
func ToLocationIDLT(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldToLocationID, v))
}

// ToLocationIDLTE applies the LTE predicate on the "to_location_id" field.
func ToLocationIDLTE(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldToLocationID, v))
}

// ToLocationIDIsNil applies the IsNil predicate on the "to_location_id" field.
func ToLocationIDIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldToLocationID))
}

// ToLocationIDNotNil applies the NotNil predicate on the "to_location_id" field.
func ToLocationIDNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldToLocationID))
}

// OutNumEQ applies the EQ predicate on the "out_num" field.
func OutNumEQ(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldOutNum, v))
}

// OutNumNEQ applies the NEQ predicate on the "out_num" field.
func OutNumNEQ(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldOutNum, v))
}

// OutNumIn applies the In predicate on the "out_num" field.
func OutNumIn(vs ...uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldOutNum, vs...))
}

// OutNumNotIn applies the NotIn predicate on the "out_num" field.
func OutNumNotIn(vs ...uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldOutNum, vs...))
}

// OutNumGT applies the GT predicate on the "out_num" field.
func OutNumGT(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldOutNum, v))
}

// OutNumGTE applies the GTE predicate on the "out_num" field.
func OutNumGTE(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldOutNum, v))
}

// OutNumLT applies the LT predicate on the "out_num" field.
func OutNumLT(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldOutNum, v))
}

// OutNumLTE applies the LTE predicate on the "out_num" field.
func OutNumLTE(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldOutNum, v))
}

// OutNumIsNil applies the IsNil predicate on the "out_num" field.
func OutNumIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldOutNum))
}

// OutNumNotNil applies the NotNil predicate on the "out_num" field.
func OutNumNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldOutNum))
}

// InNumEQ applies the EQ predicate on the "in_num" field.
func InNumEQ(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldInNum, v))
}

// InNumNEQ applies the NEQ predicate on the "in_num" field.
func InNumNEQ(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldInNum, v))
}

// InNumIn applies the In predicate on the "in_num" field.
func InNumIn(vs ...uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldInNum, vs...))
}

// InNumNotIn applies the NotIn predicate on the "in_num" field.
func InNumNotIn(vs ...uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldInNum, vs...))
}

// InNumGT applies the GT predicate on the "in_num" field.
func InNumGT(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldInNum, v))
}

// InNumGTE applies the GTE predicate on the "in_num" field.
func InNumGTE(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldInNum, v))
}

// InNumLT applies the LT predicate on the "in_num" field.
func InNumLT(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldInNum, v))
}

// InNumLTE applies the LTE predicate on the "in_num" field.
func InNumLTE(v uint) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldInNum, v))
}

// InNumIsNil applies the IsNil predicate on the "in_num" field.
func InNumIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldInNum))
}

// InNumNotNil applies the NotNil predicate on the "in_num" field.
func InNumNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldInNum))
}

// OutUserIDEQ applies the EQ predicate on the "out_user_id" field.
func OutUserIDEQ(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldOutUserID, v))
}

// OutUserIDNEQ applies the NEQ predicate on the "out_user_id" field.
func OutUserIDNEQ(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldOutUserID, v))
}

// OutUserIDIn applies the In predicate on the "out_user_id" field.
func OutUserIDIn(vs ...uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldOutUserID, vs...))
}

// OutUserIDNotIn applies the NotIn predicate on the "out_user_id" field.
func OutUserIDNotIn(vs ...uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldOutUserID, vs...))
}

// OutUserIDGT applies the GT predicate on the "out_user_id" field.
func OutUserIDGT(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldOutUserID, v))
}

// OutUserIDGTE applies the GTE predicate on the "out_user_id" field.
func OutUserIDGTE(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldOutUserID, v))
}

// OutUserIDLT applies the LT predicate on the "out_user_id" field.
func OutUserIDLT(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldOutUserID, v))
}

// OutUserIDLTE applies the LTE predicate on the "out_user_id" field.
func OutUserIDLTE(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldOutUserID, v))
}

// OutUserIDIsNil applies the IsNil predicate on the "out_user_id" field.
func OutUserIDIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldOutUserID))
}

// OutUserIDNotNil applies the NotNil predicate on the "out_user_id" field.
func OutUserIDNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldOutUserID))
}

// OutRoleTypeEQ applies the EQ predicate on the "out_role_type" field.
func OutRoleTypeEQ(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldOutRoleType, v))
}

// OutRoleTypeNEQ applies the NEQ predicate on the "out_role_type" field.
func OutRoleTypeNEQ(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldOutRoleType, v))
}

// OutRoleTypeIn applies the In predicate on the "out_role_type" field.
func OutRoleTypeIn(vs ...uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldOutRoleType, vs...))
}

// OutRoleTypeNotIn applies the NotIn predicate on the "out_role_type" field.
func OutRoleTypeNotIn(vs ...uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldOutRoleType, vs...))
}

// OutRoleTypeGT applies the GT predicate on the "out_role_type" field.
func OutRoleTypeGT(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldOutRoleType, v))
}

// OutRoleTypeGTE applies the GTE predicate on the "out_role_type" field.
func OutRoleTypeGTE(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldOutRoleType, v))
}

// OutRoleTypeLT applies the LT predicate on the "out_role_type" field.
func OutRoleTypeLT(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldOutRoleType, v))
}

// OutRoleTypeLTE applies the LTE predicate on the "out_role_type" field.
func OutRoleTypeLTE(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldOutRoleType, v))
}

// OutRoleTypeIsNil applies the IsNil predicate on the "out_role_type" field.
func OutRoleTypeIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldOutRoleType))
}

// OutRoleTypeNotNil applies the NotNil predicate on the "out_role_type" field.
func OutRoleTypeNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldOutRoleType))
}

// InUserIDEQ applies the EQ predicate on the "in_user_id" field.
func InUserIDEQ(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldInUserID, v))
}

// InUserIDNEQ applies the NEQ predicate on the "in_user_id" field.
func InUserIDNEQ(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldInUserID, v))
}

// InUserIDIn applies the In predicate on the "in_user_id" field.
func InUserIDIn(vs ...uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldInUserID, vs...))
}

// InUserIDNotIn applies the NotIn predicate on the "in_user_id" field.
func InUserIDNotIn(vs ...uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldInUserID, vs...))
}

// InUserIDGT applies the GT predicate on the "in_user_id" field.
func InUserIDGT(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldInUserID, v))
}

// InUserIDGTE applies the GTE predicate on the "in_user_id" field.
func InUserIDGTE(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldInUserID, v))
}

// InUserIDLT applies the LT predicate on the "in_user_id" field.
func InUserIDLT(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldInUserID, v))
}

// InUserIDLTE applies the LTE predicate on the "in_user_id" field.
func InUserIDLTE(v uint64) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldInUserID, v))
}

// InUserIDIsNil applies the IsNil predicate on the "in_user_id" field.
func InUserIDIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldInUserID))
}

// InUserIDNotNil applies the NotNil predicate on the "in_user_id" field.
func InUserIDNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldInUserID))
}

// InRoleTypeEQ applies the EQ predicate on the "in_role_type" field.
func InRoleTypeEQ(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldInRoleType, v))
}

// InRoleTypeNEQ applies the NEQ predicate on the "in_role_type" field.
func InRoleTypeNEQ(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldInRoleType, v))
}

// InRoleTypeIn applies the In predicate on the "in_role_type" field.
func InRoleTypeIn(vs ...uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldInRoleType, vs...))
}

// InRoleTypeNotIn applies the NotIn predicate on the "in_role_type" field.
func InRoleTypeNotIn(vs ...uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldInRoleType, vs...))
}

// InRoleTypeGT applies the GT predicate on the "in_role_type" field.
func InRoleTypeGT(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldInRoleType, v))
}

// InRoleTypeGTE applies the GTE predicate on the "in_role_type" field.
func InRoleTypeGTE(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldInRoleType, v))
}

// InRoleTypeLT applies the LT predicate on the "in_role_type" field.
func InRoleTypeLT(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldInRoleType, v))
}

// InRoleTypeLTE applies the LTE predicate on the "in_role_type" field.
func InRoleTypeLTE(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldInRoleType, v))
}

// InRoleTypeIsNil applies the IsNil predicate on the "in_role_type" field.
func InRoleTypeIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldInRoleType))
}

// InRoleTypeNotNil applies the NotNil predicate on the "in_role_type" field.
func InRoleTypeNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldInRoleType))
}

// OutTimeAtEQ applies the EQ predicate on the "out_time_at" field.
func OutTimeAtEQ(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldOutTimeAt, v))
}

// OutTimeAtNEQ applies the NEQ predicate on the "out_time_at" field.
func OutTimeAtNEQ(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldOutTimeAt, v))
}

// OutTimeAtIn applies the In predicate on the "out_time_at" field.
func OutTimeAtIn(vs ...time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldOutTimeAt, vs...))
}

// OutTimeAtNotIn applies the NotIn predicate on the "out_time_at" field.
func OutTimeAtNotIn(vs ...time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldOutTimeAt, vs...))
}

// OutTimeAtGT applies the GT predicate on the "out_time_at" field.
func OutTimeAtGT(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldOutTimeAt, v))
}

// OutTimeAtGTE applies the GTE predicate on the "out_time_at" field.
func OutTimeAtGTE(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldOutTimeAt, v))
}

// OutTimeAtLT applies the LT predicate on the "out_time_at" field.
func OutTimeAtLT(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldOutTimeAt, v))
}

// OutTimeAtLTE applies the LTE predicate on the "out_time_at" field.
func OutTimeAtLTE(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldOutTimeAt, v))
}

// OutTimeAtIsNil applies the IsNil predicate on the "out_time_at" field.
func OutTimeAtIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldOutTimeAt))
}

// OutTimeAtNotNil applies the NotNil predicate on the "out_time_at" field.
func OutTimeAtNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldOutTimeAt))
}

// InTimeAtEQ applies the EQ predicate on the "in_time_at" field.
func InTimeAtEQ(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldInTimeAt, v))
}

// InTimeAtNEQ applies the NEQ predicate on the "in_time_at" field.
func InTimeAtNEQ(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldInTimeAt, v))
}

// InTimeAtIn applies the In predicate on the "in_time_at" field.
func InTimeAtIn(vs ...time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldInTimeAt, vs...))
}

// InTimeAtNotIn applies the NotIn predicate on the "in_time_at" field.
func InTimeAtNotIn(vs ...time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldInTimeAt, vs...))
}

// InTimeAtGT applies the GT predicate on the "in_time_at" field.
func InTimeAtGT(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldInTimeAt, v))
}

// InTimeAtGTE applies the GTE predicate on the "in_time_at" field.
func InTimeAtGTE(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldInTimeAt, v))
}

// InTimeAtLT applies the LT predicate on the "in_time_at" field.
func InTimeAtLT(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldInTimeAt, v))
}

// InTimeAtLTE applies the LTE predicate on the "in_time_at" field.
func InTimeAtLTE(v time.Time) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldInTimeAt, v))
}

// InTimeAtIsNil applies the IsNil predicate on the "in_time_at" field.
func InTimeAtIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldInTimeAt))
}

// InTimeAtNotNil applies the NotNil predicate on the "in_time_at" field.
func InTimeAtNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldInTimeAt))
}

// TransferTypeEQ applies the EQ predicate on the "transfer_type" field.
func TransferTypeEQ(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldEQ(FieldTransferType, v))
}

// TransferTypeNEQ applies the NEQ predicate on the "transfer_type" field.
func TransferTypeNEQ(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNEQ(FieldTransferType, v))
}

// TransferTypeIn applies the In predicate on the "transfer_type" field.
func TransferTypeIn(vs ...uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIn(FieldTransferType, vs...))
}

// TransferTypeNotIn applies the NotIn predicate on the "transfer_type" field.
func TransferTypeNotIn(vs ...uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotIn(FieldTransferType, vs...))
}

// TransferTypeGT applies the GT predicate on the "transfer_type" field.
func TransferTypeGT(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGT(FieldTransferType, v))
}

// TransferTypeGTE applies the GTE predicate on the "transfer_type" field.
func TransferTypeGTE(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldGTE(FieldTransferType, v))
}

// TransferTypeLT applies the LT predicate on the "transfer_type" field.
func TransferTypeLT(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLT(FieldTransferType, v))
}

// TransferTypeLTE applies the LTE predicate on the "transfer_type" field.
func TransferTypeLTE(v uint8) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldLTE(FieldTransferType, v))
}

// TransferTypeIsNil applies the IsNil predicate on the "transfer_type" field.
func TransferTypeIsNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldIsNull(FieldTransferType))
}

// TransferTypeNotNil applies the NotNil predicate on the "transfer_type" field.
func TransferTypeNotNil() predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.FieldNotNull(FieldTransferType))
}

// HasDetails applies the HasEdge predicate on the "details" edge.
func HasDetails() predicate.AssetTransfer {
	return predicate.AssetTransfer(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, DetailsTable, DetailsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasDetailsWith applies the HasEdge predicate on the "details" edge with a given conditions (other predicates).
func HasDetailsWith(preds ...predicate.AssetTransferDetails) predicate.AssetTransfer {
	return predicate.AssetTransfer(func(s *sql.Selector) {
		step := newDetailsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AssetTransfer) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AssetTransfer) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AssetTransfer) predicate.AssetTransfer {
	return predicate.AssetTransfer(sql.NotPredicates(p))
}
