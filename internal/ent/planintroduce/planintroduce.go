// Code generated by ent, DO NOT EDIT.

package planintroduce

const (
	// Label holds the string label denoting the planintroduce type in the database.
	Label = "plan_introduce"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldModelID holds the string denoting the model_id field in the database.
	FieldModelID = "model_id"
	// FieldBrandID holds the string denoting the brand_id field in the database.
	FieldBrandID = "brand_id"
	// FieldImage holds the string denoting the image field in the database.
	FieldImage = "image"
	// EdgeModel holds the string denoting the model edge name in mutations.
	EdgeModel = "model"
	// EdgeBrand holds the string denoting the brand edge name in mutations.
	EdgeBrand = "brand"
	// Table holds the table name of the planintroduce in the database.
	Table = "plan_introduce"
	// ModelTable is the table that holds the model relation/edge.
	ModelTable = "plan_introduce"
	// ModelInverseTable is the table name for the BatteryModel entity.
	// It exists in this package in order to avoid circular dependency with the "batterymodel" package.
	ModelInverseTable = "battery_model"
	// ModelColumn is the table column denoting the model relation/edge.
	ModelColumn = "model_id"
	// BrandTable is the table that holds the brand relation/edge.
	BrandTable = "plan_introduce"
	// BrandInverseTable is the table name for the EbikeBrand entity.
	// It exists in this package in order to avoid circular dependency with the "ebikebrand" package.
	BrandInverseTable = "ebike_brand"
	// BrandColumn is the table column denoting the brand relation/edge.
	BrandColumn = "brand_id"
)

// Columns holds all SQL columns for planintroduce fields.
var Columns = []string{
	FieldID,
	FieldModelID,
	FieldBrandID,
	FieldImage,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
