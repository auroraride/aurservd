// Code generated by entc, DO NOT EDIT.

package plan

import (
	"time"
)

const (
	// Label holds the string label denoting the plan type in the database.
	Label = "plan"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldLastModifier holds the string denoting the last_modifier field in the database.
	FieldLastModifier = "last_modifier"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldStart holds the string denoting the start field in the database.
	FieldStart = "start"
	// FieldEnd holds the string denoting the end field in the database.
	FieldEnd = "end"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldDays holds the string denoting the days field in the database.
	FieldDays = "days"
	// FieldCommission holds the string denoting the commission field in the database.
	FieldCommission = "commission"
	// EdgePms holds the string denoting the pms edge name in mutations.
	EdgePms = "pms"
	// EdgeCities holds the string denoting the cities edge name in mutations.
	EdgeCities = "cities"
	// Table holds the table name of the plan in the database.
	Table = "plan"
	// PmsTable is the table that holds the pms relation/edge. The primary key declared below.
	PmsTable = "plan_pms"
	// PmsInverseTable is the table name for the BatteryModel entity.
	// It exists in this package in order to avoid circular dependency with the "batterymodel" package.
	PmsInverseTable = "battery_model"
	// CitiesTable is the table that holds the cities relation/edge. The primary key declared below.
	CitiesTable = "plan_cities"
	// CitiesInverseTable is the table name for the City entity.
	// It exists in this package in order to avoid circular dependency with the "city" package.
	CitiesInverseTable = "city"
)

// Columns holds all SQL columns for plan fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldCreator,
	FieldLastModifier,
	FieldRemark,
	FieldName,
	FieldStart,
	FieldEnd,
	FieldPrice,
	FieldDays,
	FieldCommission,
}

var (
	// PmsPrimaryKey and PmsColumn2 are the table columns denoting the
	// primary key for the pms relation (M2M).
	PmsPrimaryKey = []string{"plan_id", "battery_model_id"}
	// CitiesPrimaryKey and CitiesColumn2 are the table columns denoting the
	// primary key for the cities relation (M2M).
	CitiesPrimaryKey = []string{"plan_id", "city_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
