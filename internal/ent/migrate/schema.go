// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ActivityColumns holds the columns for the "activity" table.
	ActivityColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "link", Type: field.TypeString, Comment: "链接"},
		{Name: "sort", Type: field.TypeInt, Unique: true, Comment: "排序"},
		{Name: "enable", Type: field.TypeBool, Comment: "状态 true:启用 false:禁用", Default: true},
		{Name: "introduction", Type: field.TypeString, Comment: "简介"},
		{Name: "popup", Type: field.TypeBool, Comment: "活动入口:弹窗", Default: false},
		{Name: "home", Type: field.TypeBool, Comment: "活动入口:首页icon", Default: false},
		{Name: "image", Type: field.TypeJSON, Comment: "图片"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注"},
	}
	// ActivityTable holds the schema information for the "activity" table.
	ActivityTable = &schema.Table{
		Name:       "activity",
		Columns:    ActivityColumns,
		PrimaryKey: []*schema.Column{ActivityColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "activity_created_at",
				Unique:  false,
				Columns: []*schema.Column{ActivityColumns[1]},
			},
			{
				Name:    "activity_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ActivityColumns[3]},
			},
		},
	}
	// AgentColumns holds the columns for the "agent" table.
	AgentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Unique: true},
		{Name: "super", Type: field.TypeBool, Comment: "是否超级管理", Default: true},
		{Name: "enterprise_id", Type: field.TypeUint64, Comment: "企业ID"},
		{Name: "enterprise_agents", Type: field.TypeUint64, Nullable: true},
	}
	// AgentTable holds the schema information for the "agent" table.
	AgentTable = &schema.Table{
		Name:       "agent",
		Columns:    AgentColumns,
		PrimaryKey: []*schema.Column{AgentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "agent_enterprise_enterprise",
				Columns:    []*schema.Column{AgentColumns[10]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "agent_enterprise_agents",
				Columns:    []*schema.Column{AgentColumns[11]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "agent_created_at",
				Unique:  false,
				Columns: []*schema.Column{AgentColumns[1]},
			},
			{
				Name:    "agent_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AgentColumns[3]},
			},
			{
				Name:    "agent_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{AgentColumns[10]},
			},
			{
				Name:    "agent_phone",
				Unique:  false,
				Columns: []*schema.Column{AgentColumns[8]},
			},
		},
	}
	// AgreementColumns holds the columns for the "agreement" table.
	AgreementColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "协议名称"},
		{Name: "content", Type: field.TypeString, Size: 2147483647, Comment: "协议内容"},
		{Name: "user_type", Type: field.TypeUint8, Comment: "用户类型 1:个签 2:团签", Default: 1},
		{Name: "force_read_time", Type: field.TypeUint8, Comment: "强制阅读时间", Default: 0},
		{Name: "is_default", Type: field.TypeBool, Comment: "是否为默认协议", Default: false},
		{Name: "hash", Type: field.TypeString, Nullable: true, Comment: "hash"},
		{Name: "url", Type: field.TypeString, Nullable: true, Comment: "url"},
	}
	// AgreementTable holds the schema information for the "agreement" table.
	AgreementTable = &schema.Table{
		Name:       "agreement",
		Columns:    AgreementColumns,
		PrimaryKey: []*schema.Column{AgreementColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "agreement_created_at",
				Unique:  false,
				Columns: []*schema.Column{AgreementColumns[1]},
			},
			{
				Name:    "agreement_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AgreementColumns[3]},
			},
		},
	}
	// AllocateColumns holds the columns for the "allocate" table.
	AllocateColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "type", Type: field.TypeEnum, Comment: "分配类型", Enums: []string{"battery", "ebike"}},
		{Name: "status", Type: field.TypeUint8, Comment: "分配状态"},
		{Name: "time", Type: field.TypeTime, Comment: "分配时间"},
		{Name: "model", Type: field.TypeString, Comment: "电池型号"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
		{Name: "battery_id", Type: field.TypeUint64, Nullable: true},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
		{Name: "agent_id", Type: field.TypeUint64, Nullable: true},
		{Name: "ebike_id", Type: field.TypeUint64, Nullable: true, Comment: "电车ID"},
	}
	// AllocateTable holds the schema information for the "allocate" table.
	AllocateTable = &schema.Table{
		Name:       "allocate",
		Columns:    AllocateColumns,
		PrimaryKey: []*schema.Column{AllocateColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "allocate_rider_rider",
				Columns:    []*schema.Column{AllocateColumns[10]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "allocate_subscribe_subscribe",
				Columns:    []*schema.Column{AllocateColumns[11]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "allocate_employee_employee",
				Columns:    []*schema.Column{AllocateColumns[12]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "allocate_cabinet_cabinet",
				Columns:    []*schema.Column{AllocateColumns[13]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "allocate_store_store",
				Columns:    []*schema.Column{AllocateColumns[14]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "allocate_ebike_brand_brand",
				Columns:    []*schema.Column{AllocateColumns[15]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "allocate_battery_battery",
				Columns:    []*schema.Column{AllocateColumns[16]},
				RefColumns: []*schema.Column{BatteryColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "allocate_enterprise_station_station",
				Columns:    []*schema.Column{AllocateColumns[17]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "allocate_agent_agent",
				Columns:    []*schema.Column{AllocateColumns[18]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "allocate_ebike_allocates",
				Columns:    []*schema.Column{AllocateColumns[19]},
				RefColumns: []*schema.Column{EbikeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "allocate_rider_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[10]},
			},
			{
				Name:    "allocate_subscribe_id",
				Unique:  true,
				Columns: []*schema.Column{AllocateColumns[11]},
			},
			{
				Name:    "allocate_employee_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[12]},
			},
			{
				Name:    "allocate_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[13]},
			},
			{
				Name:    "allocate_store_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[14]},
			},
			{
				Name:    "allocate_brand_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[15]},
			},
			{
				Name:    "allocate_battery_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[16]},
			},
			{
				Name:    "allocate_station_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[17]},
			},
			{
				Name:    "allocate_agent_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[18]},
			},
			{
				Name:    "allocate_time",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[8]},
			},
		},
	}
	// AssetColumns holds the columns for the "asset" table.
	AssetColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "type", Type: field.TypeUint8, Comment: "资产类型 1:电车 2:智能电池 3:非智能电池 4:电柜配件 5:电车配件 6:其它"},
		{Name: "name", Type: field.TypeString, Comment: "资产名称"},
		{Name: "sn", Type: field.TypeString, Nullable: true, Comment: "资产编号"},
		{Name: "status", Type: field.TypeUint8, Comment: "资产状态 0:待入库 1:库存中 2:配送中 3:使用中 4:故障 5:报废", Default: 0},
		{Name: "enable", Type: field.TypeBool, Comment: "是否启用", Default: false},
		{Name: "locations_type", Type: field.TypeUint8, Nullable: true, Comment: "资产位置类型 1:仓库 2:门店 3:站点 4:运维 5:电柜 6:骑手"},
		{Name: "rto_rider_id", Type: field.TypeUint64, Nullable: true, Comment: "以租代购骑手ID，生成后禁止修改"},
		{Name: "check_at", Type: field.TypeTime, Nullable: true, Comment: "盘点时间"},
		{Name: "brand_name", Type: field.TypeString, Nullable: true, Comment: "品牌名称"},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
		{Name: "model_id", Type: field.TypeUint64, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true, Comment: "城市ID"},
		{Name: "material_id", Type: field.TypeUint64, Nullable: true, Comment: "物资ID"},
		{Name: "locations_id", Type: field.TypeUint64, Nullable: true, Comment: "资产位置ID"},
	}
	// AssetTable holds the schema information for the "asset" table.
	AssetTable = &schema.Table{
		Name:       "asset",
		Columns:    AssetColumns,
		PrimaryKey: []*schema.Column{AssetColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_ebike_brand_brand",
				Columns:    []*schema.Column{AssetColumns[16]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_battery_model_model",
				Columns:    []*schema.Column{AssetColumns[17]},
				RefColumns: []*schema.Column{BatteryModelColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_city_city",
				Columns:    []*schema.Column{AssetColumns[18]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_material_material",
				Columns:    []*schema.Column{AssetColumns[19]},
				RefColumns: []*schema.Column{MaterialColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_warehouse_warehouse",
				Columns:    []*schema.Column{AssetColumns[20]},
				RefColumns: []*schema.Column{WarehouseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_store_store",
				Columns:    []*schema.Column{AssetColumns[20]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_cabinet_cabinet",
				Columns:    []*schema.Column{AssetColumns[20]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_enterprise_station_station",
				Columns:    []*schema.Column{AssetColumns[20]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_rider_rider",
				Columns:    []*schema.Column{AssetColumns[20]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_maintainer_operator",
				Columns:    []*schema.Column{AssetColumns[20]},
				RefColumns: []*schema.Column{MaintainerColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "asset_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssetColumns[1]},
			},
			{
				Name:    "asset_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AssetColumns[3]},
			},
			{
				Name:    "asset_brand_id",
				Unique:  false,
				Columns: []*schema.Column{AssetColumns[16]},
			},
			{
				Name:    "asset_model_id",
				Unique:  false,
				Columns: []*schema.Column{AssetColumns[17]},
			},
			{
				Name:    "asset_city_id",
				Unique:  false,
				Columns: []*schema.Column{AssetColumns[18]},
			},
			{
				Name:    "asset_material_id",
				Unique:  false,
				Columns: []*schema.Column{AssetColumns[19]},
			},
		},
	}
	// AssetAttributeValuesColumns holds the columns for the "asset_attribute_values" table.
	AssetAttributeValuesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "value", Type: field.TypeString, Size: 255, Comment: "属性值"},
		{Name: "asset_id", Type: field.TypeUint64, Nullable: true, Comment: "资产ID"},
		{Name: "attribute_id", Type: field.TypeUint64, Nullable: true, Comment: "属性ID"},
	}
	// AssetAttributeValuesTable holds the schema information for the "asset_attribute_values" table.
	AssetAttributeValuesTable = &schema.Table{
		Name:       "asset_attribute_values",
		Columns:    AssetAttributeValuesColumns,
		PrimaryKey: []*schema.Column{AssetAttributeValuesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_attribute_values_asset_values",
				Columns:    []*schema.Column{AssetAttributeValuesColumns[4]},
				RefColumns: []*schema.Column{AssetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_attribute_values_asset_attributes_values",
				Columns:    []*schema.Column{AssetAttributeValuesColumns[5]},
				RefColumns: []*schema.Column{AssetAttributesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assetattributevalues_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssetAttributeValuesColumns[1]},
			},
		},
	}
	// AssetAttributesColumns holds the columns for the "asset_attributes" table.
	AssetAttributesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "asset_type", Type: field.TypeUint8, Nullable: true, Comment: "资产属性类型 1:电车 2:智能电池 3:非智能电池 4:电柜配件 5:电车配件 6:其它"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "key", Type: field.TypeString, Nullable: true, Comment: "键"},
	}
	// AssetAttributesTable holds the schema information for the "asset_attributes" table.
	AssetAttributesTable = &schema.Table{
		Name:       "asset_attributes",
		Columns:    AssetAttributesColumns,
		PrimaryKey: []*schema.Column{AssetAttributesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "assetattributes_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssetAttributesColumns[1]},
			},
		},
	}
	// AssetCheckColumns holds the columns for the "asset_check" table.
	AssetCheckColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "盘点状态 1:待盘点 2:已盘点"},
		{Name: "battery_num", Type: field.TypeUint, Nullable: true, Comment: "应盘点电池数量"},
		{Name: "battery_num_real", Type: field.TypeUint, Nullable: true, Comment: "实盘电池数量"},
		{Name: "ebike_num", Type: field.TypeUint, Nullable: true, Comment: "应盘电车数量"},
		{Name: "ebike_num_real", Type: field.TypeUint, Nullable: true, Comment: "实盘电车数量"},
		{Name: "operate_type", Type: field.TypeUint8, Nullable: true, Comment: "盘点角色类型 1:资产后台 2:门店 3:代理"},
		{Name: "locations_type", Type: field.TypeUint8, Nullable: true, Comment: "盘点位置类型 1:仓库 2:门店 3:代理"},
		{Name: "start_at", Type: field.TypeTime, Nullable: true, Comment: "盘点开始时间"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "盘点结束时间"},
		{Name: "operate_id", Type: field.TypeUint64, Nullable: true, Comment: "盘点人id"},
		{Name: "locations_id", Type: field.TypeUint64, Nullable: true, Comment: "盘点位置id"},
	}
	// AssetCheckTable holds the schema information for the "asset_check" table.
	AssetCheckTable = &schema.Table{
		Name:       "asset_check",
		Columns:    AssetCheckColumns,
		PrimaryKey: []*schema.Column{AssetCheckColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_check_manager_operate_manager",
				Columns:    []*schema.Column{AssetCheckColumns[16]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_store_operate_store",
				Columns:    []*schema.Column{AssetCheckColumns[16]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_agent_operate_agent",
				Columns:    []*schema.Column{AssetCheckColumns[16]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_warehouse_warehouse",
				Columns:    []*schema.Column{AssetCheckColumns[17]},
				RefColumns: []*schema.Column{WarehouseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_store_store",
				Columns:    []*schema.Column{AssetCheckColumns[17]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_enterprise_station_station",
				Columns:    []*schema.Column{AssetCheckColumns[17]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assetcheck_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssetCheckColumns[1]},
			},
			{
				Name:    "assetcheck_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AssetCheckColumns[3]},
			},
		},
	}
	// AssetCheckDetailsColumns holds the columns for the "asset_check_details" table.
	AssetCheckDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "real_locations_type", Type: field.TypeUint8, Nullable: true, Comment: "实际位置类型 1:仓库 2:门店 3:站点 4:运维 5:电柜 6:骑手"},
		{Name: "locations_type", Type: field.TypeUint8, Nullable: true, Comment: "原位置类型 1:仓库 2:门店 3:站点 4:运维 5:电柜 6:骑手"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "处理状态 0:未处理 1:已入库 2:已出库 3:已报废", Default: 0},
		{Name: "result", Type: field.TypeUint8, Nullable: true, Comment: "盘点结果 0:未盘点 1:正常 2:亏 3:盈", Default: 0},
		{Name: "operate_id", Type: field.TypeUint64, Nullable: true, Comment: "操作人id"},
		{Name: "operate_at", Type: field.TypeTime, Nullable: true, Comment: "处理时间"},
		{Name: "asset_id", Type: field.TypeUint64, Nullable: true, Comment: "资产ID"},
		{Name: "check_id", Type: field.TypeUint64, Nullable: true, Comment: "盘点ID"},
		{Name: "maintainer_id", Type: field.TypeUint64, Nullable: true},
		{Name: "locations_id", Type: field.TypeUint64, Nullable: true, Comment: "原位置ID"},
		{Name: "real_locations_id", Type: field.TypeUint64, Nullable: true, Comment: "实际位置ID"},
	}
	// AssetCheckDetailsTable holds the schema information for the "asset_check_details" table.
	AssetCheckDetailsTable = &schema.Table{
		Name:       "asset_check_details",
		Columns:    AssetCheckDetailsColumns,
		PrimaryKey: []*schema.Column{AssetCheckDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_check_details_asset_check_details",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[13]},
				RefColumns: []*schema.Column{AssetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_asset_check_check_details",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[14]},
				RefColumns: []*schema.Column{AssetCheckColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_maintainer_maintainer",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[15]},
				RefColumns: []*schema.Column{MaintainerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_warehouse_warehouse",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[16]},
				RefColumns: []*schema.Column{WarehouseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_store_store",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[16]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_cabinet_cabinet",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[16]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_enterprise_station_station",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[16]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_rider_rider",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[16]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_maintainer_operator",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[16]},
				RefColumns: []*schema.Column{MaintainerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_warehouse_real_warehouse",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[17]},
				RefColumns: []*schema.Column{WarehouseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_store_real_store",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[17]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_cabinet_real_cabinet",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[17]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_enterprise_station_real_station",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[17]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_rider_real_rider",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[17]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_check_details_maintainer_real_operator",
				Columns:    []*schema.Column{AssetCheckDetailsColumns[17]},
				RefColumns: []*schema.Column{MaintainerColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assetcheckdetails_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssetCheckDetailsColumns[1]},
			},
			{
				Name:    "assetcheckdetails_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AssetCheckDetailsColumns[3]},
			},
			{
				Name:    "assetcheckdetails_maintainer_id",
				Unique:  false,
				Columns: []*schema.Column{AssetCheckDetailsColumns[15]},
			},
		},
	}
	// AssetMaintenanceColumns holds the columns for the "asset_maintenance" table.
	AssetMaintenanceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "reason", Type: field.TypeString, Comment: "原因"},
		{Name: "content", Type: field.TypeString, Comment: "内容"},
		{Name: "status", Type: field.TypeUint8, Comment: "维修状态 0:待维修 1:维修中 2:已维修 3:维修失败 4:已取消", Default: 0},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "maintainer_id", Type: field.TypeUint64, Nullable: true},
	}
	// AssetMaintenanceTable holds the schema information for the "asset_maintenance" table.
	AssetMaintenanceTable = &schema.Table{
		Name:       "asset_maintenance",
		Columns:    AssetMaintenanceColumns,
		PrimaryKey: []*schema.Column{AssetMaintenanceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_maintenance_cabinet_cabinet",
				Columns:    []*schema.Column{AssetMaintenanceColumns[10]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_maintenance_maintainer_maintainer",
				Columns:    []*schema.Column{AssetMaintenanceColumns[11]},
				RefColumns: []*schema.Column{MaintainerColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assetmaintenance_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssetMaintenanceColumns[1]},
			},
			{
				Name:    "assetmaintenance_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AssetMaintenanceColumns[3]},
			},
			{
				Name:    "assetmaintenance_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{AssetMaintenanceColumns[10]},
			},
			{
				Name:    "assetmaintenance_maintainer_id",
				Unique:  false,
				Columns: []*schema.Column{AssetMaintenanceColumns[11]},
			},
		},
	}
	// AssetMaintenanceDetailsColumns holds the columns for the "asset_maintenance_details" table.
	AssetMaintenanceDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "asset_id", Type: field.TypeUint64, Nullable: true, Comment: "资产ID"},
		{Name: "maintenance_id", Type: field.TypeUint64, Nullable: true, Comment: "维修ID"},
		{Name: "material_id", Type: field.TypeUint64, Nullable: true, Comment: "物资ID"},
	}
	// AssetMaintenanceDetailsTable holds the schema information for the "asset_maintenance_details" table.
	AssetMaintenanceDetailsTable = &schema.Table{
		Name:       "asset_maintenance_details",
		Columns:    AssetMaintenanceDetailsColumns,
		PrimaryKey: []*schema.Column{AssetMaintenanceDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_maintenance_details_asset_maintenance_details",
				Columns:    []*schema.Column{AssetMaintenanceDetailsColumns[7]},
				RefColumns: []*schema.Column{AssetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_maintenance_details_asset_maintenance_maintenance_details",
				Columns:    []*schema.Column{AssetMaintenanceDetailsColumns[8]},
				RefColumns: []*schema.Column{AssetMaintenanceColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_maintenance_details_material_material",
				Columns:    []*schema.Column{AssetMaintenanceDetailsColumns[9]},
				RefColumns: []*schema.Column{MaterialColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assetmaintenancedetails_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssetMaintenanceDetailsColumns[1]},
			},
			{
				Name:    "assetmaintenancedetails_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AssetMaintenanceDetailsColumns[3]},
			},
			{
				Name:    "assetmaintenancedetails_material_id",
				Unique:  false,
				Columns: []*schema.Column{AssetMaintenanceDetailsColumns[9]},
			},
		},
	}
	// AssetManagerColumns holds the columns for the "asset_manager" table.
	AssetManagerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Size: 30, Comment: "姓名"},
		{Name: "phone", Type: field.TypeString, Size: 30, Comment: "账户/手机号"},
		{Name: "password", Type: field.TypeString, Comment: "密码"},
		{Name: "mini_enable", Type: field.TypeBool, Comment: "仓管小程序人员是否启用", Default: false},
		{Name: "mini_limit", Type: field.TypeUint, Comment: "仓管小程序人员限制范围(km)", Default: 0},
		{Name: "last_signin_at", Type: field.TypeTime, Nullable: true, Comment: "最后登录时间"},
		{Name: "role_id", Type: field.TypeUint64, Nullable: true, Comment: "角色ID"},
	}
	// AssetManagerTable holds the schema information for the "asset_manager" table.
	AssetManagerTable = &schema.Table{
		Name:       "asset_manager",
		Columns:    AssetManagerColumns,
		PrimaryKey: []*schema.Column{AssetManagerColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_manager_asset_role_asset_managers",
				Columns:    []*schema.Column{AssetManagerColumns[13]},
				RefColumns: []*schema.Column{AssetRoleColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assetmanager_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssetManagerColumns[1]},
			},
			{
				Name:    "assetmanager_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AssetManagerColumns[3]},
			},
			{
				Name:    "assetmanager_role_id",
				Unique:  false,
				Columns: []*schema.Column{AssetManagerColumns[13]},
			},
			{
				Name:    "assetmanager_phone",
				Unique:  false,
				Columns: []*schema.Column{AssetManagerColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "assetmanager_name",
				Unique:  false,
				Columns: []*schema.Column{AssetManagerColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// AssetRoleColumns holds the columns for the "asset_role" table.
	AssetRoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "角色"},
		{Name: "permissions", Type: field.TypeJSON, Nullable: true, Comment: "权限列表"},
		{Name: "buildin", Type: field.TypeBool, Comment: "是否内置角色", Default: false},
		{Name: "super", Type: field.TypeBool, Comment: "是否超级管理员", Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AssetRoleTable holds the schema information for the "asset_role" table.
	AssetRoleTable = &schema.Table{
		Name:       "asset_role",
		Columns:    AssetRoleColumns,
		PrimaryKey: []*schema.Column{AssetRoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "assetrole_name",
				Unique:  false,
				Columns: []*schema.Column{AssetRoleColumns[1]},
			},
			{
				Name:    "assetrole_buildin",
				Unique:  false,
				Columns: []*schema.Column{AssetRoleColumns[3]},
			},
		},
	}
	// AssetScrapColumns holds the columns for the "asset_scrap" table.
	AssetScrapColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "reason_type", Type: field.TypeUint8, Nullable: true, Comment: "报废原因 1:丢失 2:损坏 3:其他"},
		{Name: "scrap_at", Type: field.TypeTime, Nullable: true, Comment: "报废时间"},
		{Name: "operate_role_type", Type: field.TypeUint8, Nullable: true, Comment: "报废人员角色类型 1:后台管理 2:门店 3:代理 4:运维 5:电柜 6:骑手"},
		{Name: "sn", Type: field.TypeString, Nullable: true, Comment: "报废编号"},
		{Name: "num", Type: field.TypeUint, Nullable: true, Comment: "报废数量"},
		{Name: "operate_id", Type: field.TypeUint64, Nullable: true, Comment: "操作报废人员ID"},
	}
	// AssetScrapTable holds the schema information for the "asset_scrap" table.
	AssetScrapTable = &schema.Table{
		Name:       "asset_scrap",
		Columns:    AssetScrapColumns,
		PrimaryKey: []*schema.Column{AssetScrapColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_scrap_manager_manager",
				Columns:    []*schema.Column{AssetScrapColumns[11]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_scrap_employee_employee",
				Columns:    []*schema.Column{AssetScrapColumns[11]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_scrap_maintainer_maintainer",
				Columns:    []*schema.Column{AssetScrapColumns[11]},
				RefColumns: []*schema.Column{MaintainerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_scrap_agent_agent",
				Columns:    []*schema.Column{AssetScrapColumns[11]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assetscrap_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssetScrapColumns[1]},
			},
		},
	}
	// AssetScrapDetailsColumns holds the columns for the "asset_scrap_details" table.
	AssetScrapDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "asset_id", Type: field.TypeUint64, Comment: "资产ID"},
		{Name: "scrap_id", Type: field.TypeUint64, Nullable: true, Comment: "报废ID"},
		{Name: "material_id", Type: field.TypeUint64, Nullable: true, Comment: "物资ID"},
	}
	// AssetScrapDetailsTable holds the schema information for the "asset_scrap_details" table.
	AssetScrapDetailsTable = &schema.Table{
		Name:       "asset_scrap_details",
		Columns:    AssetScrapDetailsColumns,
		PrimaryKey: []*schema.Column{AssetScrapDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_scrap_details_asset_scrap_details",
				Columns:    []*schema.Column{AssetScrapDetailsColumns[3]},
				RefColumns: []*schema.Column{AssetColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "asset_scrap_details_asset_scrap_scrap_details",
				Columns:    []*schema.Column{AssetScrapDetailsColumns[4]},
				RefColumns: []*schema.Column{AssetScrapColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_scrap_details_material_material",
				Columns:    []*schema.Column{AssetScrapDetailsColumns[5]},
				RefColumns: []*schema.Column{MaterialColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assetscrapdetails_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssetScrapDetailsColumns[1]},
			},
			{
				Name:    "assetscrapdetails_material_id",
				Unique:  false,
				Columns: []*schema.Column{AssetScrapDetailsColumns[5]},
			},
		},
	}
	// AssetTransferColumns holds the columns for the "asset_transfer" table.
	AssetTransferColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "调拨状态 1:配送中 2:待入库 3:已入库 4:已取消", Default: 0},
		{Name: "sn", Type: field.TypeString, Unique: true, Comment: "调拨单号"},
		{Name: "from_location_type", Type: field.TypeUint8, Nullable: true, Comment: "开始位置类型 1:仓库 2:门店 3:站点 4:运维 5:电柜 6:骑手"},
		{Name: "to_location_type", Type: field.TypeUint8, Nullable: true, Comment: "目标位置类型 1:仓库 2:门店 3:站点 4:运维 5:电柜 6:骑手"},
		{Name: "out_num", Type: field.TypeUint, Nullable: true, Comment: "调出数量"},
		{Name: "in_num", Type: field.TypeUint, Nullable: true, Comment: "调入数量"},
		{Name: "out_operate_type", Type: field.TypeUint8, Nullable: true, Comment: "出库角色类型 1:资产后台 2:门店 3:代理 4:运维 5:电柜 6:骑手"},
		{Name: "out_time_at", Type: field.TypeTime, Nullable: true, Comment: "出库时间"},
		{Name: "reason", Type: field.TypeString, Nullable: true, Comment: "调拨事由"},
		{Name: "type", Type: field.TypeUint8, Nullable: true, Comment: "调拨类型 1:初始入库 2:调拨 3:激活 4:寄存 5:取消寄存 6:退租"},
		{Name: "from_location_id", Type: field.TypeUint64, Nullable: true, Comment: "开始位置ID"},
		{Name: "to_location_id", Type: field.TypeUint64, Nullable: true, Comment: "目标位置ID"},
		{Name: "out_operate_id", Type: field.TypeUint64, Nullable: true, Comment: "出库人id"},
	}
	// AssetTransferTable holds the schema information for the "asset_transfer" table.
	AssetTransferTable = &schema.Table{
		Name:       "asset_transfer",
		Columns:    AssetTransferColumns,
		PrimaryKey: []*schema.Column{AssetTransferColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_transfer_store_from_location_store",
				Columns:    []*schema.Column{AssetTransferColumns[17]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_cabinet_from_location_cabinet",
				Columns:    []*schema.Column{AssetTransferColumns[17]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_enterprise_station_from_location_station",
				Columns:    []*schema.Column{AssetTransferColumns[17]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_rider_from_location_rider",
				Columns:    []*schema.Column{AssetTransferColumns[17]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_maintainer_from_location_operator",
				Columns:    []*schema.Column{AssetTransferColumns[17]},
				RefColumns: []*schema.Column{MaintainerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_warehouse_from_location_warehouse",
				Columns:    []*schema.Column{AssetTransferColumns[17]},
				RefColumns: []*schema.Column{WarehouseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_store_to_location_store",
				Columns:    []*schema.Column{AssetTransferColumns[18]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_cabinet_to_location_cabinet",
				Columns:    []*schema.Column{AssetTransferColumns[18]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_enterprise_station_to_location_station",
				Columns:    []*schema.Column{AssetTransferColumns[18]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_rider_to_location_rider",
				Columns:    []*schema.Column{AssetTransferColumns[18]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_maintainer_to_location_operator",
				Columns:    []*schema.Column{AssetTransferColumns[18]},
				RefColumns: []*schema.Column{MaintainerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_warehouse_to_location_warehouse",
				Columns:    []*schema.Column{AssetTransferColumns[18]},
				RefColumns: []*schema.Column{WarehouseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_manager_out_operate_manager",
				Columns:    []*schema.Column{AssetTransferColumns[19]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_store_out_operate_store",
				Columns:    []*schema.Column{AssetTransferColumns[19]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_agent_out_operate_agent",
				Columns:    []*schema.Column{AssetTransferColumns[19]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_maintainer_out_operate_maintainer",
				Columns:    []*schema.Column{AssetTransferColumns[19]},
				RefColumns: []*schema.Column{MaintainerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_cabinet_out_operate_cabinet",
				Columns:    []*schema.Column{AssetTransferColumns[19]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_rider_out_operate_rider",
				Columns:    []*schema.Column{AssetTransferColumns[19]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assettransfer_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssetTransferColumns[1]},
			},
			{
				Name:    "assettransfer_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AssetTransferColumns[3]},
			},
		},
	}
	// AssetTransferDetailsColumns holds the columns for the "asset_transfer_details" table.
	AssetTransferDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "is_in", Type: field.TypeBool, Comment: "是否入库", Default: false},
		{Name: "in_operate_type", Type: field.TypeUint8, Nullable: true, Comment: "入库角色类型 1:资产后台 2:门店 3:代理 4:运维 5:电柜 6:骑手"},
		{Name: "in_time_at", Type: field.TypeTime, Nullable: true, Comment: "入库时间"},
		{Name: "asset_id", Type: field.TypeUint64, Nullable: true, Comment: "资产ID"},
		{Name: "transfer_id", Type: field.TypeUint64, Nullable: true, Comment: "调拨ID"},
		{Name: "in_operate_id", Type: field.TypeUint64, Nullable: true, Comment: "入库人id"},
	}
	// AssetTransferDetailsTable holds the schema information for the "asset_transfer_details" table.
	AssetTransferDetailsTable = &schema.Table{
		Name:       "asset_transfer_details",
		Columns:    AssetTransferDetailsColumns,
		PrimaryKey: []*schema.Column{AssetTransferDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_transfer_details_asset_transfer_details",
				Columns:    []*schema.Column{AssetTransferDetailsColumns[10]},
				RefColumns: []*schema.Column{AssetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_details_asset_transfer_transfer_details",
				Columns:    []*schema.Column{AssetTransferDetailsColumns[11]},
				RefColumns: []*schema.Column{AssetTransferColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_details_manager_in_operate_manager",
				Columns:    []*schema.Column{AssetTransferDetailsColumns[12]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_details_store_in_operate_store",
				Columns:    []*schema.Column{AssetTransferDetailsColumns[12]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_details_agent_in_operate_agent",
				Columns:    []*schema.Column{AssetTransferDetailsColumns[12]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_details_maintainer_in_operate_maintainer",
				Columns:    []*schema.Column{AssetTransferDetailsColumns[12]},
				RefColumns: []*schema.Column{MaintainerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_details_cabinet_in_operate_cabinet",
				Columns:    []*schema.Column{AssetTransferDetailsColumns[12]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "asset_transfer_details_rider_in_operate_rider",
				Columns:    []*schema.Column{AssetTransferDetailsColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assettransferdetails_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssetTransferDetailsColumns[1]},
			},
			{
				Name:    "assettransferdetails_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AssetTransferDetailsColumns[3]},
			},
		},
	}
	// AssistanceColumns holds the columns for the "assistance" table.
	AssistanceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "救援状态 0:待分配 1:已接单/已分配 2:已拒绝 3:救援失败 4:救援成功待支付 5:救援成功已支付", Default: 0},
		{Name: "lng", Type: field.TypeFloat64, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Comment: "纬度"},
		{Name: "address", Type: field.TypeString, Comment: "详细地址"},
		{Name: "breakdown", Type: field.TypeString, Comment: "故障"},
		{Name: "breakdown_desc", Type: field.TypeString, Nullable: true, Comment: "故障描述"},
		{Name: "breakdown_photos", Type: field.TypeJSON, Comment: "故障照片"},
		{Name: "cancel_reason", Type: field.TypeString, Nullable: true, Comment: "取消原因"},
		{Name: "cancel_reason_desc", Type: field.TypeString, Nullable: true, Comment: "取消原因详细描述"},
		{Name: "distance", Type: field.TypeFloat64, Nullable: true, Comment: "救援距离"},
		{Name: "reason", Type: field.TypeString, Nullable: true, Comment: "救援原因"},
		{Name: "detect_photo", Type: field.TypeString, Nullable: true, Comment: "检测照片"},
		{Name: "joint_photo", Type: field.TypeString, Nullable: true, Comment: "与用户合影"},
		{Name: "cost", Type: field.TypeFloat64, Nullable: true, Comment: "本次救援费用", Default: 0},
		{Name: "refused_desc", Type: field.TypeString, Nullable: true, Comment: "拒绝原因"},
		{Name: "pay_at", Type: field.TypeTime, Nullable: true, Comment: "支付时间"},
		{Name: "allocate_at", Type: field.TypeTime, Nullable: true, Comment: "分配时间"},
		{Name: "wait", Type: field.TypeInt, Comment: "分配等待时间(s)", Default: 0},
		{Name: "free_reason", Type: field.TypeString, Nullable: true, Comment: "免费理由"},
		{Name: "fail_reason", Type: field.TypeString, Nullable: true, Comment: "失败原因"},
		{Name: "process_at", Type: field.TypeTime, Nullable: true, Comment: "救援处理时间"},
		{Name: "price", Type: field.TypeFloat64, Nullable: true, Comment: "救援费用单价 元/公里"},
		{Name: "navi_duration", Type: field.TypeInt, Nullable: true, Comment: "路径导航规划时间 (s)"},
		{Name: "navi_polylines", Type: field.TypeJSON, Nullable: true, Comment: "路径导航规划坐标组"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "order_id", Type: field.TypeUint64, Unique: true, Nullable: true, Comment: "支付订单"},
	}
	// AssistanceTable holds the schema information for the "assistance" table.
	AssistanceTable = &schema.Table{
		Name:       "assistance",
		Columns:    AssistanceColumns,
		PrimaryKey: []*schema.Column{AssistanceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "assistance_store_store",
				Columns:    []*schema.Column{AssistanceColumns[31]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "assistance_rider_rider",
				Columns:    []*schema.Column{AssistanceColumns[32]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "assistance_subscribe_subscribe",
				Columns:    []*schema.Column{AssistanceColumns[33]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "assistance_city_city",
				Columns:    []*schema.Column{AssistanceColumns[34]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "assistance_employee_assistances",
				Columns:    []*schema.Column{AssistanceColumns[35]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "assistance_order_assistance",
				Columns:    []*schema.Column{AssistanceColumns[36]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assistance_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[1]},
			},
			{
				Name:    "assistance_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[3]},
			},
			{
				Name:    "assistance_store_id",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[31]},
			},
			{
				Name:    "assistance_rider_id",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[32]},
			},
			{
				Name:    "assistance_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[33]},
			},
			{
				Name:    "assistance_city_id",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[34]},
			},
			{
				Name:    "assistance_status",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[7]},
			},
			{
				Name:    "assistance_order_id",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[36]},
			},
			{
				Name:    "assistance_employee_id",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[35]},
			},
		},
	}
	// AttendanceColumns holds the columns for the "attendance" table.
	AttendanceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "inventory", Type: field.TypeJSON, Nullable: true, Comment: "物资盘点"},
		{Name: "photo", Type: field.TypeString, Nullable: true, Comment: "上班照片"},
		{Name: "duty", Type: field.TypeBool, Comment: "是否上班盘点"},
		{Name: "date", Type: field.TypeTime, Comment: "日期"},
		{Name: "lng", Type: field.TypeFloat64, Nullable: true, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Nullable: true, Comment: "纬度"},
		{Name: "address", Type: field.TypeString, Nullable: true, Comment: "详细地址"},
		{Name: "distance", Type: field.TypeFloat64, Nullable: true, Comment: "打卡距离"},
		{Name: "employee_id", Type: field.TypeUint64, Comment: "店员ID"},
		{Name: "store_id", Type: field.TypeUint64, Comment: "门店ID"},
	}
	// AttendanceTable holds the schema information for the "attendance" table.
	AttendanceTable = &schema.Table{
		Name:       "attendance",
		Columns:    AttendanceColumns,
		PrimaryKey: []*schema.Column{AttendanceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "attendance_employee_attendances",
				Columns:    []*schema.Column{AttendanceColumns[15]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "attendance_store_attendances",
				Columns:    []*schema.Column{AttendanceColumns[16]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "attendance_created_at",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[1]},
			},
			{
				Name:    "attendance_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[3]},
			},
			{
				Name:    "attendance_date_duty",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[10], AttendanceColumns[9]},
			},
			{
				Name:    "attendance_employee_id",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[15]},
			},
			{
				Name:    "attendance_store_id",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[16]},
			},
		},
	}
	// BatteryColumns holds the columns for the "battery" table.
	BatteryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "sn", Type: field.TypeString, Unique: true, Comment: "电池编号"},
		{Name: "brand", Type: field.TypeOther, Comment: "品牌", SchemaType: map[string]string{"postgres": "character varying"}},
		{Name: "enable", Type: field.TypeBool, Comment: "是否启用", Default: true},
		{Name: "model", Type: field.TypeString, Comment: "电池型号"},
		{Name: "ordinal", Type: field.TypeInt, Nullable: true, Comment: "所在智能柜仓位序号"},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true, Comment: "城市ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "所属团签"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "所属站点Id"},
		{Name: "rider_id", Type: field.TypeUint64, Unique: true, Nullable: true, Comment: "骑手ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Unique: true, Nullable: true, Comment: "订阅ID"},
	}
	// BatteryTable holds the schema information for the "battery" table.
	BatteryTable = &schema.Table{
		Name:       "battery",
		Columns:    BatteryColumns,
		PrimaryKey: []*schema.Column{BatteryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "battery_city_city",
				Columns:    []*schema.Column{BatteryColumns[12]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_cabinet_batteries",
				Columns:    []*schema.Column{BatteryColumns[13]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_enterprise_batteries",
				Columns:    []*schema.Column{BatteryColumns[14]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_enterprise_station_batteries",
				Columns:    []*schema.Column{BatteryColumns[15]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_rider_battery",
				Columns:    []*schema.Column{BatteryColumns[16]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_subscribe_battery",
				Columns:    []*schema.Column{BatteryColumns[17]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "battery_created_at",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[1]},
			},
			{
				Name:    "battery_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[3]},
			},
			{
				Name:    "battery_city_id",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[12]},
			},
			{
				Name:    "battery_cabinet_id_ordinal",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[13], BatteryColumns[11]},
			},
			{
				Name:    "battery_enable",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[9]},
			},
			{
				Name:    "battery_brand",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[8]},
			},
			{
				Name:    "index_battery_model",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[10]},
			},
			{
				Name:    "battery_sn",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// BatteryFlowColumns holds the columns for the "battery_flow" table.
	BatteryFlowColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "sn", Type: field.TypeString, Comment: "电池编号"},
		{Name: "soc", Type: field.TypeFloat64, Comment: "容量, -1代表未查询到", Default: -1},
		{Name: "serial", Type: field.TypeString, Nullable: true, Comment: "电柜编号"},
		{Name: "ordinal", Type: field.TypeInt, Nullable: true, Comment: "仓位序号, 从1开始"},
		{Name: "geom", Type: field.TypeOther, Nullable: true, Comment: "坐标", SchemaType: map[string]string{"postgres": "geometry(POINT, 4326)"}},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注信息"},
		{Name: "battery_id", Type: field.TypeUint64, Comment: "电池ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
	}
	// BatteryFlowTable holds the schema information for the "battery_flow" table.
	BatteryFlowTable = &schema.Table{
		Name:       "battery_flow",
		Columns:    BatteryFlowColumns,
		PrimaryKey: []*schema.Column{BatteryFlowColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "battery_flow_battery_flows",
				Columns:    []*schema.Column{BatteryFlowColumns[9]},
				RefColumns: []*schema.Column{BatteryColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "battery_flow_subscribe_subscribe",
				Columns:    []*schema.Column{BatteryFlowColumns[10]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_flow_cabinet_battery_flows",
				Columns:    []*schema.Column{BatteryFlowColumns[11]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_flow_rider_battery_flows",
				Columns:    []*schema.Column{BatteryFlowColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "batteryflow_created_at",
				Unique:  false,
				Columns: []*schema.Column{BatteryFlowColumns[1]},
			},
			{
				Name:    "batteryflow_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{BatteryFlowColumns[10]},
			},
			{
				Name:    "batteryflow_sn",
				Unique:  false,
				Columns: []*schema.Column{BatteryFlowColumns[3]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// BatteryModelColumns holds the columns for the "battery_model" table.
	BatteryModelColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "model", Type: field.TypeString, Unique: true, Comment: "型号"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "type", Type: field.TypeUint8, Comment: "电池类型 1智能电池 2非智能电池", Default: 1},
		{Name: "voltage", Type: field.TypeUint, Nullable: true, Comment: "电压"},
		{Name: "capacity", Type: field.TypeUint, Nullable: true, Comment: "容量"},
	}
	// BatteryModelTable holds the schema information for the "battery_model" table.
	BatteryModelTable = &schema.Table{
		Name:       "battery_model",
		Columns:    BatteryModelColumns,
		PrimaryKey: []*schema.Column{BatteryModelColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "batterymodel_model",
				Unique:  false,
				Columns: []*schema.Column{BatteryModelColumns[1]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// BranchColumns holds the columns for the "branch" table.
	BranchColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "网点名称"},
		{Name: "lng", Type: field.TypeFloat64, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Comment: "纬度"},
		{Name: "address", Type: field.TypeString, Comment: "详细地址"},
		{Name: "photos", Type: field.TypeJSON, Comment: "网点照片"},
		{Name: "geom", Type: field.TypeOther, Unique: true, Comment: "坐标", SchemaType: map[string]string{"postgres": "geometry"}},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
	}
	// BranchTable holds the schema information for the "branch" table.
	BranchTable = &schema.Table{
		Name:       "branch",
		Columns:    BranchColumns,
		PrimaryKey: []*schema.Column{BranchColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "branch_city_city",
				Columns:    []*schema.Column{BranchColumns[13]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "branch_created_at",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[1]},
			},
			{
				Name:    "branch_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[3]},
			},
			{
				Name:    "branch_city_id",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[13]},
			},
			{
				Name:    "branch_lng_lat",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[8], BranchColumns[9]},
			},
			{
				Name:    "branch_geom",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[12]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIST",
					},
				},
			},
			{
				Name:    "branch_name",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// BranchContractColumns holds the columns for the "branch_contract" table.
	BranchContractColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "landlord_name", Type: field.TypeString, Comment: "房东姓名"},
		{Name: "id_card_number", Type: field.TypeString, Comment: "房东身份证"},
		{Name: "phone", Type: field.TypeString, Comment: "房东手机号"},
		{Name: "bank_number", Type: field.TypeString, Comment: "房东银行卡号"},
		{Name: "pledge", Type: field.TypeFloat64, Comment: "押金"},
		{Name: "rent", Type: field.TypeFloat64, Comment: "租金"},
		{Name: "lease", Type: field.TypeUint, Comment: "租期月数"},
		{Name: "electricity_pledge", Type: field.TypeFloat64, Comment: "电费押金"},
		{Name: "electricity", Type: field.TypeString, Comment: "电费单价"},
		{Name: "area", Type: field.TypeFloat64, Comment: "网点面积"},
		{Name: "start_time", Type: field.TypeTime, Comment: "租期开始时间"},
		{Name: "end_time", Type: field.TypeTime, Comment: "租期结束时间"},
		{Name: "file", Type: field.TypeString, Comment: "合同文件"},
		{Name: "sheets", Type: field.TypeJSON, Comment: "底单"},
		{Name: "branch_id", Type: field.TypeUint64, Comment: "网点ID"},
	}
	// BranchContractTable holds the schema information for the "branch_contract" table.
	BranchContractTable = &schema.Table{
		Name:       "branch_contract",
		Columns:    BranchContractColumns,
		PrimaryKey: []*schema.Column{BranchContractColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "branch_contract_branch_contracts",
				Columns:    []*schema.Column{BranchContractColumns[21]},
				RefColumns: []*schema.Column{BranchColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "branchcontract_created_at",
				Unique:  false,
				Columns: []*schema.Column{BranchContractColumns[1]},
			},
			{
				Name:    "branchcontract_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{BranchContractColumns[3]},
			},
			{
				Name:    "branchcontract_branch_id",
				Unique:  false,
				Columns: []*schema.Column{BranchContractColumns[21]},
			},
		},
	}
	// BusinessColumns holds the columns for the "business" table.
	BusinessColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "type", Type: field.TypeOther, Comment: "业务类型", SchemaType: map[string]string{"postgres": "character varying"}},
		{Name: "bin_info", Type: field.TypeJSON, Nullable: true, Comment: "仓位信息"},
		{Name: "stock_sn", Type: field.TypeString, Nullable: true, Comment: "出入库编码"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "企业ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "battery_id", Type: field.TypeUint64, Nullable: true},
		{Name: "agent_id", Type: field.TypeUint64, Nullable: true},
		{Name: "rto_ebike_id", Type: field.TypeUint64, Nullable: true, Comment: "以租代购车辆ID，生成后禁止修改"},
	}
	// BusinessTable holds the schema information for the "business" table.
	BusinessTable = &schema.Table{
		Name:       "business",
		Columns:    BusinessColumns,
		PrimaryKey: []*schema.Column{BusinessColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "business_rider_rider",
				Columns:    []*schema.Column{BusinessColumns[10]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "business_city_city",
				Columns:    []*schema.Column{BusinessColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "business_subscribe_subscribe",
				Columns:    []*schema.Column{BusinessColumns[12]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "business_employee_employee",
				Columns:    []*schema.Column{BusinessColumns[13]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_store_store",
				Columns:    []*schema.Column{BusinessColumns[14]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_plan_plan",
				Columns:    []*schema.Column{BusinessColumns[15]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_enterprise_enterprise",
				Columns:    []*schema.Column{BusinessColumns[16]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_enterprise_station_station",
				Columns:    []*schema.Column{BusinessColumns[17]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_cabinet_cabinet",
				Columns:    []*schema.Column{BusinessColumns[18]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_battery_battery",
				Columns:    []*schema.Column{BusinessColumns[19]},
				RefColumns: []*schema.Column{BatteryColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_agent_agent",
				Columns:    []*schema.Column{BusinessColumns[20]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_ebike_rto_ebike",
				Columns:    []*schema.Column{BusinessColumns[21]},
				RefColumns: []*schema.Column{EbikeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "business_created_at",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[1]},
			},
			{
				Name:    "business_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[3]},
			},
			{
				Name:    "business_rider_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[10]},
			},
			{
				Name:    "business_city_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[11]},
			},
			{
				Name:    "business_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[12]},
			},
			{
				Name:    "business_employee_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[13]},
			},
			{
				Name:    "business_store_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[14]},
			},
			{
				Name:    "business_plan_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[15]},
			},
			{
				Name:    "business_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[16]},
			},
			{
				Name:    "business_station_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[17]},
			},
			{
				Name:    "business_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[18]},
			},
			{
				Name:    "business_battery_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[19]},
			},
			{
				Name:    "business_agent_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[20]},
			},
			{
				Name:    "business_type",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[7]},
			},
			{
				Name:    "business_stock_sn",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[9]},
			},
			{
				Name:    "business_rto_ebike_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[21]},
			},
		},
	}
	// CabinetColumns holds the columns for the "cabinet" table.
	CabinetColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "sn", Type: field.TypeString, Unique: true, Comment: "编号"},
		{Name: "brand", Type: field.TypeOther, Comment: "品牌", SchemaType: map[string]string{"postgres": "character varying"}},
		{Name: "serial", Type: field.TypeString, Comment: "原始编号"},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "doors", Type: field.TypeInt, Comment: "柜门数量"},
		{Name: "status", Type: field.TypeUint8, Comment: "投放状态 0:未投放 1:运营中 2:维护中"},
		{Name: "lng", Type: field.TypeFloat64, Nullable: true, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Nullable: true, Comment: "纬度"},
		{Name: "geom", Type: field.TypeOther, Nullable: true, Comment: "坐标", SchemaType: map[string]string{"postgres": "geometry"}},
		{Name: "address", Type: field.TypeString, Nullable: true, Comment: "详细地址"},
		{Name: "sim_sn", Type: field.TypeString, Nullable: true, Comment: "SIM卡号"},
		{Name: "sim_date", Type: field.TypeTime, Nullable: true, Comment: "SIM卡到期日期"},
		{Name: "transferred", Type: field.TypeBool, Comment: "电池是否已调拨", Default: false},
		{Name: "intelligent", Type: field.TypeBool, Comment: "是否智能柜", Default: false},
		{Name: "health", Type: field.TypeUint8, Comment: "健康状态 0:离线 1:正常 2:故障", Default: 0},
		{Name: "bin", Type: field.TypeJSON, Nullable: true, Comment: "仓位信息"},
		{Name: "battery_num", Type: field.TypeInt, Comment: "电池总数", Default: 0},
		{Name: "battery_full_num", Type: field.TypeInt, Comment: "满电总数", Default: 0},
		{Name: "battery_charging_num", Type: field.TypeInt, Comment: "充电总数", Default: 0},
		{Name: "empty_bin_num", Type: field.TypeInt, Comment: "空仓数量", Default: 0},
		{Name: "locked_bin_num", Type: field.TypeInt, Comment: "锁仓数量", Default: 0},
		{Name: "maintenance_at", Type: field.TypeTime, Nullable: true, Comment: "维护时间"},
		{Name: "branch_id", Type: field.TypeUint64, Nullable: true, Comment: "网点"},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true, Comment: "城市ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "maintainer_id", Type: field.TypeUint64, Nullable: true},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "团签ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
	}
	// CabinetTable holds the schema information for the "cabinet" table.
	CabinetTable = &schema.Table{
		Name:       "cabinet",
		Columns:    CabinetColumns,
		PrimaryKey: []*schema.Column{CabinetColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cabinet_branch_cabinets",
				Columns:    []*schema.Column{CabinetColumns[29]},
				RefColumns: []*schema.Column{BranchColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cabinet_city_city",
				Columns:    []*schema.Column{CabinetColumns[30]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cabinet_store_store",
				Columns:    []*schema.Column{CabinetColumns[31]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cabinet_maintainer_maintainer",
				Columns:    []*schema.Column{CabinetColumns[32]},
				RefColumns: []*schema.Column{MaintainerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cabinet_enterprise_cabinets",
				Columns:    []*schema.Column{CabinetColumns[33]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cabinet_enterprise_station_cabinets",
				Columns:    []*schema.Column{CabinetColumns[34]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "cabinet_created_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[1]},
			},
			{
				Name:    "cabinet_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[3]},
			},
			{
				Name:    "cabinet_city_id",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[30]},
			},
			{
				Name:    "cabinet_store_id",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[31]},
			},
			{
				Name:    "cabinet_maintainer_id",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[32]},
			},
			{
				Name:    "cabinet_branch_id",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[29]},
			},
			{
				Name:    "cabinet_brand",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[8]},
			},
			{
				Name:    "cabinet_serial",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "cabinet_name",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[10]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "cabinet_bin",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[22]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "jsonb_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "cabinet_sim_date",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[18]},
			},
			{
				Name:    "cabinet_lng_lat",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[13], CabinetColumns[14]},
			},
			{
				Name:    "cabinet_geom",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[15]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIST",
					},
				},
			},
		},
	}
	// CabinetEcColumns holds the columns for the "cabinet_ec" table.
	CabinetEcColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "serial", Type: field.TypeString, Comment: "电柜原始编号"},
		{Name: "date", Type: field.TypeString, Comment: "日期 YYYY-MM"},
		{Name: "start", Type: field.TypeFloat64, Comment: "开始电量"},
		{Name: "end", Type: field.TypeFloat64, Nullable: true, Comment: "结束电量"},
		{Name: "total", Type: field.TypeFloat64, Comment: "耗电量"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
	}
	// CabinetEcTable holds the schema information for the "cabinet_ec" table.
	CabinetEcTable = &schema.Table{
		Name:       "cabinet_ec",
		Columns:    CabinetEcColumns,
		PrimaryKey: []*schema.Column{CabinetEcColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cabinet_ec_cabinet_cabinet",
				Columns:    []*schema.Column{CabinetEcColumns[9]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "cabinetec_created_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetEcColumns[1]},
			},
			{
				Name:    "cabinetec_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetEcColumns[3]},
			},
			{
				Name:    "cabinetec_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{CabinetEcColumns[9]},
			},
		},
	}
	// CabinetFaultColumns holds the columns for the "cabinet_fault" table.
	CabinetFaultColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "故障状态 0未处理 1已处理", Default: 0},
		{Name: "fault", Type: field.TypeString, Nullable: true, Comment: "故障内容"},
		{Name: "attachments", Type: field.TypeJSON, Nullable: true, Comment: "附件"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "故障留言"},
		{Name: "branch_id", Type: field.TypeUint64, Comment: "网点ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Comment: "电柜ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
	}
	// CabinetFaultTable holds the schema information for the "cabinet_fault" table.
	CabinetFaultTable = &schema.Table{
		Name:       "cabinet_fault",
		Columns:    CabinetFaultColumns,
		PrimaryKey: []*schema.Column{CabinetFaultColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cabinet_fault_branch_faults",
				Columns:    []*schema.Column{CabinetFaultColumns[11]},
				RefColumns: []*schema.Column{BranchColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "cabinet_fault_cabinet_faults",
				Columns:    []*schema.Column{CabinetFaultColumns[12]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "cabinet_fault_city_city",
				Columns:    []*schema.Column{CabinetFaultColumns[13]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "cabinet_fault_rider_faults",
				Columns:    []*schema.Column{CabinetFaultColumns[14]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "cabinetfault_created_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[1]},
			},
			{
				Name:    "cabinetfault_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[3]},
			},
			{
				Name:    "cabinetfault_city_id",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[13]},
			},
			{
				Name:    "cabinetfault_branch_id",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[11]},
			},
			{
				Name:    "cabinetfault_status",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[7]},
			},
		},
	}
	// CityColumns holds the columns for the "city" table.
	CityColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "open", Type: field.TypeBool, Nullable: true, Comment: "启用"},
		{Name: "name", Type: field.TypeString, Size: 100, Comment: "城市"},
		{Name: "code", Type: field.TypeString, Size: 10, Comment: "城市编号"},
		{Name: "lng", Type: field.TypeFloat64, Nullable: true, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Nullable: true, Comment: "纬度"},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true, Comment: "父级"},
	}
	// CityTable holds the schema information for the "city" table.
	CityTable = &schema.Table{
		Name:       "city",
		Columns:    CityColumns,
		PrimaryKey: []*schema.Column{CityColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "city_city_children",
				Columns:    []*schema.Column{CityColumns[12]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "city_created_at",
				Unique:  false,
				Columns: []*schema.Column{CityColumns[1]},
			},
			{
				Name:    "city_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CityColumns[3]},
			},
			{
				Name:    "city_open",
				Unique:  false,
				Columns: []*schema.Column{CityColumns[7]},
			},
			{
				Name:    "city_parent_id",
				Unique:  false,
				Columns: []*schema.Column{CityColumns[12]},
			},
		},
	}
	// CommissionColumns holds the columns for the "commission" table.
	CommissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "提成金额"},
		{Name: "status", Type: field.TypeUint8, Comment: "提成状态 0未发放 1已发放", Default: 0},
		{Name: "business_id", Type: field.TypeUint64, Nullable: true},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "员工ID"},
		{Name: "order_id", Type: field.TypeUint64, Unique: true, Comment: "订单ID"},
	}
	// CommissionTable holds the schema information for the "commission" table.
	CommissionTable = &schema.Table{
		Name:       "commission",
		Columns:    CommissionColumns,
		PrimaryKey: []*schema.Column{CommissionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "commission_business_business",
				Columns:    []*schema.Column{CommissionColumns[9]},
				RefColumns: []*schema.Column{BusinessColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_subscribe_subscribe",
				Columns:    []*schema.Column{CommissionColumns[10]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_plan_plan",
				Columns:    []*schema.Column{CommissionColumns[11]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_rider_rider",
				Columns:    []*schema.Column{CommissionColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_employee_commissions",
				Columns:    []*schema.Column{CommissionColumns[13]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_order_commission",
				Columns:    []*schema.Column{CommissionColumns[14]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "commission_created_at",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[1]},
			},
			{
				Name:    "commission_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[3]},
			},
			{
				Name:    "commission_business_id",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[9]},
			},
			{
				Name:    "commission_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[10]},
			},
			{
				Name:    "commission_plan_id",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[11]},
			},
			{
				Name:    "commission_rider_id",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[12]},
			},
			{
				Name:    "commission_status",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[8]},
			},
			{
				Name:    "commission_order_id",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[14]},
			},
			{
				Name:    "commission_employee_id",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[13]},
			},
		},
	}
	// ContractColumns holds the columns for the "contract" table.
	ContractColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "状态", Default: 0},
		{Name: "flow_id", Type: field.TypeString, Unique: true, Size: 64, Comment: "E签宝流程ID"},
		{Name: "sn", Type: field.TypeString, Unique: true, Size: 64, Comment: "合同编码"},
		{Name: "files", Type: field.TypeJSON, Nullable: true, Comment: "合同链接"},
		{Name: "effective", Type: field.TypeBool, Comment: "是否有效", Default: true},
		{Name: "rider_info", Type: field.TypeJSON, Nullable: true, Comment: "骑手信息"},
		{Name: "link", Type: field.TypeString, Nullable: true, Comment: "跳转URL"},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true, Comment: "合同过期时间"},
		{Name: "signed_at", Type: field.TypeTime, Nullable: true, Comment: "签约时间"},
		{Name: "doc_id", Type: field.TypeString, Nullable: true, Comment: "合同文档ID"},
		{Name: "allocate_id", Type: field.TypeUint64, Unique: true, Nullable: true, Comment: "电车分配ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手"},
	}
	// ContractTable holds the schema information for the "contract" table.
	ContractTable = &schema.Table{
		Name:       "contract",
		Columns:    ContractColumns,
		PrimaryKey: []*schema.Column{ContractColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contract_allocate_contract",
				Columns:    []*schema.Column{ContractColumns[17]},
				RefColumns: []*schema.Column{AllocateColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "contract_subscribe_subscribe",
				Columns:    []*schema.Column{ContractColumns[18]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "contract_employee_employee",
				Columns:    []*schema.Column{ContractColumns[19]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "contract_rider_contracts",
				Columns:    []*schema.Column{ContractColumns[20]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "contract_created_at",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[1]},
			},
			{
				Name:    "contract_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[3]},
			},
			{
				Name:    "contract_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[18]},
			},
			{
				Name:    "contract_employee_id",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[19]},
			},
			{
				Name:    "contract_rider_id",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[20]},
			},
			{
				Name:    "contract_status_effective",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[7], ContractColumns[11]},
			},
		},
	}
	// ContractTemplateColumns holds the columns for the "contract_template" table.
	ContractTemplateColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "模板名称"},
		{Name: "url", Type: field.TypeString, Comment: "模板文件地址"},
		{Name: "aimed", Type: field.TypeUint8, Comment: "用户类型 1:个签 2:团签", Default: 1},
		{Name: "plan_type", Type: field.TypeUint8, Comment: "套餐类型 1:单电 2:车电", Default: 1},
		{Name: "hash", Type: field.TypeString, Comment: "模板hash"},
		{Name: "enable", Type: field.TypeBool, Comment: "是否启用", Default: false},
	}
	// ContractTemplateTable holds the schema information for the "contract_template" table.
	ContractTemplateTable = &schema.Table{
		Name:       "contract_template",
		Columns:    ContractTemplateColumns,
		PrimaryKey: []*schema.Column{ContractTemplateColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "contracttemplate_created_at",
				Unique:  false,
				Columns: []*schema.Column{ContractTemplateColumns[1]},
			},
			{
				Name:    "contracttemplate_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ContractTemplateColumns[3]},
			},
		},
	}
	// CouponColumns holds the columns for the "coupon" table.
	CouponColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "rule", Type: field.TypeUint8, Comment: "使用规则"},
		{Name: "multiple", Type: field.TypeBool, Comment: "该券是否可叠加", Default: false},
		{Name: "amount", Type: field.TypeFloat64, Comment: "金额"},
		{Name: "code", Type: field.TypeString, Unique: true, Comment: "券码"},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true, Comment: "过期时间"},
		{Name: "used_at", Type: field.TypeTime, Nullable: true, Comment: "使用时间"},
		{Name: "duration", Type: field.TypeJSON, Comment: "有效期规则"},
		{Name: "plans", Type: field.TypeJSON, Nullable: true, Comment: "可用骑士卡"},
		{Name: "cities", Type: field.TypeJSON, Nullable: true, Comment: "可用城市"},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
		{Name: "assembly_id", Type: field.TypeUint64},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true, Comment: "实际使用骑士卡"},
		{Name: "template_id", Type: field.TypeUint64},
		{Name: "order_id", Type: field.TypeUint64, Nullable: true, Comment: "订单ID"},
	}
	// CouponTable holds the schema information for the "coupon" table.
	CouponTable = &schema.Table{
		Name:       "coupon",
		Columns:    CouponColumns,
		PrimaryKey: []*schema.Column{CouponColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "coupon_rider_rider",
				Columns:    []*schema.Column{CouponColumns[16]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "coupon_coupon_assembly_assembly",
				Columns:    []*schema.Column{CouponColumns[17]},
				RefColumns: []*schema.Column{CouponAssemblyColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "coupon_plan_plan",
				Columns:    []*schema.Column{CouponColumns[18]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "coupon_coupon_template_coupons",
				Columns:    []*schema.Column{CouponColumns[19]},
				RefColumns: []*schema.Column{CouponTemplateColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "coupon_order_coupons",
				Columns:    []*schema.Column{CouponColumns[20]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "coupon_created_at",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[1]},
			},
			{
				Name:    "coupon_rider_id",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[16]},
			},
			{
				Name:    "coupon_assembly_id",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[17]},
			},
			{
				Name:    "coupon_plan_id",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[18]},
			},
			{
				Name:    "coupon_name",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[6]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "coupon_order_id",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[20]},
			},
			{
				Name:    "coupon_template_id",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[19]},
			},
			{
				Name:    "coupon_multiple",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[8]},
			},
			{
				Name:    "coupon_expires_at",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[11]},
			},
			{
				Name:    "coupon_used_at",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[12]},
			},
		},
	}
	// CouponAssemblyColumns holds the columns for the "coupon_assembly" table.
	CouponAssemblyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "number", Type: field.TypeInt, Comment: "数量"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "金额"},
		{Name: "target", Type: field.TypeUint8, Comment: "发送对象"},
		{Name: "meta", Type: field.TypeJSON, Comment: "详情"},
		{Name: "template_id", Type: field.TypeUint64},
	}
	// CouponAssemblyTable holds the schema information for the "coupon_assembly" table.
	CouponAssemblyTable = &schema.Table{
		Name:       "coupon_assembly",
		Columns:    CouponAssemblyColumns,
		PrimaryKey: []*schema.Column{CouponAssemblyColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "coupon_assembly_coupon_template_template",
				Columns:    []*schema.Column{CouponAssemblyColumns[11]},
				RefColumns: []*schema.Column{CouponTemplateColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "couponassembly_created_at",
				Unique:  false,
				Columns: []*schema.Column{CouponAssemblyColumns[1]},
			},
			{
				Name:    "couponassembly_template_id",
				Unique:  false,
				Columns: []*schema.Column{CouponAssemblyColumns[11]},
			},
		},
	}
	// CouponTemplateColumns holds the columns for the "coupon_template" table.
	CouponTemplateColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "enable", Type: field.TypeBool, Comment: "是否启用", Default: true},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "meta", Type: field.TypeJSON, Comment: "详情"},
	}
	// CouponTemplateTable holds the schema information for the "coupon_template" table.
	CouponTemplateTable = &schema.Table{
		Name:       "coupon_template",
		Columns:    CouponTemplateColumns,
		PrimaryKey: []*schema.Column{CouponTemplateColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "coupontemplate_created_at",
				Unique:  false,
				Columns: []*schema.Column{CouponTemplateColumns[1]},
			},
		},
	}
	// EbikeColumns holds the columns for the "ebike" table.
	EbikeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeOther, Comment: "状态", SchemaType: map[string]string{"postgres": "smallint"}},
		{Name: "enable", Type: field.TypeBool, Comment: "是否启用", Default: true},
		{Name: "sn", Type: field.TypeString, Unique: true, Comment: "车架号"},
		{Name: "plate", Type: field.TypeString, Unique: true, Nullable: true, Comment: "车牌号"},
		{Name: "machine", Type: field.TypeString, Unique: true, Nullable: true, Comment: "终端编号"},
		{Name: "sim", Type: field.TypeString, Unique: true, Nullable: true, Comment: "SIM卡号"},
		{Name: "color", Type: field.TypeString, Comment: "颜色", Default: "橘黄"},
		{Name: "ex_factory", Type: field.TypeString, Comment: "生产批次(出厂日期)"},
		{Name: "brand_id", Type: field.TypeUint64},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "企业ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
		{Name: "rto_rider_id", Type: field.TypeUint64, Nullable: true, Comment: "以租代购骑手ID，生成后禁止修改"},
	}
	// EbikeTable holds the schema information for the "ebike" table.
	EbikeTable = &schema.Table{
		Name:       "ebike",
		Columns:    EbikeColumns,
		PrimaryKey: []*schema.Column{EbikeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ebike_ebike_brand_brand",
				Columns:    []*schema.Column{EbikeColumns[14]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "ebike_rider_rider",
				Columns:    []*schema.Column{EbikeColumns[15]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ebike_store_store",
				Columns:    []*schema.Column{EbikeColumns[16]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ebike_enterprise_enterprise",
				Columns:    []*schema.Column{EbikeColumns[17]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ebike_enterprise_station_station",
				Columns:    []*schema.Column{EbikeColumns[18]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ebike_rider_rto_rider",
				Columns:    []*schema.Column{EbikeColumns[19]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ebike_created_at",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[1]},
			},
			{
				Name:    "ebike_brand_id",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[14]},
			},
			{
				Name:    "ebike_rider_id",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[15]},
			},
			{
				Name:    "ebike_store_id",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[16]},
			},
			{
				Name:    "ebike_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[17]},
			},
			{
				Name:    "ebike_station_id",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[18]},
			},
			{
				Name:    "ebike_status",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[6]},
			},
			{
				Name:    "ebike_ex_factory",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[13]},
			},
			{
				Name:    "ebike_rto_rider_id",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[19]},
			},
		},
	}
	// EbikeBrandColumns holds the columns for the "ebike_brand" table.
	EbikeBrandColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "cover", Type: field.TypeString, Comment: "封面缩略图"},
		{Name: "main_pic", Type: field.TypeJSON, Nullable: true, Comment: "主图"},
	}
	// EbikeBrandTable holds the schema information for the "ebike_brand" table.
	EbikeBrandTable = &schema.Table{
		Name:       "ebike_brand",
		Columns:    EbikeBrandColumns,
		PrimaryKey: []*schema.Column{EbikeBrandColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "ebikebrand_created_at",
				Unique:  false,
				Columns: []*schema.Column{EbikeBrandColumns[1]},
			},
			{
				Name:    "ebikebrand_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EbikeBrandColumns[3]},
			},
		},
	}
	// EbikeBrandAttributeColumns holds the columns for the "ebike_brand_attribute" table.
	EbikeBrandAttributeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "属性名称"},
		{Name: "value", Type: field.TypeString, Comment: "属性值"},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true, Comment: "品牌ID"},
	}
	// EbikeBrandAttributeTable holds the schema information for the "ebike_brand_attribute" table.
	EbikeBrandAttributeTable = &schema.Table{
		Name:       "ebike_brand_attribute",
		Columns:    EbikeBrandAttributeColumns,
		PrimaryKey: []*schema.Column{EbikeBrandAttributeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ebike_brand_attribute_ebike_brand_brand_attribute",
				Columns:    []*schema.Column{EbikeBrandAttributeColumns[9]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ebikebrandattribute_created_at",
				Unique:  false,
				Columns: []*schema.Column{EbikeBrandAttributeColumns[1]},
			},
			{
				Name:    "ebikebrandattribute_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EbikeBrandAttributeColumns[3]},
			},
		},
	}
	// EmployeeColumns holds the columns for the "employee" table.
	EmployeeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "sn", Type: field.TypeUUID, Unique: true, Nullable: true},
		{Name: "name", Type: field.TypeString, Comment: "姓名"},
		{Name: "phone", Type: field.TypeString, Comment: "电话"},
		{Name: "enable", Type: field.TypeBool, Comment: "启用状态", Default: true},
		{Name: "password", Type: field.TypeString, Nullable: true, Comment: "密码"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
	}
	// EmployeeTable holds the schema information for the "employee" table.
	EmployeeTable = &schema.Table{
		Name:       "employee",
		Columns:    EmployeeColumns,
		PrimaryKey: []*schema.Column{EmployeeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "employee_city_city",
				Columns:    []*schema.Column{EmployeeColumns[12]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "employee_created_at",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[1]},
			},
			{
				Name:    "employee_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[3]},
			},
			{
				Name:    "employee_city_id",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[12]},
			},
			{
				Name:    "employee_enable",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[10]},
			},
			{
				Name:    "employee_name",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "employee_phone",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// EnterpriseColumns holds the columns for the "enterprise" table.
	EnterpriseColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "团签名称"},
		{Name: "company_name", Type: field.TypeString, Nullable: true, Comment: "企业全称"},
		{Name: "status", Type: field.TypeUint8, Comment: "合作状态 0未合作 1合作中 2暂停合作"},
		{Name: "contact_name", Type: field.TypeString, Comment: "联系人姓名"},
		{Name: "contact_phone", Type: field.TypeString, Comment: "联系人电话"},
		{Name: "idcard_number", Type: field.TypeString, Comment: "身份证号码"},
		{Name: "address", Type: field.TypeString, Comment: "地址"},
		{Name: "payment", Type: field.TypeUint8, Comment: "付费方式 1预付费 2后付费"},
		{Name: "deposit", Type: field.TypeFloat64, Comment: "押金", Default: 0},
		{Name: "balance", Type: field.TypeFloat64, Comment: "账户余额", Default: 0},
		{Name: "prepayment_total", Type: field.TypeFloat64, Comment: "总储值金额 = 总金额 - 轧账金额(修改价格后自动轧账)", Default: 0},
		{Name: "suspensed_at", Type: field.TypeTime, Nullable: true, Comment: "暂停合作时间"},
		{Name: "agent", Type: field.TypeBool, Comment: "代理商模式", Default: false},
		{Name: "use_store", Type: field.TypeBool, Nullable: true, Comment: "是否可以使用门店, 只有代理商模式生效", Default: true},
		{Name: "days", Type: field.TypeJSON, Nullable: true, Comment: "代理商时间选项"},
		{Name: "distance", Type: field.TypeFloat64, Comment: "可控制电柜距离（米）", Default: 200},
		{Name: "recharge_amount", Type: field.TypeJSON, Nullable: true, Comment: "充值金额选项"},
		{Name: "sign_type", Type: field.TypeEnum, Nullable: true, Comment: "签约类型 without:无需签约 rider:骑手签约 tripartite:三方签约", Enums: []string{"without", "rider", "tripartite"}, Default: "without"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
	}
	// EnterpriseTable holds the schema information for the "enterprise" table.
	EnterpriseTable = &schema.Table{
		Name:       "enterprise",
		Columns:    EnterpriseColumns,
		PrimaryKey: []*schema.Column{EnterpriseColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_city_city",
				Columns:    []*schema.Column{EnterpriseColumns[25]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprise_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[1]},
			},
			{
				Name:    "enterprise_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[3]},
			},
			{
				Name:    "enterprise_city_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[25]},
			},
			{
				Name:    "enterprise_payment",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[14]},
			},
			{
				Name:    "enterprise_balance",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[16]},
			},
			{
				Name:    "enterprise_name",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "enterprise_contact_name",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[10]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "enterprise_contact_phone",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[11]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "enterprise_idcard_number",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[12]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// EnterpriseBatterySwapColumns holds the columns for the "enterprise_battery_swap" table.
	EnterpriseBatterySwapColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "putin_sn", Type: field.TypeString, Comment: "放入的电池编码"},
		{Name: "putout_sn", Type: field.TypeString, Comment: "取出的电池编码"},
		{Name: "putin_enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "放入的电池归属团签ID, 空值是平台骑手放入"},
		{Name: "putout_enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "取出的电池原归属团签ID, 空值是从平台电柜取出"},
		{Name: "exchange_id", Type: field.TypeUint64},
		{Name: "cabinet_id", Type: field.TypeUint64, Comment: "电柜ID"},
		{Name: "putin_id", Type: field.TypeUint64, Comment: "放入的电池ID"},
		{Name: "putout_id", Type: field.TypeUint64, Comment: "取出的电池ID"},
		{Name: "putin_station_id", Type: field.TypeUint64, Nullable: true, Comment: "放入的电池归属站点ID, 空值是平台骑手放入"},
		{Name: "putout_station_id", Type: field.TypeUint64, Nullable: true, Comment: "取出的电池原归属站点ID, 空值是从平台电柜取出"},
	}
	// EnterpriseBatterySwapTable holds the schema information for the "enterprise_battery_swap" table.
	EnterpriseBatterySwapTable = &schema.Table{
		Name:       "enterprise_battery_swap",
		Columns:    EnterpriseBatterySwapColumns,
		PrimaryKey: []*schema.Column{EnterpriseBatterySwapColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_battery_swap_enterprise_swap_putin_batteries",
				Columns:    []*schema.Column{EnterpriseBatterySwapColumns[5]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "enterprise_battery_swap_enterprise_swap_putout_batteries",
				Columns:    []*schema.Column{EnterpriseBatterySwapColumns[6]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "enterprise_battery_swap_exchange_exchange",
				Columns:    []*schema.Column{EnterpriseBatterySwapColumns[7]},
				RefColumns: []*schema.Column{ExchangeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_battery_swap_cabinet_cabinet",
				Columns:    []*schema.Column{EnterpriseBatterySwapColumns[8]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_battery_swap_battery_putin",
				Columns:    []*schema.Column{EnterpriseBatterySwapColumns[9]},
				RefColumns: []*schema.Column{BatteryColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_battery_swap_battery_putout",
				Columns:    []*schema.Column{EnterpriseBatterySwapColumns[10]},
				RefColumns: []*schema.Column{BatteryColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_battery_swap_enterprise_station_swap_putin_batteries",
				Columns:    []*schema.Column{EnterpriseBatterySwapColumns[11]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "enterprise_battery_swap_enterprise_station_swap_putout_batteries",
				Columns:    []*schema.Column{EnterpriseBatterySwapColumns[12]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisebatteryswap_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBatterySwapColumns[1]},
			},
			{
				Name:    "enterprisebatteryswap_exchange_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBatterySwapColumns[7]},
			},
			{
				Name:    "enterprisebatteryswap_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBatterySwapColumns[8]},
			},
			{
				Name:    "enterprisebatteryswap_putin_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBatterySwapColumns[9]},
			},
			{
				Name:    "enterprisebatteryswap_putin_sn",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBatterySwapColumns[3]},
			},
			{
				Name:    "enterprisebatteryswap_putin_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBatterySwapColumns[5]},
			},
			{
				Name:    "enterprisebatteryswap_putin_station_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBatterySwapColumns[11]},
			},
			{
				Name:    "enterprisebatteryswap_putout_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBatterySwapColumns[10]},
			},
			{
				Name:    "enterprisebatteryswap_putout_sn",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBatterySwapColumns[4]},
			},
			{
				Name:    "enterprisebatteryswap_putout_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBatterySwapColumns[6]},
			},
			{
				Name:    "enterprisebatteryswap_putout_station_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBatterySwapColumns[12]},
			},
		},
	}
	// EnterpriseBillColumns holds the columns for the "enterprise_bill" table.
	EnterpriseBillColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "start", Type: field.TypeTime, Comment: "结算开始日期(包含)"},
		{Name: "end", Type: field.TypeTime, Comment: "结算结束日期(包含)"},
		{Name: "days", Type: field.TypeInt, Comment: "账单天数"},
		{Name: "price", Type: field.TypeFloat64, Comment: "账单单价"},
		{Name: "cost", Type: field.TypeFloat64, Comment: "账单金额"},
		{Name: "model", Type: field.TypeString, Comment: "电池型号"},
		{Name: "enterprise_id", Type: field.TypeUint64, Comment: "企业ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
		{Name: "statement_id", Type: field.TypeUint64, Comment: "账单ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Comment: "订阅ID"},
	}
	// EnterpriseBillTable holds the schema information for the "enterprise_bill" table.
	EnterpriseBillTable = &schema.Table{
		Name:       "enterprise_bill",
		Columns:    EnterpriseBillColumns,
		PrimaryKey: []*schema.Column{EnterpriseBillColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_bill_enterprise_bills",
				Columns:    []*schema.Column{EnterpriseBillColumns[13]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_bill_rider_rider",
				Columns:    []*schema.Column{EnterpriseBillColumns[14]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_bill_city_city",
				Columns:    []*schema.Column{EnterpriseBillColumns[15]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_bill_enterprise_station_station",
				Columns:    []*schema.Column{EnterpriseBillColumns[16]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "enterprise_bill_enterprise_statement_bills",
				Columns:    []*schema.Column{EnterpriseBillColumns[17]},
				RefColumns: []*schema.Column{EnterpriseStatementColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_bill_subscribe_bills",
				Columns:    []*schema.Column{EnterpriseBillColumns[18]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisebill_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[1]},
			},
			{
				Name:    "enterprisebill_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[3]},
			},
			{
				Name:    "enterprisebill_rider_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[14]},
			},
			{
				Name:    "enterprisebill_city_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[15]},
			},
			{
				Name:    "enterprisebill_station_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[16]},
			},
			{
				Name:    "enterprisebill_model",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[12]},
			},
			{
				Name:    "enterprisebill_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[13]},
			},
			{
				Name:    "enterprisebill_statement_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[17]},
			},
			{
				Name:    "enterprisebill_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[18]},
			},
		},
	}
	// EnterpriseContractColumns holds the columns for the "enterprise_contract" table.
	EnterpriseContractColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "start", Type: field.TypeTime, Comment: "合同开始时间"},
		{Name: "end", Type: field.TypeTime, Comment: "合同结束时间"},
		{Name: "file", Type: field.TypeString, Comment: "合同文件"},
		{Name: "enterprise_id", Type: field.TypeUint64},
	}
	// EnterpriseContractTable holds the schema information for the "enterprise_contract" table.
	EnterpriseContractTable = &schema.Table{
		Name:       "enterprise_contract",
		Columns:    EnterpriseContractColumns,
		PrimaryKey: []*schema.Column{EnterpriseContractColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_contract_enterprise_contracts",
				Columns:    []*schema.Column{EnterpriseContractColumns[10]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisecontract_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[1]},
			},
			{
				Name:    "enterprisecontract_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[3]},
			},
			{
				Name:    "enterprisecontract_start",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[7]},
			},
			{
				Name:    "enterprisecontract_end",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[8]},
			},
			{
				Name:    "enterprisecontract_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[10]},
			},
		},
	}
	// EnterprisePrepaymentColumns holds the columns for the "enterprise_prepayment" table.
	EnterprisePrepaymentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "预付金额"},
		{Name: "payway", Type: field.TypeOther, Comment: "支付方式", Default: schema.Expr("1"), SchemaType: map[string]string{"postgres": "smallint"}},
		{Name: "trade_no", Type: field.TypeString, Nullable: true, Comment: "支付平台交易单号"},
		{Name: "enterprise_id", Type: field.TypeUint64, Comment: "企业ID"},
		{Name: "agent_id", Type: field.TypeUint64, Nullable: true},
	}
	// EnterprisePrepaymentTable holds the schema information for the "enterprise_prepayment" table.
	EnterprisePrepaymentTable = &schema.Table{
		Name:       "enterprise_prepayment",
		Columns:    EnterprisePrepaymentColumns,
		PrimaryKey: []*schema.Column{EnterprisePrepaymentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_prepayment_enterprise_enterprise",
				Columns:    []*schema.Column{EnterprisePrepaymentColumns[9]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_prepayment_agent_agent",
				Columns:    []*schema.Column{EnterprisePrepaymentColumns[10]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterpriseprepayment_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePrepaymentColumns[1]},
			},
			{
				Name:    "enterpriseprepayment_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePrepaymentColumns[9]},
			},
			{
				Name:    "enterpriseprepayment_agent_id",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePrepaymentColumns[10]},
			},
		},
	}
	// EnterprisePriceColumns holds the columns for the "enterprise_price" table.
	EnterprisePriceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "price", Type: field.TypeFloat64, Comment: "单价 元/天"},
		{Name: "model", Type: field.TypeString, Comment: "可用电池型号"},
		{Name: "intelligent", Type: field.TypeBool, Comment: "是否智能电池", Default: false},
		{Name: "enterprise_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
		{Name: "agreement_id", Type: field.TypeUint64, Nullable: true},
	}
	// EnterprisePriceTable holds the schema information for the "enterprise_price" table.
	EnterprisePriceTable = &schema.Table{
		Name:       "enterprise_price",
		Columns:    EnterprisePriceColumns,
		PrimaryKey: []*schema.Column{EnterprisePriceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_price_enterprise_prices",
				Columns:    []*schema.Column{EnterprisePriceColumns[10]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_price_city_city",
				Columns:    []*schema.Column{EnterprisePriceColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_price_ebike_brand_brand",
				Columns:    []*schema.Column{EnterprisePriceColumns[12]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "enterprise_price_agreement_agreement",
				Columns:    []*schema.Column{EnterprisePriceColumns[13]},
				RefColumns: []*schema.Column{AgreementColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterpriseprice_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[1]},
			},
			{
				Name:    "enterpriseprice_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[3]},
			},
			{
				Name:    "enterpriseprice_city_id",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[11]},
			},
			{
				Name:    "enterpriseprice_brand_id",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[12]},
			},
			{
				Name:    "enterpriseprice_agreement_id",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[13]},
			},
			{
				Name:    "enterpriseprice_model",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[8]},
			},
			{
				Name:    "enterpriseprice_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[10]},
			},
		},
	}
	// EnterpriseStatementColumns holds the columns for the "enterprise_statement" table.
	EnterpriseStatementColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "cost", Type: field.TypeFloat64, Comment: "账单金额", Default: 0},
		{Name: "settled_at", Type: field.TypeTime, Nullable: true, Comment: "结账时间"},
		{Name: "days", Type: field.TypeInt, Comment: "账期内使用总天数", Default: 0},
		{Name: "rider_number", Type: field.TypeInt, Comment: "账期内使用总人数", Default: 0},
		{Name: "date", Type: field.TypeTime, Nullable: true, Comment: "对账单计算日期(包含当日)"},
		{Name: "start", Type: field.TypeTime, Comment: "账单开始日期"},
		{Name: "end", Type: field.TypeTime, Nullable: true, Comment: "账单结束日期"},
		{Name: "enterprise_id", Type: field.TypeUint64, Comment: "企业ID"},
	}
	// EnterpriseStatementTable holds the schema information for the "enterprise_statement" table.
	EnterpriseStatementTable = &schema.Table{
		Name:       "enterprise_statement",
		Columns:    EnterpriseStatementColumns,
		PrimaryKey: []*schema.Column{EnterpriseStatementColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_statement_enterprise_statements",
				Columns:    []*schema.Column{EnterpriseStatementColumns[14]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisestatement_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[1]},
			},
			{
				Name:    "enterprisestatement_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[3]},
			},
			{
				Name:    "enterprisestatement_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[14]},
			},
			{
				Name:    "enterprisestatement_date",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[11]},
			},
			{
				Name:    "enterprisestatement_start_end",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[12], EnterpriseStatementColumns[13]},
			},
		},
	}
	// EnterpriseStationColumns holds the columns for the "enterprise_station" table.
	EnterpriseStationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "站点名称"},
		{Name: "enterprise_id", Type: field.TypeUint64, Comment: "企业ID"},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true, Comment: "城市ID"},
	}
	// EnterpriseStationTable holds the schema information for the "enterprise_station" table.
	EnterpriseStationTable = &schema.Table{
		Name:       "enterprise_station",
		Columns:    EnterpriseStationColumns,
		PrimaryKey: []*schema.Column{EnterpriseStationColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_station_enterprise_stations",
				Columns:    []*schema.Column{EnterpriseStationColumns[8]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_station_city_city",
				Columns:    []*schema.Column{EnterpriseStationColumns[9]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisestation_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStationColumns[1]},
			},
			{
				Name:    "enterprisestation_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStationColumns[3]},
			},
			{
				Name:    "enterprisestation_city_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStationColumns[9]},
			},
			{
				Name:    "enterprisestation_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStationColumns[8]},
			},
		},
	}
	// ExceptionColumns holds the columns for the "exception" table.
	ExceptionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "异常状态", Default: 0},
		{Name: "name", Type: field.TypeString, Comment: "物资名称"},
		{Name: "model", Type: field.TypeString, Nullable: true, Comment: "电池型号"},
		{Name: "num", Type: field.TypeInt, Comment: "异常数量"},
		{Name: "reason", Type: field.TypeString, Comment: "异常原因"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "异常描述"},
		{Name: "attachments", Type: field.TypeJSON, Nullable: true, Comment: "附件"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "employee_id", Type: field.TypeUint64, Comment: "店员ID"},
		{Name: "store_id", Type: field.TypeUint64, Comment: "门店ID"},
	}
	// ExceptionTable holds the schema information for the "exception" table.
	ExceptionTable = &schema.Table{
		Name:       "exception",
		Columns:    ExceptionColumns,
		PrimaryKey: []*schema.Column{ExceptionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exception_city_city",
				Columns:    []*schema.Column{ExceptionColumns[14]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "exception_employee_employee",
				Columns:    []*schema.Column{ExceptionColumns[15]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "exception_store_exceptions",
				Columns:    []*schema.Column{ExceptionColumns[16]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exception_created_at",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[1]},
			},
			{
				Name:    "exception_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[3]},
			},
			{
				Name:    "exception_city_id",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[14]},
			},
			{
				Name:    "exception_employee_id",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[15]},
			},
			{
				Name:    "exception_store_id",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[16]},
			},
			{
				Name:    "exception_name",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[8]},
			},
			{
				Name:    "exception_model",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[9]},
			},
			{
				Name:    "exception_num",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[10]},
			},
		},
	}
	// ExchangeColumns holds the columns for the "exchange" table.
	ExchangeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "uuid", Type: field.TypeString, Unique: true},
		{Name: "success", Type: field.TypeBool, Comment: "是否成功", Default: true},
		{Name: "model", Type: field.TypeString, Comment: "电池型号"},
		{Name: "alternative", Type: field.TypeBool, Comment: "是否备用方案", Default: false},
		{Name: "start_at", Type: field.TypeTime, Nullable: true, Comment: "换电开始时间"},
		{Name: "finish_at", Type: field.TypeTime, Nullable: true, Comment: "换电结束时间"},
		{Name: "duration", Type: field.TypeInt, Nullable: true, Comment: "换电耗时(s)"},
		{Name: "rider_battery", Type: field.TypeString, Nullable: true, Comment: "骑手当前电池编号"},
		{Name: "putin_battery", Type: field.TypeString, Nullable: true, Comment: "放入电池编号"},
		{Name: "putout_battery", Type: field.TypeString, Nullable: true, Comment: "取出电池编号"},
		{Name: "cabinet_info", Type: field.TypeJSON, Nullable: true, Comment: "电柜信息"},
		{Name: "empty", Type: field.TypeJSON, Nullable: true, Comment: "空仓信息"},
		{Name: "fully", Type: field.TypeJSON, Nullable: true, Comment: "满仓信息"},
		{Name: "steps", Type: field.TypeJSON, Nullable: true, Comment: "步骤信息"},
		{Name: "message", Type: field.TypeString, Comment: "消息", Default: ""},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "企业ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
	}
	// ExchangeTable holds the schema information for the "exchange" table.
	ExchangeTable = &schema.Table{
		Name:       "exchange",
		Columns:    ExchangeColumns,
		PrimaryKey: []*schema.Column{ExchangeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exchange_cabinet_exchanges",
				Columns:    []*schema.Column{ExchangeColumns[22]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_employee_exchanges",
				Columns:    []*schema.Column{ExchangeColumns[23]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_subscribe_subscribe",
				Columns:    []*schema.Column{ExchangeColumns[24]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "exchange_city_city",
				Columns:    []*schema.Column{ExchangeColumns[25]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "exchange_store_store",
				Columns:    []*schema.Column{ExchangeColumns[26]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_enterprise_enterprise",
				Columns:    []*schema.Column{ExchangeColumns[27]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_enterprise_station_station",
				Columns:    []*schema.Column{ExchangeColumns[28]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_rider_exchanges",
				Columns:    []*schema.Column{ExchangeColumns[29]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exchange_created_at",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[1]},
			},
			{
				Name:    "exchange_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[3]},
			},
			{
				Name:    "exchange_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[24]},
			},
			{
				Name:    "exchange_city_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[25]},
			},
			{
				Name:    "exchange_store_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[26]},
			},
			{
				Name:    "exchange_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[27]},
			},
			{
				Name:    "exchange_station_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[28]},
			},
			{
				Name:    "exchange_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[22]},
			},
			{
				Name:    "exchange_rider_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[29]},
			},
			{
				Name:    "exchange_employee_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[23]},
			},
			{
				Name:    "exchange_success",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[8]},
			},
			{
				Name:    "exchange_model",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[9]},
			},
			{
				Name:    "exchange_rider_battery",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[14]},
			},
			{
				Name:    "exchange_putin_battery",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[15]},
			},
			{
				Name:    "exchange_putout_battery",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[16]},
			},
		},
	}
	// ExportColumns holds the columns for the "export" table.
	ExportColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "taxonomy", Type: field.TypeString, Comment: "分类"},
		{Name: "sn", Type: field.TypeString, Comment: "编号"},
		{Name: "status", Type: field.TypeUint8, Comment: "状态", Default: 0},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "文件路径"},
		{Name: "message", Type: field.TypeString, Nullable: true, Comment: "失败原因"},
		{Name: "finish_at", Type: field.TypeTime, Nullable: true, Comment: "生成时间"},
		{Name: "duration", Type: field.TypeInt64, Nullable: true, Comment: "耗时"},
		{Name: "condition", Type: field.TypeString, Size: 2147483647, Comment: "筛选条件"},
		{Name: "info", Type: field.TypeJSON, Nullable: true, Comment: "详细信息"},
		{Name: "remark", Type: field.TypeString, Comment: "备注信息"},
		{Name: "manager_id", Type: field.TypeUint64, Comment: "管理人ID"},
	}
	// ExportTable holds the schema information for the "export" table.
	ExportTable = &schema.Table{
		Name:       "export",
		Columns:    ExportColumns,
		PrimaryKey: []*schema.Column{ExportColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "export_manager_manager",
				Columns:    []*schema.Column{ExportColumns[14]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "export_created_at",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[1]},
			},
			{
				Name:    "export_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[3]},
			},
			{
				Name:    "export_manager_id",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[14]},
			},
			{
				Name:    "export_sn",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[5]},
			},
			{
				Name:    "export_status",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[6]},
			},
		},
	}
	// FaultColumns holds the columns for the "fault" table.
	FaultColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "故障状态 0未处理 1已处理", Default: 0},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "故障留言"},
		{Name: "attachments", Type: field.TypeJSON, Nullable: true, Comment: "附件"},
		{Name: "type", Type: field.TypeUint8, Comment: "故障类型 1:电柜故障 2:电池故障 3:车辆故障 4:其他", Default: 1},
		{Name: "fault", Type: field.TypeJSON, Nullable: true, Comment: "故障内容"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "battery_id", Type: field.TypeUint64, Nullable: true},
		{Name: "ebike_id", Type: field.TypeUint64, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
	}
	// FaultTable holds the schema information for the "fault" table.
	FaultTable = &schema.Table{
		Name:       "fault",
		Columns:    FaultColumns,
		PrimaryKey: []*schema.Column{FaultColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "fault_city_city",
				Columns:    []*schema.Column{FaultColumns[12]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "fault_cabinet_cabinet",
				Columns:    []*schema.Column{FaultColumns[13]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "fault_battery_battery",
				Columns:    []*schema.Column{FaultColumns[14]},
				RefColumns: []*schema.Column{BatteryColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "fault_ebike_ebike",
				Columns:    []*schema.Column{FaultColumns[15]},
				RefColumns: []*schema.Column{EbikeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "fault_rider_rider",
				Columns:    []*schema.Column{FaultColumns[16]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "fault_created_at",
				Unique:  false,
				Columns: []*schema.Column{FaultColumns[1]},
			},
			{
				Name:    "fault_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{FaultColumns[3]},
			},
			{
				Name:    "fault_city_id",
				Unique:  false,
				Columns: []*schema.Column{FaultColumns[12]},
			},
			{
				Name:    "fault_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{FaultColumns[13]},
			},
			{
				Name:    "fault_battery_id",
				Unique:  false,
				Columns: []*schema.Column{FaultColumns[14]},
			},
			{
				Name:    "fault_ebike_id",
				Unique:  false,
				Columns: []*schema.Column{FaultColumns[15]},
			},
			{
				Name:    "fault_rider_id",
				Unique:  false,
				Columns: []*schema.Column{FaultColumns[16]},
			},
		},
	}
	// FeedbackColumns holds the columns for the "feedback" table.
	FeedbackColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "content", Type: field.TypeString},
		{Name: "type", Type: field.TypeUint8, Default: 0},
		{Name: "source", Type: field.TypeUint8, Default: 2},
		{Name: "url", Type: field.TypeJSON, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "version_info", Type: field.TypeJSON, Nullable: true},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true},
		{Name: "agent_id", Type: field.TypeUint64, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true},
	}
	// FeedbackTable holds the schema information for the "feedback" table.
	FeedbackTable = &schema.Table{
		Name:       "feedback",
		Columns:    FeedbackColumns,
		PrimaryKey: []*schema.Column{FeedbackColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "feedback_enterprise_enterprise",
				Columns:    []*schema.Column{FeedbackColumns[10]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "feedback_agent_agent",
				Columns:    []*schema.Column{FeedbackColumns[11]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "feedback_rider_rider",
				Columns:    []*schema.Column{FeedbackColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "feedback_city_city",
				Columns:    []*schema.Column{FeedbackColumns[13]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "feedback_created_at",
				Unique:  false,
				Columns: []*schema.Column{FeedbackColumns[1]},
			},
			{
				Name:    "feedback_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{FeedbackColumns[10]},
			},
			{
				Name:    "feedback_agent_id",
				Unique:  false,
				Columns: []*schema.Column{FeedbackColumns[11]},
			},
			{
				Name:    "feedback_rider_id",
				Unique:  false,
				Columns: []*schema.Column{FeedbackColumns[12]},
			},
			{
				Name:    "feedback_city_id",
				Unique:  false,
				Columns: []*schema.Column{FeedbackColumns[13]},
			},
		},
	}
	// GoodsColumns holds the columns for the "goods" table.
	GoodsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "sn", Type: field.TypeString, Comment: "商品编号"},
		{Name: "name", Type: field.TypeString, Comment: "商品名称"},
		{Name: "type", Type: field.TypeUint8, Comment: "商品类别 1:电车", Default: 1},
		{Name: "lables", Type: field.TypeJSON, Nullable: true, Comment: "商品标签"},
		{Name: "price", Type: field.TypeFloat64, Comment: "商品价格"},
		{Name: "weight", Type: field.TypeInt, Comment: "商品权重"},
		{Name: "head_pic", Type: field.TypeString, Comment: "列表头图"},
		{Name: "photos", Type: field.TypeJSON, Comment: "商品图片"},
		{Name: "intro", Type: field.TypeJSON, Comment: "商品介绍"},
		{Name: "status", Type: field.TypeUint8, Comment: "商品状态 0下架 1上架", Default: 0},
	}
	// GoodsTable holds the schema information for the "goods" table.
	GoodsTable = &schema.Table{
		Name:       "goods",
		Columns:    GoodsColumns,
		PrimaryKey: []*schema.Column{GoodsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "goods_created_at",
				Unique:  false,
				Columns: []*schema.Column{GoodsColumns[1]},
			},
			{
				Name:    "goods_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{GoodsColumns[3]},
			},
			{
				Name:    "goods_sn",
				Unique:  false,
				Columns: []*schema.Column{GoodsColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "goods_name",
				Unique:  false,
				Columns: []*schema.Column{GoodsColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "goods_status",
				Unique:  false,
				Columns: []*schema.Column{GoodsColumns[16]},
			},
		},
	}
	// InstructionsColumns holds the columns for the "instructions" table.
	InstructionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "title", Type: field.TypeString, Comment: "标题"},
		{Name: "content", Type: field.TypeJSON, Comment: "内容"},
		{Name: "key", Type: field.TypeString, Comment: "标识"},
	}
	// InstructionsTable holds the schema information for the "instructions" table.
	InstructionsTable = &schema.Table{
		Name:       "instructions",
		Columns:    InstructionsColumns,
		PrimaryKey: []*schema.Column{InstructionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "instructions_created_at",
				Unique:  false,
				Columns: []*schema.Column{InstructionsColumns[1]},
			},
			{
				Name:    "instructions_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{InstructionsColumns[3]},
			},
		},
	}
	// InventoryColumns holds the columns for the "inventory" table.
	InventoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "物资名称"},
		{Name: "count", Type: field.TypeBool, Comment: "是否需要盘点"},
		{Name: "transfer", Type: field.TypeBool, Comment: "是否可调拨"},
		{Name: "purchase", Type: field.TypeBool, Comment: "是否可采购"},
	}
	// InventoryTable holds the schema information for the "inventory" table.
	InventoryTable = &schema.Table{
		Name:       "inventory",
		Columns:    InventoryColumns,
		PrimaryKey: []*schema.Column{InventoryColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "inventory_created_at",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[1]},
			},
			{
				Name:    "inventory_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[3]},
			},
			{
				Name:    "inventory_count",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[8]},
			},
			{
				Name:    "inventory_transfer",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[9]},
			},
			{
				Name:    "inventory_purchase",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[10]},
			},
		},
	}
	// MaintainerColumns holds the columns for the "maintainer" table.
	MaintainerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "enable", Type: field.TypeBool, Comment: "是否启用"},
		{Name: "name", Type: field.TypeString, Comment: "姓名"},
		{Name: "phone", Type: field.TypeString, Unique: true, Comment: "电话"},
		{Name: "password", Type: field.TypeString, Comment: "密码"},
	}
	// MaintainerTable holds the schema information for the "maintainer" table.
	MaintainerTable = &schema.Table{
		Name:       "maintainer",
		Columns:    MaintainerColumns,
		PrimaryKey: []*schema.Column{MaintainerColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "maintainer_phone",
				Unique:  false,
				Columns: []*schema.Column{MaintainerColumns[3]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "maintainer_name",
				Unique:  false,
				Columns: []*schema.Column{MaintainerColumns[2]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// ManagerColumns holds the columns for the "manager" table.
	ManagerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "phone", Type: field.TypeString, Size: 30, Comment: "账户/手机号"},
		{Name: "name", Type: field.TypeString, Size: 30, Comment: "姓名"},
		{Name: "password", Type: field.TypeString, Comment: "密码"},
		{Name: "last_signin_at", Type: field.TypeTime, Nullable: true, Comment: "最后登录时间"},
		{Name: "role_id", Type: field.TypeUint64, Nullable: true, Comment: "角色ID"},
	}
	// ManagerTable holds the schema information for the "manager" table.
	ManagerTable = &schema.Table{
		Name:       "manager",
		Columns:    ManagerColumns,
		PrimaryKey: []*schema.Column{ManagerColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "manager_role_managers",
				Columns:    []*schema.Column{ManagerColumns[11]},
				RefColumns: []*schema.Column{RoleColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "manager_created_at",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[1]},
			},
			{
				Name:    "manager_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[3]},
			},
			{
				Name:    "manager_role_id",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[11]},
			},
			{
				Name:    "manager_phone",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "manager_name",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// MaterialColumns holds the columns for the "material" table.
	MaterialColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "物资名称"},
		{Name: "type", Type: field.TypeUint8, Comment: "物资类型 4电柜配件 5电车配件 6其他"},
		{Name: "statement", Type: field.TypeString, Nullable: true, Comment: "说明"},
	}
	// MaterialTable holds the schema information for the "material" table.
	MaterialTable = &schema.Table{
		Name:       "material",
		Columns:    MaterialColumns,
		PrimaryKey: []*schema.Column{MaterialColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "material_created_at",
				Unique:  false,
				Columns: []*schema.Column{MaterialColumns[1]},
			},
			{
				Name:    "material_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{MaterialColumns[3]},
			},
			{
				Name:    "material_name",
				Unique:  false,
				Columns: []*schema.Column{MaterialColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// OrderColumns holds the columns for the "order" table.
	OrderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "订单状态 0未支付 1已支付 2申请退款 3已退款", Default: 1},
		{Name: "payway", Type: field.TypeUint8, Comment: "支付方式 0手动 1支付宝 2微信 3支付宝预授权 4微信支付分"},
		{Name: "type", Type: field.TypeUint, Comment: "订单类型 1新签 2续签 3重签 4更改电池 5救援 6滞纳金 7押金 8代理充值"},
		{Name: "out_trade_no", Type: field.TypeString, Nullable: true, Comment: "交易订单号"},
		{Name: "trade_no", Type: field.TypeString, Nullable: true, Comment: "平台订单号"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "子订单金额(拆分项此条订单)"},
		{Name: "total", Type: field.TypeFloat64, Comment: "此次支付总金额(包含所有子订单的总支付)", Default: 0},
		{Name: "refund_at", Type: field.TypeTime, Nullable: true, Comment: "退款时间"},
		{Name: "initial_days", Type: field.TypeInt, Nullable: true, Comment: "所购骑士卡天数(也可能为补缴欠费天数)"},
		{Name: "past_days", Type: field.TypeInt, Nullable: true, Comment: "距上次退订天数"},
		{Name: "points", Type: field.TypeInt64, Comment: "使用积分", Default: 0},
		{Name: "point_ratio", Type: field.TypeFloat64, Comment: "积分兑换比例", Default: 0.01},
		{Name: "coupon_amount", Type: field.TypeFloat64, Comment: "优惠券金额", Default: 0},
		{Name: "discount_newly", Type: field.TypeFloat64, Comment: "新签优惠", Default: 0},
		{Name: "trade_pay_at", Type: field.TypeTime, Nullable: true, Comment: "冻结金额转支付时间"},
		{Name: "auth_no", Type: field.TypeString, Nullable: true, Comment: "支付宝授权资金订单号(预支付或者信用付)"},
		{Name: "out_order_no", Type: field.TypeString, Nullable: true, Comment: "商户端的唯一订单号(预支付或者信用付)"},
		{Name: "out_request_no", Type: field.TypeString, Nullable: true, Comment: "商户端的唯一请求流水号(预支付或者信用付)"},
		{Name: "subscribe_end_at", Type: field.TypeTime, Nullable: true, Comment: "购买套餐订阅到期时间"},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true, Comment: "城市ID"},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
		{Name: "ebike_id", Type: field.TypeUint64, Nullable: true},
		{Name: "agent_id", Type: field.TypeUint64, Nullable: true},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true, Comment: "父订单ID"},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true, Comment: "所属订阅ID"},
	}
	// OrderTable holds the schema information for the "order" table.
	OrderTable = &schema.Table{
		Name:       "order",
		Columns:    OrderColumns,
		PrimaryKey: []*schema.Column{OrderColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_plan_plan",
				Columns:    []*schema.Column{OrderColumns[26]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_city_city",
				Columns:    []*schema.Column{OrderColumns[27]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_ebike_brand_brand",
				Columns:    []*schema.Column{OrderColumns[28]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_ebike_ebike",
				Columns:    []*schema.Column{OrderColumns[29]},
				RefColumns: []*schema.Column{EbikeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_agent_agent",
				Columns:    []*schema.Column{OrderColumns[30]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_order_children",
				Columns:    []*schema.Column{OrderColumns[31]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_rider_orders",
				Columns:    []*schema.Column{OrderColumns[32]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_subscribe_orders",
				Columns:    []*schema.Column{OrderColumns[33]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "order_created_at",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[1]},
			},
			{
				Name:    "order_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[3]},
			},
			{
				Name:    "order_plan_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[26]},
			},
			{
				Name:    "order_city_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[27]},
			},
			{
				Name:    "order_brand_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[28]},
			},
			{
				Name:    "order_ebike_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[29]},
			},
			{
				Name:    "order_agent_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[30]},
			},
			{
				Name:    "order_rider_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[32]},
			},
			{
				Name:    "order_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[33]},
			},
			{
				Name:    "order_trade_no",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[11]},
			},
			{
				Name:    "order_out_trade_no",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[10]},
			},
			{
				Name:    "order_status",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[7]},
			},
			{
				Name:    "order_initial_days",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[15]},
			},
		},
	}
	// OrderRefundColumns holds the columns for the "order_refund" table.
	OrderRefundColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "退款状态"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "退款金额"},
		{Name: "out_refund_no", Type: field.TypeString, Unique: true, Comment: "退款订单编号"},
		{Name: "reason", Type: field.TypeString, Comment: "退款理由"},
		{Name: "refund_at", Type: field.TypeTime, Nullable: true, Comment: "退款成功时间"},
		{Name: "remain_amount", Type: field.TypeFloat64, Nullable: true, Comment: "剩余未退金额"},
		{Name: "order_id", Type: field.TypeUint64, Unique: true, Comment: "订单ID"},
	}
	// OrderRefundTable holds the schema information for the "order_refund" table.
	OrderRefundTable = &schema.Table{
		Name:       "order_refund",
		Columns:    OrderRefundColumns,
		PrimaryKey: []*schema.Column{OrderRefundColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_refund_order_refund",
				Columns:    []*schema.Column{OrderRefundColumns[13]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderrefund_created_at",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[1]},
			},
			{
				Name:    "orderrefund_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[3]},
			},
			{
				Name:    "orderrefund_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[13]},
			},
			{
				Name:    "orderrefund_status",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[7]},
			},
			{
				Name:    "orderrefund_out_refund_no",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[9]},
			},
		},
	}
	// PersonColumns holds the columns for the "person" table.
	PersonColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "认证状态", Default: 0},
		{Name: "banned", Type: field.TypeBool, Comment: "是否封禁身份", Default: false},
		{Name: "name", Type: field.TypeString, Size: 40, Comment: "真实姓名"},
		{Name: "id_card_number", Type: field.TypeString, Unique: true, Nullable: true, Size: 40, Comment: "证件号码"},
		{Name: "id_card_type", Type: field.TypeUint8, Comment: "证件类别", Default: 1},
		{Name: "id_card_portrait", Type: field.TypeString, Nullable: true, Comment: "证件人像面"},
		{Name: "id_card_national", Type: field.TypeString, Nullable: true, Comment: "证件国徽面"},
		{Name: "auth_face", Type: field.TypeString, Nullable: true, Comment: "实名认证人脸照片"},
		{Name: "auth_result", Type: field.TypeJSON, Nullable: true, Comment: "百度实名认证结果详情"},
		{Name: "auth_at", Type: field.TypeTime, Nullable: true, Comment: "百度实名认证结果获取时间"},
		{Name: "esign_account_id", Type: field.TypeString, Nullable: true, Comment: "E签宝账户ID"},
		{Name: "baidu_verify_token", Type: field.TypeString, Nullable: true, Comment: "百度人脸verify_token"},
		{Name: "baidu_log_id", Type: field.TypeString, Nullable: true, Comment: "百度人脸log_id"},
		{Name: "face_verify_result", Type: field.TypeJSON, Nullable: true, Comment: "人身核验核验结果"},
	}
	// PersonTable holds the schema information for the "person" table.
	PersonTable = &schema.Table{
		Name:       "person",
		Columns:    PersonColumns,
		PrimaryKey: []*schema.Column{PersonColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "person_created_at",
				Unique:  false,
				Columns: []*schema.Column{PersonColumns[1]},
			},
			{
				Name:    "person_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PersonColumns[3]},
			},
			{
				Name:    "person_status",
				Unique:  false,
				Columns: []*schema.Column{PersonColumns[7]},
			},
			{
				Name:    "person_name",
				Unique:  false,
				Columns: []*schema.Column{PersonColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// PlanColumns holds the columns for the "plan" table.
	PlanColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "model", Type: field.TypeString, Nullable: true, Comment: "电池型号"},
		{Name: "enable", Type: field.TypeBool, Comment: "是否启用"},
		{Name: "type", Type: field.TypeUint8, Comment: "骑士卡类别 1:单电 2:车加电 3:以租代购", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "骑士卡名称"},
		{Name: "start", Type: field.TypeTime, Comment: "有效期开始日期"},
		{Name: "end", Type: field.TypeTime, Comment: "有效期结束日期"},
		{Name: "price", Type: field.TypeFloat64, Comment: "骑士卡价格"},
		{Name: "days", Type: field.TypeUint, Comment: "骑士卡天数"},
		{Name: "commission", Type: field.TypeFloat64, Comment: "提成"},
		{Name: "original", Type: field.TypeFloat64, Nullable: true, Comment: "原价"},
		{Name: "desc", Type: field.TypeString, Nullable: true, Comment: "优惠信息"},
		{Name: "discount_newly", Type: field.TypeFloat64, Comment: "新签减免", Default: 0},
		{Name: "notes", Type: field.TypeJSON, Nullable: true, Comment: "购买须知"},
		{Name: "intelligent", Type: field.TypeBool, Comment: "是否智能柜套餐", Default: false},
		{Name: "deposit", Type: field.TypeBool, Comment: "是否开启押金(只对V2版本接口有用)", Default: false},
		{Name: "deposit_amount", Type: field.TypeFloat64, Nullable: true, Comment: "押金金额"},
		{Name: "deposit_wechat_payscore", Type: field.TypeBool, Nullable: true, Comment: "微信支付分免押金", Default: false},
		{Name: "deposit_alipay_auth_freeze", Type: field.TypeBool, Nullable: true, Comment: "预授权信用免押金", Default: false},
		{Name: "deposit_contract", Type: field.TypeBool, Nullable: true, Comment: "合同免押金", Default: false},
		{Name: "deposit_pay", Type: field.TypeBool, Nullable: true, Comment: "支付押金", Default: false},
		{Name: "rto_days", Type: field.TypeUint, Nullable: true, Comment: "以租代购天数条件"},
		{Name: "overdue_fee", Type: field.TypeFloat64, Comment: "滞纳金单价", Default: 99999},
		{Name: "daily", Type: field.TypeBool, Comment: "是否日租", Default: false},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true, Comment: "品牌ID"},
		{Name: "agreement_id", Type: field.TypeUint64, Nullable: true},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true, Comment: "父级"},
	}
	// PlanTable holds the schema information for the "plan" table.
	PlanTable = &schema.Table{
		Name:       "plan",
		Columns:    PlanColumns,
		PrimaryKey: []*schema.Column{PlanColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plan_ebike_brand_plans",
				Columns:    []*schema.Column{PlanColumns[30]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "plan_agreement_agreement",
				Columns:    []*schema.Column{PlanColumns[31]},
				RefColumns: []*schema.Column{AgreementColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "plan_plan_complexes",
				Columns:    []*schema.Column{PlanColumns[32]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "plan_created_at",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[1]},
			},
			{
				Name:    "plan_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[3]},
			},
			{
				Name:    "plan_agreement_id",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[31]},
			},
			{
				Name:    "plan_type",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[9]},
			},
			{
				Name:    "plan_model",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[7]},
			},
			{
				Name:    "plan_days",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[14]},
			},
			{
				Name:    "plan_enable",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[8]},
			},
			{
				Name:    "plan_start_end",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[11], PlanColumns[12]},
			},
			{
				Name:    "plan_name",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[10]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// PlanIntroduceColumns holds the columns for the "plan_introduce" table.
	PlanIntroduceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "model", Type: field.TypeString, Comment: "电池型号"},
		{Name: "image", Type: field.TypeString},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
	}
	// PlanIntroduceTable holds the schema information for the "plan_introduce" table.
	PlanIntroduceTable = &schema.Table{
		Name:       "plan_introduce",
		Columns:    PlanIntroduceColumns,
		PrimaryKey: []*schema.Column{PlanIntroduceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plan_introduce_ebike_brand_brand",
				Columns:    []*schema.Column{PlanIntroduceColumns[5]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "planintroduce_brand_id",
				Unique:  false,
				Columns: []*schema.Column{PlanIntroduceColumns[5]},
			},
			{
				Name:    "planintroduce_model",
				Unique:  false,
				Columns: []*schema.Column{PlanIntroduceColumns[3]},
			},
		},
	}
	// PointLogColumns holds the columns for the "point_log" table.
	PointLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "modifier", Type: field.TypeJSON, Nullable: true, Comment: "管理"},
		{Name: "employee_info", Type: field.TypeJSON, Nullable: true, Comment: "店员"},
		{Name: "type", Type: field.TypeUint8, Comment: "变动类型"},
		{Name: "points", Type: field.TypeInt64, Comment: "变动数量"},
		{Name: "after", Type: field.TypeInt64, Comment: "变动结果"},
		{Name: "reason", Type: field.TypeString, Nullable: true, Comment: "原因"},
		{Name: "attach", Type: field.TypeJSON, Nullable: true, Comment: "其他信息"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "order_id", Type: field.TypeUint64, Nullable: true},
	}
	// PointLogTable holds the schema information for the "point_log" table.
	PointLogTable = &schema.Table{
		Name:       "point_log",
		Columns:    PointLogColumns,
		PrimaryKey: []*schema.Column{PointLogColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "point_log_rider_rider",
				Columns:    []*schema.Column{PointLogColumns[10]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "point_log_order_order",
				Columns:    []*schema.Column{PointLogColumns[11]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "pointlog_created_at",
				Unique:  false,
				Columns: []*schema.Column{PointLogColumns[1]},
			},
			{
				Name:    "pointlog_rider_id",
				Unique:  false,
				Columns: []*schema.Column{PointLogColumns[10]},
			},
			{
				Name:    "pointlog_order_id",
				Unique:  false,
				Columns: []*schema.Column{PointLogColumns[11]},
			},
			{
				Name:    "pointlog_type",
				Unique:  false,
				Columns: []*schema.Column{PointLogColumns[5]},
			},
		},
	}
	// PromotionAchievementColumns holds the columns for the "promotion_achievement" table.
	PromotionAchievementColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "成就名称"},
		{Name: "type", Type: field.TypeUint8, Comment: "成就类型 1:邀请成就 2:收益成就"},
		{Name: "icon", Type: field.TypeString, Comment: "成就图标"},
		{Name: "condition", Type: field.TypeUint64, Comment: "完成条件"},
	}
	// PromotionAchievementTable holds the schema information for the "promotion_achievement" table.
	PromotionAchievementTable = &schema.Table{
		Name:       "promotion_achievement",
		Columns:    PromotionAchievementColumns,
		PrimaryKey: []*schema.Column{PromotionAchievementColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "promotionachievement_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionAchievementColumns[1]},
			},
			{
				Name:    "promotionachievement_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionAchievementColumns[3]},
			},
		},
	}
	// PromotionBankCardColumns holds the columns for the "promotion_bank_card" table.
	PromotionBankCardColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "card_no", Type: field.TypeString, Comment: "银行卡号"},
		{Name: "bank", Type: field.TypeString, Nullable: true, Comment: "银行名称"},
		{Name: "is_default", Type: field.TypeBool, Comment: "是否是默认银行卡", Default: false},
		{Name: "bank_logo_url", Type: field.TypeString, Nullable: true, Comment: "银行卡logo"},
		{Name: "province", Type: field.TypeString, Nullable: true, Comment: "省份"},
		{Name: "city", Type: field.TypeString, Nullable: true, Comment: "城市"},
		{Name: "member_id", Type: field.TypeUint64, Nullable: true, Comment: "会员ID"},
	}
	// PromotionBankCardTable holds the schema information for the "promotion_bank_card" table.
	PromotionBankCardTable = &schema.Table{
		Name:       "promotion_bank_card",
		Columns:    PromotionBankCardColumns,
		PrimaryKey: []*schema.Column{PromotionBankCardColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "promotion_bank_card_promotion_member_cards",
				Columns:    []*schema.Column{PromotionBankCardColumns[13]},
				RefColumns: []*schema.Column{PromotionMemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "promotionbankcard_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionBankCardColumns[1]},
			},
			{
				Name:    "promotionbankcard_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionBankCardColumns[3]},
			},
		},
	}
	// PromotionCommissionColumns holds the columns for the "promotion_commission" table.
	PromotionCommissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "type", Type: field.TypeUint8, Comment: "类型 0:默认 1:通用 2:个人", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "方案名"},
		{Name: "rule", Type: field.TypeJSON, Comment: "返佣方案规则"},
		{Name: "enable", Type: field.TypeBool, Comment: "启用状态 0:禁用 1:启用", Default: true},
		{Name: "amount_sum", Type: field.TypeFloat64, Comment: "累计返佣金额", Default: 0},
		{Name: "first_new_num", Type: field.TypeUint64, Comment: "一级新签人数", Default: 0},
		{Name: "second_new_num", Type: field.TypeUint64, Comment: "二级新签人数", Default: 0},
		{Name: "first_renew_num", Type: field.TypeUint64, Comment: "一级续费人数", Default: 0},
		{Name: "second_renew_num", Type: field.TypeUint64, Comment: "二级续费人数", Default: 0},
		{Name: "first_new_amount_sum", Type: field.TypeFloat64, Comment: "一级新签金额", Default: 0},
		{Name: "second_new_amount_sum", Type: field.TypeFloat64, Comment: "二级新签金额", Default: 0},
		{Name: "first_renew_amount_sum", Type: field.TypeFloat64, Comment: "一级续费金额", Default: 0},
		{Name: "second_renew_amount_sum", Type: field.TypeFloat64, Comment: "二级续费金额", Default: 0},
		{Name: "desc", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "返佣说明"},
		{Name: "history_id", Type: field.TypeJSON, Nullable: true, Comment: "历史记录id"},
		{Name: "start_at", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "结束时间"},
		{Name: "member_id", Type: field.TypeUint64, Nullable: true},
	}
	// PromotionCommissionTable holds the schema information for the "promotion_commission" table.
	PromotionCommissionTable = &schema.Table{
		Name:       "promotion_commission",
		Columns:    PromotionCommissionColumns,
		PrimaryKey: []*schema.Column{PromotionCommissionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "promotion_commission_promotion_member_member",
				Columns:    []*schema.Column{PromotionCommissionColumns[24]},
				RefColumns: []*schema.Column{PromotionMemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "promotioncommission_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionCommissionColumns[1]},
			},
			{
				Name:    "promotioncommission_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionCommissionColumns[3]},
			},
			{
				Name:    "promotioncommission_member_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionCommissionColumns[24]},
			},
		},
	}
	// PromotionCommissionPlanColumns holds the columns for the "promotion_commission_plan" table.
	PromotionCommissionPlanColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "commission_id", Type: field.TypeUint64, Nullable: true},
		{Name: "member_id", Type: field.TypeUint64, Nullable: true},
	}
	// PromotionCommissionPlanTable holds the schema information for the "promotion_commission_plan" table.
	PromotionCommissionPlanTable = &schema.Table{
		Name:       "promotion_commission_plan",
		Columns:    PromotionCommissionPlanColumns,
		PrimaryKey: []*schema.Column{PromotionCommissionPlanColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "promotion_commission_plan_plan_commissions",
				Columns:    []*schema.Column{PromotionCommissionPlanColumns[4]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "promotion_commission_plan_promotion_commission_plans",
				Columns:    []*schema.Column{PromotionCommissionPlanColumns[5]},
				RefColumns: []*schema.Column{PromotionCommissionColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "promotion_commission_plan_promotion_member_member",
				Columns:    []*schema.Column{PromotionCommissionPlanColumns[6]},
				RefColumns: []*schema.Column{PromotionMemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "promotioncommissionplan_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionCommissionPlanColumns[1]},
			},
			{
				Name:    "promotioncommissionplan_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionCommissionPlanColumns[3]},
			},
			{
				Name:    "promotioncommissionplan_member_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionCommissionPlanColumns[6]},
			},
		},
	}
	// PromotionEarningsColumns holds the columns for the "promotion_earnings" table.
	PromotionEarningsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "收益状态 0:未结算 1:已结算 2:已取消", Default: 0},
		{Name: "amount", Type: field.TypeFloat64, Comment: "收益金额", Default: 0},
		{Name: "commission_rule_key", Type: field.TypeString, Nullable: true, Comment: "返佣任务类型"},
		{Name: "commission_id", Type: field.TypeUint64},
		{Name: "member_id", Type: field.TypeUint64},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "order_id", Type: field.TypeUint64, Nullable: true},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
	}
	// PromotionEarningsTable holds the schema information for the "promotion_earnings" table.
	PromotionEarningsTable = &schema.Table{
		Name:       "promotion_earnings",
		Columns:    PromotionEarningsColumns,
		PrimaryKey: []*schema.Column{PromotionEarningsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "promotion_earnings_promotion_commission_commission",
				Columns:    []*schema.Column{PromotionEarningsColumns[10]},
				RefColumns: []*schema.Column{PromotionCommissionColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "promotion_earnings_promotion_member_member",
				Columns:    []*schema.Column{PromotionEarningsColumns[11]},
				RefColumns: []*schema.Column{PromotionMemberColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "promotion_earnings_rider_rider",
				Columns:    []*schema.Column{PromotionEarningsColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "promotion_earnings_order_order",
				Columns:    []*schema.Column{PromotionEarningsColumns[13]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "promotion_earnings_plan_plan",
				Columns:    []*schema.Column{PromotionEarningsColumns[14]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "promotionearnings_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionEarningsColumns[1]},
			},
			{
				Name:    "promotionearnings_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionEarningsColumns[3]},
			},
			{
				Name:    "promotionearnings_commission_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionEarningsColumns[10]},
			},
			{
				Name:    "promotionearnings_member_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionEarningsColumns[11]},
			},
			{
				Name:    "promotionearnings_rider_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionEarningsColumns[12]},
			},
			{
				Name:    "promotionearnings_order_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionEarningsColumns[13]},
			},
			{
				Name:    "promotionearnings_plan_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionEarningsColumns[14]},
			},
		},
	}
	// PromotionGrowthColumns holds the columns for the "promotion_growth" table.
	PromotionGrowthColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "growth_value", Type: field.TypeUint64, Comment: "成长值"},
		{Name: "member_id", Type: field.TypeUint64, Nullable: true},
		{Name: "task_id", Type: field.TypeUint64, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
	}
	// PromotionGrowthTable holds the schema information for the "promotion_growth" table.
	PromotionGrowthTable = &schema.Table{
		Name:       "promotion_growth",
		Columns:    PromotionGrowthColumns,
		PrimaryKey: []*schema.Column{PromotionGrowthColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "promotion_growth_promotion_member_member",
				Columns:    []*schema.Column{PromotionGrowthColumns[5]},
				RefColumns: []*schema.Column{PromotionMemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "promotion_growth_promotion_level_task_task",
				Columns:    []*schema.Column{PromotionGrowthColumns[6]},
				RefColumns: []*schema.Column{PromotionLevelTaskColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "promotion_growth_rider_rider",
				Columns:    []*schema.Column{PromotionGrowthColumns[7]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "promotiongrowth_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionGrowthColumns[1]},
			},
			{
				Name:    "promotiongrowth_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionGrowthColumns[3]},
			},
			{
				Name:    "promotiongrowth_member_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionGrowthColumns[5]},
			},
			{
				Name:    "promotiongrowth_task_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionGrowthColumns[6]},
			},
			{
				Name:    "promotiongrowth_rider_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionGrowthColumns[7]},
			},
		},
	}
	// PromotionLevelColumns holds the columns for the "promotion_level" table.
	PromotionLevelColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "level", Type: field.TypeUint64, Comment: "会员等级"},
		{Name: "growth_value", Type: field.TypeUint64, Comment: "所需成长值", Default: 0},
		{Name: "commission_ratio", Type: field.TypeFloat64, Comment: "会员权益佣金比例", Default: 0},
	}
	// PromotionLevelTable holds the schema information for the "promotion_level" table.
	PromotionLevelTable = &schema.Table{
		Name:       "promotion_level",
		Columns:    PromotionLevelColumns,
		PrimaryKey: []*schema.Column{PromotionLevelColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "promotionlevel_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionLevelColumns[1]},
			},
			{
				Name:    "promotionlevel_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionLevelColumns[3]},
			},
		},
	}
	// PromotionLevelTaskColumns holds the columns for the "promotion_level_task" table.
	PromotionLevelTaskColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "任务名称"},
		{Name: "description", Type: field.TypeString, Comment: "任务描述"},
		{Name: "type", Type: field.TypeUint8, Comment: "完成条件 1: 签约 2:续费"},
		{Name: "growth_value", Type: field.TypeUint64, Comment: "任务成长值", Default: 0},
		{Name: "key", Type: field.TypeString, Nullable: true, Comment: "任务key"},
	}
	// PromotionLevelTaskTable holds the schema information for the "promotion_level_task" table.
	PromotionLevelTaskTable = &schema.Table{
		Name:       "promotion_level_task",
		Columns:    PromotionLevelTaskColumns,
		PrimaryKey: []*schema.Column{PromotionLevelTaskColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "promotionleveltask_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionLevelTaskColumns[1]},
			},
		},
	}
	// PromotionMemberColumns holds the columns for the "promotion_member" table.
	PromotionMemberColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "phone", Type: field.TypeString, Unique: true, Comment: "会员手机号"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "会员姓名"},
		{Name: "balance", Type: field.TypeFloat64, Comment: "钱包余额", Default: 0},
		{Name: "frozen", Type: field.TypeFloat64, Comment: "钱包冻结金额", Default: 0},
		{Name: "total_growth_value", Type: field.TypeUint64, Comment: "总成长值", Default: 0},
		{Name: "current_growth_value", Type: field.TypeUint64, Comment: "当前等级成长值", Default: 0},
		{Name: "enable", Type: field.TypeBool, Comment: "是否启用", Default: true},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true, Comment: "头像url"},
		{Name: "new_sign_count", Type: field.TypeUint64, Comment: "新签次数", Default: 0},
		{Name: "renew_count", Type: field.TypeUint64, Comment: "续费次数", Default: 0},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
		{Name: "level_id", Type: field.TypeUint64, Nullable: true},
		{Name: "person_id", Type: field.TypeUint64, Nullable: true, Comment: "实名认证ID"},
	}
	// PromotionMemberTable holds the schema information for the "promotion_member" table.
	PromotionMemberTable = &schema.Table{
		Name:       "promotion_member",
		Columns:    PromotionMemberColumns,
		PrimaryKey: []*schema.Column{PromotionMemberColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "promotion_member_rider_rider",
				Columns:    []*schema.Column{PromotionMemberColumns[17]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "promotion_member_subscribe_subscribe",
				Columns:    []*schema.Column{PromotionMemberColumns[18]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "promotion_member_promotion_level_level",
				Columns:    []*schema.Column{PromotionMemberColumns[19]},
				RefColumns: []*schema.Column{PromotionLevelColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "promotion_member_promotion_person_member",
				Columns:    []*schema.Column{PromotionMemberColumns[20]},
				RefColumns: []*schema.Column{PromotionPersonColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "promotionmember_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionMemberColumns[1]},
			},
			{
				Name:    "promotionmember_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionMemberColumns[3]},
			},
			{
				Name:    "promotionmember_rider_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionMemberColumns[17]},
			},
			{
				Name:    "promotionmember_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionMemberColumns[18]},
			},
			{
				Name:    "promotionmember_level_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionMemberColumns[19]},
			},
		},
	}
	// PromotionMemberCommissionColumns holds the columns for the "promotion_member_commission" table.
	PromotionMemberCommissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "member_id", Type: field.TypeUint64, Nullable: true, Comment: "会员ID"},
		{Name: "commission_id", Type: field.TypeUint64},
	}
	// PromotionMemberCommissionTable holds the schema information for the "promotion_member_commission" table.
	PromotionMemberCommissionTable = &schema.Table{
		Name:       "promotion_member_commission",
		Columns:    PromotionMemberCommissionColumns,
		PrimaryKey: []*schema.Column{PromotionMemberCommissionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "promotion_member_commission_promotion_member_commissions",
				Columns:    []*schema.Column{PromotionMemberCommissionColumns[4]},
				RefColumns: []*schema.Column{PromotionMemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "promotion_member_commission_promotion_commission_commission",
				Columns:    []*schema.Column{PromotionMemberCommissionColumns[5]},
				RefColumns: []*schema.Column{PromotionCommissionColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "promotionmembercommission_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionMemberCommissionColumns[1]},
			},
			{
				Name:    "promotionmembercommission_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionMemberCommissionColumns[3]},
			},
			{
				Name:    "promotionmembercommission_commission_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionMemberCommissionColumns[5]},
			},
		},
	}
	// PromotionPersonColumns holds the columns for the "promotion_person" table.
	PromotionPersonColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeUint8, Comment: "认证状态 0未认证 1已认证 2认证失败", Default: 0},
		{Name: "name", Type: field.TypeString, Nullable: true, Size: 40, Comment: "真实姓名"},
		{Name: "id_card_number", Type: field.TypeString, Unique: true, Nullable: true, Size: 40, Comment: "证件号码"},
		{Name: "address", Type: field.TypeString, Nullable: true, Comment: "地址"},
	}
	// PromotionPersonTable holds the schema information for the "promotion_person" table.
	PromotionPersonTable = &schema.Table{
		Name:       "promotion_person",
		Columns:    PromotionPersonColumns,
		PrimaryKey: []*schema.Column{PromotionPersonColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "promotionperson_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionPersonColumns[1]},
			},
		},
	}
	// PromotionPrivilegeColumns holds the columns for the "promotion_privilege" table.
	PromotionPrivilegeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "type", Type: field.TypeUint8, Comment: "权益类型 0:无权益 1: 佣金提高(%)", Default: 0},
		{Name: "name", Type: field.TypeString, Comment: "权益名称"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "权益描述"},
		{Name: "value", Type: field.TypeUint64, Nullable: true, Comment: "权益值", Default: 0},
	}
	// PromotionPrivilegeTable holds the schema information for the "promotion_privilege" table.
	PromotionPrivilegeTable = &schema.Table{
		Name:       "promotion_privilege",
		Columns:    PromotionPrivilegeColumns,
		PrimaryKey: []*schema.Column{PromotionPrivilegeColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "promotionprivilege_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionPrivilegeColumns[1]},
			},
			{
				Name:    "promotionprivilege_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionPrivilegeColumns[3]},
			},
		},
	}
	// PromotionReferralsColumns holds the columns for the "promotion_referrals" table.
	PromotionReferralsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "referring_member_id", Type: field.TypeUint64, Nullable: true, Comment: "推广者id"},
		{Name: "referred_member_id", Type: field.TypeUint64, Unique: true, Comment: "被推广者ID<骑手>"},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
	}
	// PromotionReferralsTable holds the schema information for the "promotion_referrals" table.
	PromotionReferralsTable = &schema.Table{
		Name:       "promotion_referrals",
		Columns:    PromotionReferralsColumns,
		PrimaryKey: []*schema.Column{PromotionReferralsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "promotion_referrals_promotion_member_referrals",
				Columns:    []*schema.Column{PromotionReferralsColumns[6]},
				RefColumns: []*schema.Column{PromotionMemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "promotion_referrals_promotion_member_referred",
				Columns:    []*schema.Column{PromotionReferralsColumns[7]},
				RefColumns: []*schema.Column{PromotionMemberColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "promotion_referrals_rider_rider",
				Columns:    []*schema.Column{PromotionReferralsColumns[8]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "promotion_referrals_subscribe_subscribe",
				Columns:    []*schema.Column{PromotionReferralsColumns[9]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "promotionreferrals_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionReferralsColumns[1]},
			},
			{
				Name:    "promotionreferrals_rider_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionReferralsColumns[8]},
			},
			{
				Name:    "promotionreferrals_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionReferralsColumns[9]},
			},
		},
	}
	// PromotionReferralsProgressColumns holds the columns for the "promotion_referrals_progress" table.
	PromotionReferralsProgressColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "referring_member_id", Type: field.TypeUint64, Nullable: true, Comment: "推广者id"},
		{Name: "referred_member_id", Type: field.TypeUint64, Nullable: true, Comment: "被推广者ID<骑手>"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "姓名"},
		{Name: "status", Type: field.TypeUint8, Comment: "状态  0: 邀请中 1:邀请成功 2:邀请失败", Default: 0},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
	}
	// PromotionReferralsProgressTable holds the schema information for the "promotion_referrals_progress" table.
	PromotionReferralsProgressTable = &schema.Table{
		Name:       "promotion_referrals_progress",
		Columns:    PromotionReferralsProgressColumns,
		PrimaryKey: []*schema.Column{PromotionReferralsProgressColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "promotion_referrals_progress_rider_rider",
				Columns:    []*schema.Column{PromotionReferralsProgressColumns[10]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "promotionreferralsprogress_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionReferralsProgressColumns[1]},
			},
			{
				Name:    "promotionreferralsprogress_rider_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionReferralsProgressColumns[10]},
			},
		},
	}
	// PromotionSettingColumns holds the columns for the "promotion_setting" table.
	PromotionSettingColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "title", Type: field.TypeString, Nullable: true, Comment: "标题"},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "内容"},
		{Name: "key", Type: field.TypeString, Comment: "设置项"},
	}
	// PromotionSettingTable holds the schema information for the "promotion_setting" table.
	PromotionSettingTable = &schema.Table{
		Name:       "promotion_setting",
		Columns:    PromotionSettingColumns,
		PrimaryKey: []*schema.Column{PromotionSettingColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "promotionsetting_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionSettingColumns[1]},
			},
		},
	}
	// PromotionWithdrawalColumns holds the columns for the "promotion_withdrawal" table.
	PromotionWithdrawalColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "提现状态 0:待审核 1:成功 2:失败", Default: 0},
		{Name: "apply_amount", Type: field.TypeFloat64, Comment: "提现申请金额", Default: 0},
		{Name: "amount", Type: field.TypeFloat64, Comment: "提现金额", Default: 0},
		{Name: "fee", Type: field.TypeFloat64, Comment: "提现手续费", Default: 0},
		{Name: "tex", Type: field.TypeFloat64, Comment: "提现税费", Default: 0},
		{Name: "method", Type: field.TypeUint8, Comment: "提现方式 1:银行卡"},
		{Name: "apply_time", Type: field.TypeTime, Nullable: true, Comment: "申请时间"},
		{Name: "review_time", Type: field.TypeTime, Nullable: true, Comment: "审核时间"},
		{Name: "account_id", Type: field.TypeUint64, Nullable: true, Comment: "提现账号ID"},
		{Name: "member_id", Type: field.TypeUint64},
	}
	// PromotionWithdrawalTable holds the schema information for the "promotion_withdrawal" table.
	PromotionWithdrawalTable = &schema.Table{
		Name:       "promotion_withdrawal",
		Columns:    PromotionWithdrawalColumns,
		PrimaryKey: []*schema.Column{PromotionWithdrawalColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "promotion_withdrawal_promotion_bank_card_withdrawals",
				Columns:    []*schema.Column{PromotionWithdrawalColumns[15]},
				RefColumns: []*schema.Column{PromotionBankCardColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "promotion_withdrawal_promotion_member_member",
				Columns:    []*schema.Column{PromotionWithdrawalColumns[16]},
				RefColumns: []*schema.Column{PromotionMemberColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "promotionwithdrawal_created_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionWithdrawalColumns[1]},
			},
			{
				Name:    "promotionwithdrawal_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PromotionWithdrawalColumns[3]},
			},
			{
				Name:    "promotionwithdrawal_member_id",
				Unique:  false,
				Columns: []*schema.Column{PromotionWithdrawalColumns[16]},
			},
		},
	}
	// QuestionColumns holds the columns for the "question" table.
	QuestionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "问题名称"},
		{Name: "sort", Type: field.TypeInt, Unique: true, Comment: "排序"},
		{Name: "answer", Type: field.TypeString, Comment: "答案"},
		{Name: "category_id", Type: field.TypeUint64, Nullable: true, Comment: "分类ID"},
	}
	// QuestionTable holds the schema information for the "question" table.
	QuestionTable = &schema.Table{
		Name:       "question",
		Columns:    QuestionColumns,
		PrimaryKey: []*schema.Column{QuestionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "question_question_category_questions",
				Columns:    []*schema.Column{QuestionColumns[10]},
				RefColumns: []*schema.Column{QuestionCategoryColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "question_created_at",
				Unique:  false,
				Columns: []*schema.Column{QuestionColumns[1]},
			},
			{
				Name:    "question_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{QuestionColumns[3]},
			},
			{
				Name:    "question_category_id",
				Unique:  false,
				Columns: []*schema.Column{QuestionColumns[10]},
			},
		},
	}
	// QuestionCategoryColumns holds the columns for the "question_category" table.
	QuestionCategoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "名称"},
		{Name: "sort", Type: field.TypeUint64, Unique: true, Comment: "排序"},
	}
	// QuestionCategoryTable holds the schema information for the "question_category" table.
	QuestionCategoryTable = &schema.Table{
		Name:       "question_category",
		Columns:    QuestionCategoryColumns,
		PrimaryKey: []*schema.Column{QuestionCategoryColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "questioncategory_created_at",
				Unique:  false,
				Columns: []*schema.Column{QuestionCategoryColumns[1]},
			},
			{
				Name:    "questioncategory_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{QuestionCategoryColumns[3]},
			},
		},
	}
	// ReserveColumns holds the columns for the "reserve" table.
	ReserveColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "预约状态", Default: 0},
		{Name: "type", Type: field.TypeString, Comment: "业务类型"},
		{Name: "cabinet_id", Type: field.TypeUint64, Comment: "电柜ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "business_id", Type: field.TypeUint64, Nullable: true},
	}
	// ReserveTable holds the schema information for the "reserve" table.
	ReserveTable = &schema.Table{
		Name:       "reserve",
		Columns:    ReserveColumns,
		PrimaryKey: []*schema.Column{ReserveColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "reserve_cabinet_cabinet",
				Columns:    []*schema.Column{ReserveColumns[9]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "reserve_rider_rider",
				Columns:    []*schema.Column{ReserveColumns[10]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "reserve_city_city",
				Columns:    []*schema.Column{ReserveColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "reserve_business_business",
				Columns:    []*schema.Column{ReserveColumns[12]},
				RefColumns: []*schema.Column{BusinessColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "reserve_created_at",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[1]},
			},
			{
				Name:    "reserve_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[3]},
			},
			{
				Name:    "reserve_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[9]},
			},
			{
				Name:    "reserve_rider_id",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[10]},
			},
			{
				Name:    "reserve_city_id",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[11]},
			},
			{
				Name:    "reserve_business_id",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[12]},
			},
			{
				Name:    "reserve_type",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[8]},
			},
			{
				Name:    "reserve_status",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[7]},
			},
		},
	}
	// RiderColumns holds the columns for the "rider" table.
	RiderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "骑手姓名"},
		{Name: "id_card_number", Type: field.TypeString, Nullable: true, Comment: "身份证号"},
		{Name: "phone", Type: field.TypeString, Size: 11, Comment: "手机号"},
		{Name: "contact", Type: field.TypeJSON, Nullable: true, Comment: "紧急联系人"},
		{Name: "device_type", Type: field.TypeUint8, Nullable: true, Comment: "登录设备类型: 1iOS 2Android"},
		{Name: "last_device", Type: field.TypeString, Nullable: true, Size: 60, Comment: "最近登录设备"},
		{Name: "is_new_device", Type: field.TypeBool, Comment: "是否新设备", Default: false},
		{Name: "push_id", Type: field.TypeString, Nullable: true, Size: 60, Comment: "推送ID"},
		{Name: "last_signin_at", Type: field.TypeTime, Nullable: true, Comment: "最后登录时间"},
		{Name: "blocked", Type: field.TypeBool, Comment: "是否封禁骑手账号", Default: false},
		{Name: "points", Type: field.TypeInt64, Comment: "骑手积分", Default: 0},
		{Name: "exchange_limit", Type: field.TypeJSON, Nullable: true, Comment: "换电间隔配置"},
		{Name: "exchange_frequency", Type: field.TypeJSON, Nullable: true, Comment: "换电频次配置"},
		{Name: "join_enterprise_at", Type: field.TypeTime, Nullable: true, Comment: "加入团签时间"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "所属企业"},
		{Name: "person_id", Type: field.TypeUint64, Nullable: true, Comment: "身份"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
	}
	// RiderTable holds the schema information for the "rider" table.
	RiderTable = &schema.Table{
		Name:       "rider",
		Columns:    RiderColumns,
		PrimaryKey: []*schema.Column{RiderColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rider_enterprise_riders",
				Columns:    []*schema.Column{RiderColumns[21]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "rider_person_riders",
				Columns:    []*schema.Column{RiderColumns[22]},
				RefColumns: []*schema.Column{PersonColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "rider_enterprise_station_station",
				Columns:    []*schema.Column{RiderColumns[23]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "rider_created_at",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[1]},
			},
			{
				Name:    "rider_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[3]},
			},
			{
				Name:    "rider_station_id",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[23]},
			},
			{
				Name:    "rider_phone",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "rider_name",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "rider_id_card_number",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[8]},
			},
			{
				Name:    "rider_person_id",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[22]},
			},
			{
				Name:    "rider_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[21]},
			},
			{
				Name:    "rider_last_device",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[12]},
			},
			{
				Name:    "rider_push_id",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[14]},
			},
		},
	}
	// RiderFollowUpColumns holds the columns for the "rider_follow_up" table.
	RiderFollowUpColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "manager_id", Type: field.TypeUint64, Comment: "管理人ID"},
	}
	// RiderFollowUpTable holds the schema information for the "rider_follow_up" table.
	RiderFollowUpTable = &schema.Table{
		Name:       "rider_follow_up",
		Columns:    RiderFollowUpColumns,
		PrimaryKey: []*schema.Column{RiderFollowUpColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rider_follow_up_rider_followups",
				Columns:    []*schema.Column{RiderFollowUpColumns[7]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "rider_follow_up_manager_manager",
				Columns:    []*schema.Column{RiderFollowUpColumns[8]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "riderfollowup_created_at",
				Unique:  false,
				Columns: []*schema.Column{RiderFollowUpColumns[1]},
			},
			{
				Name:    "riderfollowup_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{RiderFollowUpColumns[3]},
			},
			{
				Name:    "riderfollowup_manager_id",
				Unique:  false,
				Columns: []*schema.Column{RiderFollowUpColumns[8]},
			},
			{
				Name:    "riderfollowup_rider_id",
				Unique:  false,
				Columns: []*schema.Column{RiderFollowUpColumns[7]},
			},
		},
	}
	// RiderPhoneDeviceColumns holds the columns for the "rider_phone_device" table.
	RiderPhoneDeviceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "device_sn", Type: field.TypeString, Nullable: true, Comment: "设备编号"},
		{Name: "model", Type: field.TypeString, Nullable: true, Comment: "手机型号"},
		{Name: "brand", Type: field.TypeString, Nullable: true, Comment: "手机品牌"},
		{Name: "os_version", Type: field.TypeString, Nullable: true, Comment: "系统版本"},
		{Name: "os_name", Type: field.TypeString, Nullable: true, Comment: "系统名称"},
		{Name: "screen_width", Type: field.TypeUint64, Nullable: true, Comment: "屏幕宽度"},
		{Name: "screen_height", Type: field.TypeUint64, Nullable: true, Comment: "屏幕高度"},
		{Name: "imei", Type: field.TypeString, Nullable: true, Comment: "IMEI"},
		{Name: "rider_id", Type: field.TypeUint64, Unique: true, Comment: "骑手ID"},
	}
	// RiderPhoneDeviceTable holds the schema information for the "rider_phone_device" table.
	RiderPhoneDeviceTable = &schema.Table{
		Name:       "rider_phone_device",
		Columns:    RiderPhoneDeviceColumns,
		PrimaryKey: []*schema.Column{RiderPhoneDeviceColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "riderphonedevice_created_at",
				Unique:  false,
				Columns: []*schema.Column{RiderPhoneDeviceColumns[1]},
			},
			{
				Name:    "riderphonedevice_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{RiderPhoneDeviceColumns[3]},
			},
		},
	}
	// RoleColumns holds the columns for the "role" table.
	RoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "角色"},
		{Name: "permissions", Type: field.TypeJSON, Nullable: true, Comment: "权限列表"},
		{Name: "buildin", Type: field.TypeBool, Comment: "是否内置角色", Default: false},
		{Name: "super", Type: field.TypeBool, Comment: "是否超级管理员", Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// RoleTable holds the schema information for the "role" table.
	RoleTable = &schema.Table{
		Name:       "role",
		Columns:    RoleColumns,
		PrimaryKey: []*schema.Column{RoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "role_name",
				Unique:  false,
				Columns: []*schema.Column{RoleColumns[1]},
			},
			{
				Name:    "role_buildin",
				Unique:  false,
				Columns: []*schema.Column{RoleColumns[3]},
			},
		},
	}
	// SettingColumns holds the columns for the "setting" table.
	SettingColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "key", Type: field.TypeString, Unique: true, Size: 40, Comment: "设置项"},
		{Name: "desc", Type: field.TypeString, Comment: "描述"},
		{Name: "content", Type: field.TypeString, Comment: "值"},
	}
	// SettingTable holds the schema information for the "setting" table.
	SettingTable = &schema.Table{
		Name:       "setting",
		Columns:    SettingColumns,
		PrimaryKey: []*schema.Column{SettingColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "setting_created_at",
				Unique:  false,
				Columns: []*schema.Column{SettingColumns[1]},
			},
		},
	}
	// StockColumns holds the columns for the "stock" table.
	StockColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "sn", Type: field.TypeString, Comment: "调拨编号"},
		{Name: "type", Type: field.TypeUint8, Comment: "类型 0:调拨 1:骑手激活 2:骑手寄存 3:骑手结束寄存 4:骑手退租", Default: 0},
		{Name: "name", Type: field.TypeString, Comment: "物资名称"},
		{Name: "model", Type: field.TypeString, Nullable: true, Comment: "电池型号"},
		{Name: "num", Type: field.TypeInt, Comment: "物资数量: 正值调入 / 负值调出"},
		{Name: "material", Type: field.TypeEnum, Comment: "物资种类", Enums: []string{"battery", "ebike", "others"}},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "入库至 或 出库自 电柜ID"},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "操作店员ID"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "团签ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "对应骑手ID"},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true, Comment: "城市ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
		{Name: "ebike_id", Type: field.TypeUint64, Nullable: true},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
		{Name: "battery_id", Type: field.TypeUint64, Nullable: true},
		{Name: "agent_id", Type: field.TypeUint64, Nullable: true},
		{Name: "stock_spouse", Type: field.TypeUint64, Unique: true, Nullable: true},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true, Comment: "父级"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "入库至 或 出库自 门店ID"},
	}
	// StockTable holds the schema information for the "stock" table.
	StockTable = &schema.Table{
		Name:       "stock",
		Columns:    StockColumns,
		PrimaryKey: []*schema.Column{StockColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "stock_cabinet_stocks",
				Columns:    []*schema.Column{StockColumns[12]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_employee_stocks",
				Columns:    []*schema.Column{StockColumns[13]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_enterprise_stocks",
				Columns:    []*schema.Column{StockColumns[14]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_enterprise_station_stocks",
				Columns:    []*schema.Column{StockColumns[15]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_rider_stocks",
				Columns:    []*schema.Column{StockColumns[16]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_city_city",
				Columns:    []*schema.Column{StockColumns[17]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_subscribe_subscribe",
				Columns:    []*schema.Column{StockColumns[18]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_ebike_ebike",
				Columns:    []*schema.Column{StockColumns[19]},
				RefColumns: []*schema.Column{EbikeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_ebike_brand_brand",
				Columns:    []*schema.Column{StockColumns[20]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_battery_battery",
				Columns:    []*schema.Column{StockColumns[21]},
				RefColumns: []*schema.Column{BatteryColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_agent_agent",
				Columns:    []*schema.Column{StockColumns[22]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_stock_spouse",
				Columns:    []*schema.Column{StockColumns[23]},
				RefColumns: []*schema.Column{StockColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_stock_children",
				Columns:    []*schema.Column{StockColumns[24]},
				RefColumns: []*schema.Column{StockColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_store_stocks",
				Columns:    []*schema.Column{StockColumns[25]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "stock_created_at",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[1]},
			},
			{
				Name:    "stock_creator",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[3]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "stock_city_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[17]},
			},
			{
				Name:    "stock_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[18]},
			},
			{
				Name:    "stock_ebike_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[19]},
			},
			{
				Name:    "stock_brand_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[20]},
			},
			{
				Name:    "stock_battery_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[21]},
			},
			{
				Name:    "stock_agent_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[22]},
			},
			{
				Name:    "stock_store_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[25]},
			},
			{
				Name:    "stock_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[12]},
			},
			{
				Name:    "stock_rider_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[16]},
			},
			{
				Name:    "stock_employee_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[13]},
			},
			{
				Name:    "stock_model",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[9]},
			},
			{
				Name:    "stock_sn",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[6]},
			},
			{
				Name:    "stock_parent_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[24]},
			},
			{
				Name:    "stock_name",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// StockSummaryColumns holds the columns for the "stock_summary" table.
	StockSummaryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "date", Type: field.TypeString, Comment: "日期"},
		{Name: "model", Type: field.TypeString, Nullable: true, Comment: "型号"},
		{Name: "num", Type: field.TypeInt, Comment: "总数", Default: 0},
		{Name: "today_num", Type: field.TypeInt, Comment: "今日总数", Default: 0},
		{Name: "outbound_num", Type: field.TypeInt, Comment: "出库总数", Default: 0},
		{Name: "inbound_num", Type: field.TypeInt, Comment: "入库总数", Default: 0},
		{Name: "in_rider_num", Type: field.TypeInt, Comment: "电池在骑手总数", Default: 0},
		{Name: "material", Type: field.TypeEnum, Nullable: true, Comment: "物资种类", Enums: []string{"battery", "ebike", "others"}},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "企业ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
	}
	// StockSummaryTable holds the schema information for the "stock_summary" table.
	StockSummaryTable = &schema.Table{
		Name:       "stock_summary",
		Columns:    StockSummaryColumns,
		PrimaryKey: []*schema.Column{StockSummaryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "stock_summary_enterprise_enterprise",
				Columns:    []*schema.Column{StockSummaryColumns[9]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_summary_enterprise_station_station",
				Columns:    []*schema.Column{StockSummaryColumns[10]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_summary_store_store",
				Columns:    []*schema.Column{StockSummaryColumns[11]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_summary_rider_rider",
				Columns:    []*schema.Column{StockSummaryColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_summary_cabinet_cabinet",
				Columns:    []*schema.Column{StockSummaryColumns[13]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "stocksummary_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{StockSummaryColumns[9]},
			},
			{
				Name:    "stocksummary_station_id",
				Unique:  false,
				Columns: []*schema.Column{StockSummaryColumns[10]},
			},
			{
				Name:    "stocksummary_store_id",
				Unique:  false,
				Columns: []*schema.Column{StockSummaryColumns[11]},
			},
			{
				Name:    "stocksummary_rider_id",
				Unique:  false,
				Columns: []*schema.Column{StockSummaryColumns[12]},
			},
			{
				Name:    "stocksummary_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{StockSummaryColumns[13]},
			},
			{
				Name:    "stocksummary_date",
				Unique:  false,
				Columns: []*schema.Column{StockSummaryColumns[1]},
			},
		},
	}
	// StoreColumns holds the columns for the "store" table.
	StoreColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "sn", Type: field.TypeString, Unique: true, Comment: "门店编号"},
		{Name: "name", Type: field.TypeString, Comment: "门店名称"},
		{Name: "status", Type: field.TypeUint8, Comment: "门店状态 0维护 1营业 2休息 3隐藏", Default: 0},
		{Name: "lng", Type: field.TypeFloat64, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Comment: "纬度"},
		{Name: "address", Type: field.TypeString, Comment: "详细地址"},
		{Name: "ebike_obtain", Type: field.TypeBool, Comment: "是否可以领取车辆(租车)", Default: false},
		{Name: "ebike_repair", Type: field.TypeBool, Comment: "是否可以维修车辆", Default: false},
		{Name: "ebike_sale", Type: field.TypeBool, Comment: "是否可以购买车辆", Default: false},
		{Name: "rest", Type: field.TypeBool, Comment: "是否拥有驿站", Default: false},
		{Name: "business_hours", Type: field.TypeString, Nullable: true, Comment: "营业时间"},
		{Name: "photos", Type: field.TypeJSON, Nullable: true, Comment: "门店照片"},
		{Name: "phone", Type: field.TypeString, Size: 20, Comment: "门店电话", Default: "4000290929"},
		{Name: "head_pic", Type: field.TypeString, Comment: "门店头图", Default: ""},
		{Name: "branch_id", Type: field.TypeUint64, Comment: "网点ID"},
		{Name: "employee_id", Type: field.TypeUint64, Unique: true, Nullable: true, Comment: "上班员工ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
	}
	// StoreTable holds the schema information for the "store" table.
	StoreTable = &schema.Table{
		Name:       "store",
		Columns:    StoreColumns,
		PrimaryKey: []*schema.Column{StoreColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "store_branch_stores",
				Columns:    []*schema.Column{StoreColumns[21]},
				RefColumns: []*schema.Column{BranchColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "store_employee_store",
				Columns:    []*schema.Column{StoreColumns[22]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "store_city_city",
				Columns:    []*schema.Column{StoreColumns[23]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "store_created_at",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[1]},
			},
			{
				Name:    "store_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[3]},
			},
			{
				Name:    "store_city_id",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[23]},
			},
			{
				Name:    "store_branch_id",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[21]},
			},
			{
				Name:    "store_employee_id",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[22]},
			},
			{
				Name:    "store_status",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[9]},
			},
			{
				Name:    "store_name",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// StoreGoodsColumns holds the columns for the "store_goods" table.
	StoreGoodsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "goods_id", Type: field.TypeUint64, Nullable: true},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true},
	}
	// StoreGoodsTable holds the schema information for the "store_goods" table.
	StoreGoodsTable = &schema.Table{
		Name:       "store_goods",
		Columns:    StoreGoodsColumns,
		PrimaryKey: []*schema.Column{StoreGoodsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "store_goods_goods_stores",
				Columns:    []*schema.Column{StoreGoodsColumns[4]},
				RefColumns: []*schema.Column{GoodsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "store_goods_store_goods",
				Columns:    []*schema.Column{StoreGoodsColumns[5]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "storegoods_created_at",
				Unique:  false,
				Columns: []*schema.Column{StoreGoodsColumns[1]},
			},
			{
				Name:    "storegoods_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{StoreGoodsColumns[3]},
			},
		},
	}
	// SubscribeColumns holds the columns for the "subscribe" table.
	SubscribeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "当前订阅状态", Default: 0},
		{Name: "type", Type: field.TypeUint, Comment: "订阅类型 0团签 1新签 2续签 3重签 4更改电池, 除0值外 其他值参考order.type", Default: 0},
		{Name: "model", Type: field.TypeString, Comment: "电池型号"},
		{Name: "initial_days", Type: field.TypeInt, Nullable: true, Comment: "初始骑士卡天数, 个签和代理模式团签有此字段"},
		{Name: "alter_days", Type: field.TypeInt, Comment: "改动天数", Default: 0},
		{Name: "pause_days", Type: field.TypeInt, Comment: "寄存天数", Default: 0},
		{Name: "suspend_days", Type: field.TypeInt, Comment: "暂停天数", Default: 0},
		{Name: "renewal_days", Type: field.TypeInt, Comment: "续期天数", Default: 0},
		{Name: "overdue_days", Type: field.TypeInt, Comment: "已缴纳逾期滞纳金天数", Default: 0},
		{Name: "remaining", Type: field.TypeInt, Comment: "剩余天数, 负数为逾期, 代理商骑手剩余时间根据agent_end_at计算", Default: 0},
		{Name: "paused_at", Type: field.TypeTime, Nullable: true, Comment: "当前寄存时间"},
		{Name: "suspend_at", Type: field.TypeTime, Nullable: true, Comment: "当前暂停时间"},
		{Name: "start_at", Type: field.TypeTime, Nullable: true, Comment: "激活时间"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "归还/团签结束时间"},
		{Name: "refund_at", Type: field.TypeTime, Nullable: true, Comment: "退款时间"},
		{Name: "unsubscribe_reason", Type: field.TypeString, Nullable: true, Comment: "退租理由"},
		{Name: "last_bill_date", Type: field.TypeTime, Nullable: true, Comment: "上次结算日期(包含该日期)"},
		{Name: "pause_overdue", Type: field.TypeBool, Comment: "是否超期退租", Default: false},
		{Name: "agent_end_at", Type: field.TypeTime, Nullable: true, Comment: "代理商处到期日期"},
		{Name: "formula", Type: field.TypeString, Nullable: true, Comment: "计算公式"},
		{Name: "need_contract", Type: field.TypeBool, Comment: "是否需要签约", Default: false},
		{Name: "intelligent", Type: field.TypeBool, Comment: "是否智能柜套餐", Default: false},
		{Name: "agreement_hash", Type: field.TypeString, Nullable: true, Comment: "签署协议hash"},
		{Name: "deposit_type", Type: field.TypeUint8, Nullable: true, Comment: "押金类型 1:芝麻免押 2:微信支付分免押 3:合同免押 4:支付押金"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "企业ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
		{Name: "ebike_id", Type: field.TypeUint64, Nullable: true},
		{Name: "initial_order_id", Type: field.TypeUint64, Nullable: true, Comment: "初始订单ID(开通订阅的初始订单), 团签用户无此字段"},
		{Name: "enterprise_price_id", Type: field.TypeUint64, Nullable: true, Comment: "团签价格ID"},
	}
	// SubscribeTable holds the schema information for the "subscribe" table.
	SubscribeTable = &schema.Table{
		Name:       "subscribe",
		Columns:    SubscribeColumns,
		PrimaryKey: []*schema.Column{SubscribeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_enterprise_subscribes",
				Columns:    []*schema.Column{SubscribeColumns[31]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_rider_subscribes",
				Columns:    []*schema.Column{SubscribeColumns[32]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_plan_plan",
				Columns:    []*schema.Column{SubscribeColumns[33]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_employee_employee",
				Columns:    []*schema.Column{SubscribeColumns[34]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_city_city",
				Columns:    []*schema.Column{SubscribeColumns[35]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_enterprise_station_station",
				Columns:    []*schema.Column{SubscribeColumns[36]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_store_store",
				Columns:    []*schema.Column{SubscribeColumns[37]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_cabinet_cabinet",
				Columns:    []*schema.Column{SubscribeColumns[38]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_ebike_brand_brand",
				Columns:    []*schema.Column{SubscribeColumns[39]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_ebike_ebike",
				Columns:    []*schema.Column{SubscribeColumns[40]},
				RefColumns: []*schema.Column{EbikeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_order_initial_order",
				Columns:    []*schema.Column{SubscribeColumns[41]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_enterprise_price_enterprise_price",
				Columns:    []*schema.Column{SubscribeColumns[42]},
				RefColumns: []*schema.Column{EnterprisePriceColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribe_created_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[1]},
			},
			{
				Name:    "subscribe_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[3]},
			},
			{
				Name:    "subscribe_plan_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[33]},
			},
			{
				Name:    "subscribe_employee_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[34]},
			},
			{
				Name:    "subscribe_city_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[35]},
			},
			{
				Name:    "subscribe_station_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[36]},
			},
			{
				Name:    "subscribe_store_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[37]},
			},
			{
				Name:    "subscribe_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[38]},
			},
			{
				Name:    "subscribe_brand_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[39]},
			},
			{
				Name:    "subscribe_ebike_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[40]},
			},
			{
				Name:    "subscribe_rider_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[32]},
			},
			{
				Name:    "subscribe_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[31]},
			},
			{
				Name:    "subscribe_paused_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[17]},
			},
			{
				Name:    "subscribe_last_bill_date",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[23]},
			},
			{
				Name:    "subscribe_start_at_end_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[19], SubscribeColumns[20]},
			},
		},
	}
	// SubscribeAlterColumns holds the columns for the "subscribe_alter" table.
	SubscribeAlterColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "days", Type: field.TypeInt, Comment: "更改天数"},
		{Name: "status", Type: field.TypeInt, Comment: "状态", Default: 0},
		{Name: "review_time", Type: field.TypeTime, Nullable: true, Comment: "审批时间"},
		{Name: "subscribe_end_at", Type: field.TypeTime, Nullable: true, Comment: "订阅预期到期时间"},
		{Name: "subscribe_id", Type: field.TypeUint64, Comment: "订阅ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "manager_id", Type: field.TypeUint64, Nullable: true, Comment: "管理人ID"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "企业ID"},
		{Name: "agent_id", Type: field.TypeUint64, Nullable: true},
	}
	// SubscribeAlterTable holds the schema information for the "subscribe_alter" table.
	SubscribeAlterTable = &schema.Table{
		Name:       "subscribe_alter",
		Columns:    SubscribeAlterColumns,
		PrimaryKey: []*schema.Column{SubscribeAlterColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_alter_subscribe_alters",
				Columns:    []*schema.Column{SubscribeAlterColumns[10]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_alter_rider_rider",
				Columns:    []*schema.Column{SubscribeAlterColumns[11]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_alter_manager_manager",
				Columns:    []*schema.Column{SubscribeAlterColumns[12]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_alter_enterprise_enterprise",
				Columns:    []*schema.Column{SubscribeAlterColumns[13]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_alter_agent_agent",
				Columns:    []*schema.Column{SubscribeAlterColumns[14]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribealter_created_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[1]},
			},
			{
				Name:    "subscribealter_rider_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[11]},
			},
			{
				Name:    "subscribealter_manager_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[12]},
			},
			{
				Name:    "subscribealter_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[13]},
			},
			{
				Name:    "subscribealter_agent_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[14]},
			},
			{
				Name:    "subscribealter_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[10]},
			},
		},
	}
	// SubscribePauseColumns holds the columns for the "subscribe_pause" table.
	SubscribePauseColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "start_at", Type: field.TypeTime, Comment: "寄存开始时间"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "寄存结束时间"},
		{Name: "days", Type: field.TypeInt, Nullable: true, Comment: "寄存天数 = 天数差 - 重复天数"},
		{Name: "overdue_days", Type: field.TypeInt, Comment: "超期天数", Default: 0},
		{Name: "end_modifier", Type: field.TypeJSON, Nullable: true, Comment: "结束寄存管理员信息"},
		{Name: "pause_overdue", Type: field.TypeBool, Comment: "是否超期退租", Default: false},
		{Name: "suspend_days", Type: field.TypeInt, Comment: "重复天数, 寄存过程中暂停扣费天数", Default: 0},
		{Name: "subscribe_id", Type: field.TypeUint64, Comment: "订阅ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true, Comment: "城市ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "end_store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "end_cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "end_employee_id", Type: field.TypeUint64, Nullable: true, Comment: "结束寄存店员ID"},
	}
	// SubscribePauseTable holds the schema information for the "subscribe_pause" table.
	SubscribePauseTable = &schema.Table{
		Name:       "subscribe_pause",
		Columns:    SubscribePauseColumns,
		PrimaryKey: []*schema.Column{SubscribePauseColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_pause_subscribe_pauses",
				Columns:    []*schema.Column{SubscribePauseColumns[14]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_pause_rider_rider",
				Columns:    []*schema.Column{SubscribePauseColumns[15]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_pause_employee_employee",
				Columns:    []*schema.Column{SubscribePauseColumns[16]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_city_city",
				Columns:    []*schema.Column{SubscribePauseColumns[17]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_store_store",
				Columns:    []*schema.Column{SubscribePauseColumns[18]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_store_endStore",
				Columns:    []*schema.Column{SubscribePauseColumns[19]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_cabinet_cabinet",
				Columns:    []*schema.Column{SubscribePauseColumns[20]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_cabinet_endCabinet",
				Columns:    []*schema.Column{SubscribePauseColumns[21]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_employee_end_employee",
				Columns:    []*schema.Column{SubscribePauseColumns[22]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribepause_created_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[1]},
			},
			{
				Name:    "subscribepause_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[3]},
			},
			{
				Name:    "subscribepause_creator",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[4]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "subscribepause_rider_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[15]},
			},
			{
				Name:    "subscribepause_employee_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[16]},
			},
			{
				Name:    "subscribepause_city_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[17]},
			},
			{
				Name:    "subscribepause_store_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[18]},
			},
			{
				Name:    "subscribepause_end_store_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[19]},
			},
			{
				Name:    "subscribepause_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[20]},
			},
			{
				Name:    "subscribepause_end_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[21]},
			},
			{
				Name:    "subscribepause_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[14]},
			},
			{
				Name:    "subscribepause_end_modifier",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[11]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// SubscribeReminderColumns holds the columns for the "subscribe_reminder" table.
	SubscribeReminderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "type", Type: field.TypeEnum, Comment: "催费类型", Enums: []string{"sms", "vms"}},
		{Name: "phone", Type: field.TypeString, Comment: "电话"},
		{Name: "name", Type: field.TypeString, Comment: "姓名"},
		{Name: "success", Type: field.TypeBool, Comment: "是否成功"},
		{Name: "days", Type: field.TypeInt, Comment: "剩余天数"},
		{Name: "plan_name", Type: field.TypeString, Comment: "套餐名称"},
		{Name: "date", Type: field.TypeString, Comment: "发送日期"},
		{Name: "fee", Type: field.TypeFloat64, Comment: "逾期费用", Default: 0},
		{Name: "fee_formula", Type: field.TypeString, Nullable: true, Comment: "逾期费用计算公式"},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "plan_id", Type: field.TypeUint64},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
	}
	// SubscribeReminderTable holds the schema information for the "subscribe_reminder" table.
	SubscribeReminderTable = &schema.Table{
		Name:       "subscribe_reminder",
		Columns:    SubscribeReminderColumns,
		PrimaryKey: []*schema.Column{SubscribeReminderColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_reminder_subscribe_subscribe",
				Columns:    []*schema.Column{SubscribeReminderColumns[12]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_reminder_plan_plan",
				Columns:    []*schema.Column{SubscribeReminderColumns[13]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_reminder_rider_rider",
				Columns:    []*schema.Column{SubscribeReminderColumns[14]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribereminder_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[12]},
			},
			{
				Name:    "subscribereminder_plan_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[13]},
			},
			{
				Name:    "subscribereminder_rider_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[14]},
			},
			{
				Name:    "subscribereminder_type",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[3]},
			},
			{
				Name:    "subscribereminder_date",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[9]},
			},
			{
				Name:    "subscribereminder_name",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[5]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "subscribereminder_phone",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[4]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// SubscribeSuspendColumns holds the columns for the "subscribe_suspend" table.
	SubscribeSuspendColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "days", Type: field.TypeInt, Comment: "暂停天数", Default: 0},
		{Name: "start_at", Type: field.TypeTime, Comment: "开始时间"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "结束时间"},
		{Name: "end_reason", Type: field.TypeString, Nullable: true, Comment: "结束理由"},
		{Name: "end_modifier", Type: field.TypeJSON, Nullable: true, Comment: "继续计费管理员信息"},
		{Name: "subscribe_id", Type: field.TypeUint64, Comment: "订阅ID"},
		{Name: "pause_id", Type: field.TypeUint64, Nullable: true, Comment: "寄存ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
	}
	// SubscribeSuspendTable holds the schema information for the "subscribe_suspend" table.
	SubscribeSuspendTable = &schema.Table{
		Name:       "subscribe_suspend",
		Columns:    SubscribeSuspendColumns,
		PrimaryKey: []*schema.Column{SubscribeSuspendColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_suspend_subscribe_suspends",
				Columns:    []*schema.Column{SubscribeSuspendColumns[9]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_suspend_subscribe_pause_suspends",
				Columns:    []*schema.Column{SubscribeSuspendColumns[10]},
				RefColumns: []*schema.Column{SubscribePauseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_suspend_city_city",
				Columns:    []*schema.Column{SubscribeSuspendColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_suspend_rider_rider",
				Columns:    []*schema.Column{SubscribeSuspendColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribesuspend_city_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeSuspendColumns[11]},
			},
			{
				Name:    "subscribesuspend_rider_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeSuspendColumns[12]},
			},
			{
				Name:    "subscribesuspend_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeSuspendColumns[9]},
			},
			{
				Name:    "subscribesuspend_pause_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeSuspendColumns[10]},
			},
		},
	}
	// VersionColumns holds the columns for the "version" table.
	VersionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "platform", Type: field.TypeOther, Comment: "平台", SchemaType: map[string]string{"postgres": "character varying"}},
		{Name: "version", Type: field.TypeString, Unique: true, Comment: "版本号"},
		{Name: "content", Type: field.TypeString, Comment: "更新内容"},
		{Name: "force", Type: field.TypeBool, Comment: "是否强制更新"},
	}
	// VersionTable holds the schema information for the "version" table.
	VersionTable = &schema.Table{
		Name:       "version",
		Columns:    VersionColumns,
		PrimaryKey: []*schema.Column{VersionColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "version_created_at",
				Unique:  false,
				Columns: []*schema.Column{VersionColumns[1]},
			},
			{
				Name:    "version_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{VersionColumns[3]},
			},
			{
				Name:    "version_platform_version",
				Unique:  true,
				Columns: []*schema.Column{VersionColumns[7], VersionColumns[8]},
			},
		},
	}
	// WarehouseColumns holds the columns for the "warehouse" table.
	WarehouseColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "仓库名称"},
		{Name: "lng", Type: field.TypeFloat64, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Comment: "纬度"},
		{Name: "address", Type: field.TypeString, Nullable: true, Comment: "详细地址"},
		{Name: "sn", Type: field.TypeString, Unique: true, Comment: "仓库编号"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
	}
	// WarehouseTable holds the schema information for the "warehouse" table.
	WarehouseTable = &schema.Table{
		Name:       "warehouse",
		Columns:    WarehouseColumns,
		PrimaryKey: []*schema.Column{WarehouseColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "warehouse_city_city",
				Columns:    []*schema.Column{WarehouseColumns[12]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "warehouse_created_at",
				Unique:  false,
				Columns: []*schema.Column{WarehouseColumns[1]},
			},
			{
				Name:    "warehouse_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{WarehouseColumns[3]},
			},
			{
				Name:    "warehouse_city_id",
				Unique:  false,
				Columns: []*schema.Column{WarehouseColumns[12]},
			},
			{
				Name:    "warehouse_name",
				Unique:  false,
				Columns: []*schema.Column{WarehouseColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// AgentStationsColumns holds the columns for the "agent_stations" table.
	AgentStationsColumns = []*schema.Column{
		{Name: "agent_id", Type: field.TypeInt},
		{Name: "enterprise_station_id", Type: field.TypeInt},
	}
	// AgentStationsTable holds the schema information for the "agent_stations" table.
	AgentStationsTable = &schema.Table{
		Name:       "agent_stations",
		Columns:    AgentStationsColumns,
		PrimaryKey: []*schema.Column{AgentStationsColumns[0], AgentStationsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "agent_stations_agent_id",
				Columns:    []*schema.Column{AgentStationsColumns[0]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "agent_stations_enterprise_station_id",
				Columns:    []*schema.Column{AgentStationsColumns[1]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CabinetModelsColumns holds the columns for the "cabinet_models" table.
	CabinetModelsColumns = []*schema.Column{
		{Name: "cabinet_id", Type: field.TypeInt},
		{Name: "battery_model_id", Type: field.TypeInt},
	}
	// CabinetModelsTable holds the schema information for the "cabinet_models" table.
	CabinetModelsTable = &schema.Table{
		Name:       "cabinet_models",
		Columns:    CabinetModelsColumns,
		PrimaryKey: []*schema.Column{CabinetModelsColumns[0], CabinetModelsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cabinet_models_cabinet_id",
				Columns:    []*schema.Column{CabinetModelsColumns[0]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "cabinet_models_battery_model_id",
				Columns:    []*schema.Column{CabinetModelsColumns[1]},
				RefColumns: []*schema.Column{BatteryModelColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CityMaintainersColumns holds the columns for the "city_maintainers" table.
	CityMaintainersColumns = []*schema.Column{
		{Name: "city_id", Type: field.TypeUint64},
		{Name: "maintainer_id", Type: field.TypeInt},
	}
	// CityMaintainersTable holds the schema information for the "city_maintainers" table.
	CityMaintainersTable = &schema.Table{
		Name:       "city_maintainers",
		Columns:    CityMaintainersColumns,
		PrimaryKey: []*schema.Column{CityMaintainersColumns[0], CityMaintainersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "city_maintainers_city_id",
				Columns:    []*schema.Column{CityMaintainersColumns[0]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "city_maintainers_maintainer_id",
				Columns:    []*schema.Column{CityMaintainersColumns[1]},
				RefColumns: []*schema.Column{MaintainerColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PlanCitiesColumns holds the columns for the "plan_cities" table.
	PlanCitiesColumns = []*schema.Column{
		{Name: "plan_id", Type: field.TypeInt},
		{Name: "city_id", Type: field.TypeUint64},
	}
	// PlanCitiesTable holds the schema information for the "plan_cities" table.
	PlanCitiesTable = &schema.Table{
		Name:       "plan_cities",
		Columns:    PlanCitiesColumns,
		PrimaryKey: []*schema.Column{PlanCitiesColumns[0], PlanCitiesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plan_cities_plan_id",
				Columns:    []*schema.Column{PlanCitiesColumns[0]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "plan_cities_city_id",
				Columns:    []*schema.Column{PlanCitiesColumns[1]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// StoreEmployeesColumns holds the columns for the "store_employees" table.
	StoreEmployeesColumns = []*schema.Column{
		{Name: "store_id", Type: field.TypeInt},
		{Name: "employee_id", Type: field.TypeInt},
	}
	// StoreEmployeesTable holds the schema information for the "store_employees" table.
	StoreEmployeesTable = &schema.Table{
		Name:       "store_employees",
		Columns:    StoreEmployeesColumns,
		PrimaryKey: []*schema.Column{StoreEmployeesColumns[0], StoreEmployeesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "store_employees_store_id",
				Columns:    []*schema.Column{StoreEmployeesColumns[0]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "store_employees_employee_id",
				Columns:    []*schema.Column{StoreEmployeesColumns[1]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// WarehouseAssetManagersColumns holds the columns for the "warehouse_asset_managers" table.
	WarehouseAssetManagersColumns = []*schema.Column{
		{Name: "warehouse_id", Type: field.TypeInt},
		{Name: "asset_manager_id", Type: field.TypeInt},
	}
	// WarehouseAssetManagersTable holds the schema information for the "warehouse_asset_managers" table.
	WarehouseAssetManagersTable = &schema.Table{
		Name:       "warehouse_asset_managers",
		Columns:    WarehouseAssetManagersColumns,
		PrimaryKey: []*schema.Column{WarehouseAssetManagersColumns[0], WarehouseAssetManagersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "warehouse_asset_managers_warehouse_id",
				Columns:    []*schema.Column{WarehouseAssetManagersColumns[0]},
				RefColumns: []*schema.Column{WarehouseColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "warehouse_asset_managers_asset_manager_id",
				Columns:    []*schema.Column{WarehouseAssetManagersColumns[1]},
				RefColumns: []*schema.Column{AssetManagerColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActivityTable,
		AgentTable,
		AgreementTable,
		AllocateTable,
		AssetTable,
		AssetAttributeValuesTable,
		AssetAttributesTable,
		AssetCheckTable,
		AssetCheckDetailsTable,
		AssetMaintenanceTable,
		AssetMaintenanceDetailsTable,
		AssetManagerTable,
		AssetRoleTable,
		AssetScrapTable,
		AssetScrapDetailsTable,
		AssetTransferTable,
		AssetTransferDetailsTable,
		AssistanceTable,
		AttendanceTable,
		BatteryTable,
		BatteryFlowTable,
		BatteryModelTable,
		BranchTable,
		BranchContractTable,
		BusinessTable,
		CabinetTable,
		CabinetEcTable,
		CabinetFaultTable,
		CityTable,
		CommissionTable,
		ContractTable,
		ContractTemplateTable,
		CouponTable,
		CouponAssemblyTable,
		CouponTemplateTable,
		EbikeTable,
		EbikeBrandTable,
		EbikeBrandAttributeTable,
		EmployeeTable,
		EnterpriseTable,
		EnterpriseBatterySwapTable,
		EnterpriseBillTable,
		EnterpriseContractTable,
		EnterprisePrepaymentTable,
		EnterprisePriceTable,
		EnterpriseStatementTable,
		EnterpriseStationTable,
		ExceptionTable,
		ExchangeTable,
		ExportTable,
		FaultTable,
		FeedbackTable,
		GoodsTable,
		InstructionsTable,
		InventoryTable,
		MaintainerTable,
		ManagerTable,
		MaterialTable,
		OrderTable,
		OrderRefundTable,
		PersonTable,
		PlanTable,
		PlanIntroduceTable,
		PointLogTable,
		PromotionAchievementTable,
		PromotionBankCardTable,
		PromotionCommissionTable,
		PromotionCommissionPlanTable,
		PromotionEarningsTable,
		PromotionGrowthTable,
		PromotionLevelTable,
		PromotionLevelTaskTable,
		PromotionMemberTable,
		PromotionMemberCommissionTable,
		PromotionPersonTable,
		PromotionPrivilegeTable,
		PromotionReferralsTable,
		PromotionReferralsProgressTable,
		PromotionSettingTable,
		PromotionWithdrawalTable,
		QuestionTable,
		QuestionCategoryTable,
		ReserveTable,
		RiderTable,
		RiderFollowUpTable,
		RiderPhoneDeviceTable,
		RoleTable,
		SettingTable,
		StockTable,
		StockSummaryTable,
		StoreTable,
		StoreGoodsTable,
		SubscribeTable,
		SubscribeAlterTable,
		SubscribePauseTable,
		SubscribeReminderTable,
		SubscribeSuspendTable,
		VersionTable,
		WarehouseTable,
		AgentStationsTable,
		CabinetModelsTable,
		CityMaintainersTable,
		PlanCitiesTable,
		StoreEmployeesTable,
		WarehouseAssetManagersTable,
	}
)

func init() {
	ActivityTable.Annotation = &entsql.Annotation{
		Table: "activity",
	}
	AgentTable.ForeignKeys[0].RefTable = EnterpriseTable
	AgentTable.ForeignKeys[1].RefTable = EnterpriseTable
	AgentTable.Annotation = &entsql.Annotation{
		Table: "agent",
	}
	AgreementTable.Annotation = &entsql.Annotation{
		Table: "agreement",
	}
	AllocateTable.ForeignKeys[0].RefTable = RiderTable
	AllocateTable.ForeignKeys[1].RefTable = SubscribeTable
	AllocateTable.ForeignKeys[2].RefTable = EmployeeTable
	AllocateTable.ForeignKeys[3].RefTable = CabinetTable
	AllocateTable.ForeignKeys[4].RefTable = StoreTable
	AllocateTable.ForeignKeys[5].RefTable = EbikeBrandTable
	AllocateTable.ForeignKeys[6].RefTable = BatteryTable
	AllocateTable.ForeignKeys[7].RefTable = EnterpriseStationTable
	AllocateTable.ForeignKeys[8].RefTable = AgentTable
	AllocateTable.ForeignKeys[9].RefTable = EbikeTable
	AllocateTable.Annotation = &entsql.Annotation{
		Table: "allocate",
	}
	AssetTable.ForeignKeys[0].RefTable = EbikeBrandTable
	AssetTable.ForeignKeys[1].RefTable = BatteryModelTable
	AssetTable.ForeignKeys[2].RefTable = CityTable
	AssetTable.ForeignKeys[3].RefTable = MaterialTable
	AssetTable.ForeignKeys[4].RefTable = WarehouseTable
	AssetTable.ForeignKeys[5].RefTable = StoreTable
	AssetTable.ForeignKeys[6].RefTable = CabinetTable
	AssetTable.ForeignKeys[7].RefTable = EnterpriseStationTable
	AssetTable.ForeignKeys[8].RefTable = RiderTable
	AssetTable.ForeignKeys[9].RefTable = MaintainerTable
	AssetTable.Annotation = &entsql.Annotation{
		Table: "asset",
	}
	AssetAttributeValuesTable.ForeignKeys[0].RefTable = AssetTable
	AssetAttributeValuesTable.ForeignKeys[1].RefTable = AssetAttributesTable
	AssetAttributeValuesTable.Annotation = &entsql.Annotation{
		Table: "asset_attribute_values",
	}
	AssetAttributesTable.Annotation = &entsql.Annotation{
		Table: "asset_attributes",
	}
	AssetCheckTable.ForeignKeys[0].RefTable = ManagerTable
	AssetCheckTable.ForeignKeys[1].RefTable = StoreTable
	AssetCheckTable.ForeignKeys[2].RefTable = AgentTable
	AssetCheckTable.ForeignKeys[3].RefTable = WarehouseTable
	AssetCheckTable.ForeignKeys[4].RefTable = StoreTable
	AssetCheckTable.ForeignKeys[5].RefTable = EnterpriseStationTable
	AssetCheckTable.Annotation = &entsql.Annotation{
		Table: "asset_check",
	}
	AssetCheckDetailsTable.ForeignKeys[0].RefTable = AssetTable
	AssetCheckDetailsTable.ForeignKeys[1].RefTable = AssetCheckTable
	AssetCheckDetailsTable.ForeignKeys[2].RefTable = MaintainerTable
	AssetCheckDetailsTable.ForeignKeys[3].RefTable = WarehouseTable
	AssetCheckDetailsTable.ForeignKeys[4].RefTable = StoreTable
	AssetCheckDetailsTable.ForeignKeys[5].RefTable = CabinetTable
	AssetCheckDetailsTable.ForeignKeys[6].RefTable = EnterpriseStationTable
	AssetCheckDetailsTable.ForeignKeys[7].RefTable = RiderTable
	AssetCheckDetailsTable.ForeignKeys[8].RefTable = MaintainerTable
	AssetCheckDetailsTable.ForeignKeys[9].RefTable = WarehouseTable
	AssetCheckDetailsTable.ForeignKeys[10].RefTable = StoreTable
	AssetCheckDetailsTable.ForeignKeys[11].RefTable = CabinetTable
	AssetCheckDetailsTable.ForeignKeys[12].RefTable = EnterpriseStationTable
	AssetCheckDetailsTable.ForeignKeys[13].RefTable = RiderTable
	AssetCheckDetailsTable.ForeignKeys[14].RefTable = MaintainerTable
	AssetCheckDetailsTable.Annotation = &entsql.Annotation{
		Table: "asset_check_details",
	}
	AssetMaintenanceTable.ForeignKeys[0].RefTable = CabinetTable
	AssetMaintenanceTable.ForeignKeys[1].RefTable = MaintainerTable
	AssetMaintenanceTable.Annotation = &entsql.Annotation{
		Table: "asset_maintenance",
	}
	AssetMaintenanceDetailsTable.ForeignKeys[0].RefTable = AssetTable
	AssetMaintenanceDetailsTable.ForeignKeys[1].RefTable = AssetMaintenanceTable
	AssetMaintenanceDetailsTable.ForeignKeys[2].RefTable = MaterialTable
	AssetMaintenanceDetailsTable.Annotation = &entsql.Annotation{
		Table: "asset_maintenance_details",
	}
	AssetManagerTable.ForeignKeys[0].RefTable = AssetRoleTable
	AssetManagerTable.Annotation = &entsql.Annotation{
		Table: "asset_manager",
	}
	AssetRoleTable.Annotation = &entsql.Annotation{
		Table: "asset_role",
	}
	AssetScrapTable.ForeignKeys[0].RefTable = ManagerTable
	AssetScrapTable.ForeignKeys[1].RefTable = EmployeeTable
	AssetScrapTable.ForeignKeys[2].RefTable = MaintainerTable
	AssetScrapTable.ForeignKeys[3].RefTable = AgentTable
	AssetScrapTable.Annotation = &entsql.Annotation{
		Table: "asset_scrap",
	}
	AssetScrapDetailsTable.ForeignKeys[0].RefTable = AssetTable
	AssetScrapDetailsTable.ForeignKeys[1].RefTable = AssetScrapTable
	AssetScrapDetailsTable.ForeignKeys[2].RefTable = MaterialTable
	AssetScrapDetailsTable.Annotation = &entsql.Annotation{
		Table: "asset_scrap_details",
	}
	AssetTransferTable.ForeignKeys[0].RefTable = StoreTable
	AssetTransferTable.ForeignKeys[1].RefTable = CabinetTable
	AssetTransferTable.ForeignKeys[2].RefTable = EnterpriseStationTable
	AssetTransferTable.ForeignKeys[3].RefTable = RiderTable
	AssetTransferTable.ForeignKeys[4].RefTable = MaintainerTable
	AssetTransferTable.ForeignKeys[5].RefTable = WarehouseTable
	AssetTransferTable.ForeignKeys[6].RefTable = StoreTable
	AssetTransferTable.ForeignKeys[7].RefTable = CabinetTable
	AssetTransferTable.ForeignKeys[8].RefTable = EnterpriseStationTable
	AssetTransferTable.ForeignKeys[9].RefTable = RiderTable
	AssetTransferTable.ForeignKeys[10].RefTable = MaintainerTable
	AssetTransferTable.ForeignKeys[11].RefTable = WarehouseTable
	AssetTransferTable.ForeignKeys[12].RefTable = ManagerTable
	AssetTransferTable.ForeignKeys[13].RefTable = StoreTable
	AssetTransferTable.ForeignKeys[14].RefTable = AgentTable
	AssetTransferTable.ForeignKeys[15].RefTable = MaintainerTable
	AssetTransferTable.ForeignKeys[16].RefTable = CabinetTable
	AssetTransferTable.ForeignKeys[17].RefTable = RiderTable
	AssetTransferTable.Annotation = &entsql.Annotation{
		Table: "asset_transfer",
	}
	AssetTransferDetailsTable.ForeignKeys[0].RefTable = AssetTable
	AssetTransferDetailsTable.ForeignKeys[1].RefTable = AssetTransferTable
	AssetTransferDetailsTable.ForeignKeys[2].RefTable = ManagerTable
	AssetTransferDetailsTable.ForeignKeys[3].RefTable = StoreTable
	AssetTransferDetailsTable.ForeignKeys[4].RefTable = AgentTable
	AssetTransferDetailsTable.ForeignKeys[5].RefTable = MaintainerTable
	AssetTransferDetailsTable.ForeignKeys[6].RefTable = CabinetTable
	AssetTransferDetailsTable.ForeignKeys[7].RefTable = RiderTable
	AssetTransferDetailsTable.Annotation = &entsql.Annotation{
		Table: "asset_transfer_details",
	}
	AssistanceTable.ForeignKeys[0].RefTable = StoreTable
	AssistanceTable.ForeignKeys[1].RefTable = RiderTable
	AssistanceTable.ForeignKeys[2].RefTable = SubscribeTable
	AssistanceTable.ForeignKeys[3].RefTable = CityTable
	AssistanceTable.ForeignKeys[4].RefTable = EmployeeTable
	AssistanceTable.ForeignKeys[5].RefTable = OrderTable
	AssistanceTable.Annotation = &entsql.Annotation{
		Table: "assistance",
	}
	AttendanceTable.ForeignKeys[0].RefTable = EmployeeTable
	AttendanceTable.ForeignKeys[1].RefTable = StoreTable
	AttendanceTable.Annotation = &entsql.Annotation{
		Table: "attendance",
	}
	BatteryTable.ForeignKeys[0].RefTable = CityTable
	BatteryTable.ForeignKeys[1].RefTable = CabinetTable
	BatteryTable.ForeignKeys[2].RefTable = EnterpriseTable
	BatteryTable.ForeignKeys[3].RefTable = EnterpriseStationTable
	BatteryTable.ForeignKeys[4].RefTable = RiderTable
	BatteryTable.ForeignKeys[5].RefTable = SubscribeTable
	BatteryTable.Annotation = &entsql.Annotation{
		Table: "battery",
	}
	BatteryFlowTable.ForeignKeys[0].RefTable = BatteryTable
	BatteryFlowTable.ForeignKeys[1].RefTable = SubscribeTable
	BatteryFlowTable.ForeignKeys[2].RefTable = CabinetTable
	BatteryFlowTable.ForeignKeys[3].RefTable = RiderTable
	BatteryFlowTable.Annotation = &entsql.Annotation{
		Table: "battery_flow",
	}
	BatteryModelTable.Annotation = &entsql.Annotation{
		Table: "battery_model",
	}
	BranchTable.ForeignKeys[0].RefTable = CityTable
	BranchTable.Annotation = &entsql.Annotation{
		Table: "branch",
	}
	BranchContractTable.ForeignKeys[0].RefTable = BranchTable
	BranchContractTable.Annotation = &entsql.Annotation{
		Table: "branch_contract",
	}
	BusinessTable.ForeignKeys[0].RefTable = RiderTable
	BusinessTable.ForeignKeys[1].RefTable = CityTable
	BusinessTable.ForeignKeys[2].RefTable = SubscribeTable
	BusinessTable.ForeignKeys[3].RefTable = EmployeeTable
	BusinessTable.ForeignKeys[4].RefTable = StoreTable
	BusinessTable.ForeignKeys[5].RefTable = PlanTable
	BusinessTable.ForeignKeys[6].RefTable = EnterpriseTable
	BusinessTable.ForeignKeys[7].RefTable = EnterpriseStationTable
	BusinessTable.ForeignKeys[8].RefTable = CabinetTable
	BusinessTable.ForeignKeys[9].RefTable = BatteryTable
	BusinessTable.ForeignKeys[10].RefTable = AgentTable
	BusinessTable.ForeignKeys[11].RefTable = EbikeTable
	BusinessTable.Annotation = &entsql.Annotation{
		Table: "business",
	}
	CabinetTable.ForeignKeys[0].RefTable = BranchTable
	CabinetTable.ForeignKeys[1].RefTable = CityTable
	CabinetTable.ForeignKeys[2].RefTable = StoreTable
	CabinetTable.ForeignKeys[3].RefTable = MaintainerTable
	CabinetTable.ForeignKeys[4].RefTable = EnterpriseTable
	CabinetTable.ForeignKeys[5].RefTable = EnterpriseStationTable
	CabinetTable.Annotation = &entsql.Annotation{
		Table: "cabinet",
	}
	CabinetEcTable.ForeignKeys[0].RefTable = CabinetTable
	CabinetEcTable.Annotation = &entsql.Annotation{
		Table: "cabinet_ec",
	}
	CabinetFaultTable.ForeignKeys[0].RefTable = BranchTable
	CabinetFaultTable.ForeignKeys[1].RefTable = CabinetTable
	CabinetFaultTable.ForeignKeys[2].RefTable = CityTable
	CabinetFaultTable.ForeignKeys[3].RefTable = RiderTable
	CabinetFaultTable.Annotation = &entsql.Annotation{
		Table: "cabinet_fault",
	}
	CityTable.ForeignKeys[0].RefTable = CityTable
	CityTable.Annotation = &entsql.Annotation{
		Table: "city",
	}
	CommissionTable.ForeignKeys[0].RefTable = BusinessTable
	CommissionTable.ForeignKeys[1].RefTable = SubscribeTable
	CommissionTable.ForeignKeys[2].RefTable = PlanTable
	CommissionTable.ForeignKeys[3].RefTable = RiderTable
	CommissionTable.ForeignKeys[4].RefTable = EmployeeTable
	CommissionTable.ForeignKeys[5].RefTable = OrderTable
	CommissionTable.Annotation = &entsql.Annotation{
		Table: "commission",
	}
	ContractTable.ForeignKeys[0].RefTable = AllocateTable
	ContractTable.ForeignKeys[1].RefTable = SubscribeTable
	ContractTable.ForeignKeys[2].RefTable = EmployeeTable
	ContractTable.ForeignKeys[3].RefTable = RiderTable
	ContractTable.Annotation = &entsql.Annotation{
		Table: "contract",
	}
	ContractTemplateTable.Annotation = &entsql.Annotation{
		Table: "contract_template",
	}
	CouponTable.ForeignKeys[0].RefTable = RiderTable
	CouponTable.ForeignKeys[1].RefTable = CouponAssemblyTable
	CouponTable.ForeignKeys[2].RefTable = PlanTable
	CouponTable.ForeignKeys[3].RefTable = CouponTemplateTable
	CouponTable.ForeignKeys[4].RefTable = OrderTable
	CouponTable.Annotation = &entsql.Annotation{
		Table: "coupon",
	}
	CouponAssemblyTable.ForeignKeys[0].RefTable = CouponTemplateTable
	CouponAssemblyTable.Annotation = &entsql.Annotation{
		Table: "coupon_assembly",
	}
	CouponTemplateTable.Annotation = &entsql.Annotation{
		Table: "coupon_template",
	}
	EbikeTable.ForeignKeys[0].RefTable = EbikeBrandTable
	EbikeTable.ForeignKeys[1].RefTable = RiderTable
	EbikeTable.ForeignKeys[2].RefTable = StoreTable
	EbikeTable.ForeignKeys[3].RefTable = EnterpriseTable
	EbikeTable.ForeignKeys[4].RefTable = EnterpriseStationTable
	EbikeTable.ForeignKeys[5].RefTable = RiderTable
	EbikeTable.Annotation = &entsql.Annotation{
		Table: "ebike",
	}
	EbikeBrandTable.Annotation = &entsql.Annotation{
		Table: "ebike_brand",
	}
	EbikeBrandAttributeTable.ForeignKeys[0].RefTable = EbikeBrandTable
	EbikeBrandAttributeTable.Annotation = &entsql.Annotation{
		Table: "ebike_brand_attribute",
	}
	EmployeeTable.ForeignKeys[0].RefTable = CityTable
	EmployeeTable.Annotation = &entsql.Annotation{
		Table: "employee",
	}
	EnterpriseTable.ForeignKeys[0].RefTable = CityTable
	EnterpriseTable.Annotation = &entsql.Annotation{
		Table: "enterprise",
	}
	EnterpriseBatterySwapTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseBatterySwapTable.ForeignKeys[1].RefTable = EnterpriseTable
	EnterpriseBatterySwapTable.ForeignKeys[2].RefTable = ExchangeTable
	EnterpriseBatterySwapTable.ForeignKeys[3].RefTable = CabinetTable
	EnterpriseBatterySwapTable.ForeignKeys[4].RefTable = BatteryTable
	EnterpriseBatterySwapTable.ForeignKeys[5].RefTable = BatteryTable
	EnterpriseBatterySwapTable.ForeignKeys[6].RefTable = EnterpriseStationTable
	EnterpriseBatterySwapTable.ForeignKeys[7].RefTable = EnterpriseStationTable
	EnterpriseBatterySwapTable.Annotation = &entsql.Annotation{
		Table: "enterprise_battery_swap",
	}
	EnterpriseBillTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseBillTable.ForeignKeys[1].RefTable = RiderTable
	EnterpriseBillTable.ForeignKeys[2].RefTable = CityTable
	EnterpriseBillTable.ForeignKeys[3].RefTable = EnterpriseStationTable
	EnterpriseBillTable.ForeignKeys[4].RefTable = EnterpriseStatementTable
	EnterpriseBillTable.ForeignKeys[5].RefTable = SubscribeTable
	EnterpriseBillTable.Annotation = &entsql.Annotation{
		Table: "enterprise_bill",
	}
	EnterpriseContractTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseContractTable.Annotation = &entsql.Annotation{
		Table: "enterprise_contract",
	}
	EnterprisePrepaymentTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterprisePrepaymentTable.ForeignKeys[1].RefTable = AgentTable
	EnterprisePrepaymentTable.Annotation = &entsql.Annotation{
		Table: "enterprise_prepayment",
	}
	EnterprisePriceTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterprisePriceTable.ForeignKeys[1].RefTable = CityTable
	EnterprisePriceTable.ForeignKeys[2].RefTable = EbikeBrandTable
	EnterprisePriceTable.ForeignKeys[3].RefTable = AgreementTable
	EnterprisePriceTable.Annotation = &entsql.Annotation{
		Table: "enterprise_price",
	}
	EnterpriseStatementTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseStatementTable.Annotation = &entsql.Annotation{
		Table: "enterprise_statement",
	}
	EnterpriseStationTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseStationTable.ForeignKeys[1].RefTable = CityTable
	EnterpriseStationTable.Annotation = &entsql.Annotation{
		Table: "enterprise_station",
	}
	ExceptionTable.ForeignKeys[0].RefTable = CityTable
	ExceptionTable.ForeignKeys[1].RefTable = EmployeeTable
	ExceptionTable.ForeignKeys[2].RefTable = StoreTable
	ExceptionTable.Annotation = &entsql.Annotation{
		Table: "exception",
	}
	ExchangeTable.ForeignKeys[0].RefTable = CabinetTable
	ExchangeTable.ForeignKeys[1].RefTable = EmployeeTable
	ExchangeTable.ForeignKeys[2].RefTable = SubscribeTable
	ExchangeTable.ForeignKeys[3].RefTable = CityTable
	ExchangeTable.ForeignKeys[4].RefTable = StoreTable
	ExchangeTable.ForeignKeys[5].RefTable = EnterpriseTable
	ExchangeTable.ForeignKeys[6].RefTable = EnterpriseStationTable
	ExchangeTable.ForeignKeys[7].RefTable = RiderTable
	ExchangeTable.Annotation = &entsql.Annotation{
		Table: "exchange",
	}
	ExportTable.ForeignKeys[0].RefTable = ManagerTable
	ExportTable.Annotation = &entsql.Annotation{
		Table: "export",
	}
	FaultTable.ForeignKeys[0].RefTable = CityTable
	FaultTable.ForeignKeys[1].RefTable = CabinetTable
	FaultTable.ForeignKeys[2].RefTable = BatteryTable
	FaultTable.ForeignKeys[3].RefTable = EbikeTable
	FaultTable.ForeignKeys[4].RefTable = RiderTable
	FaultTable.Annotation = &entsql.Annotation{
		Table: "fault",
	}
	FeedbackTable.ForeignKeys[0].RefTable = EnterpriseTable
	FeedbackTable.ForeignKeys[1].RefTable = AgentTable
	FeedbackTable.ForeignKeys[2].RefTable = RiderTable
	FeedbackTable.ForeignKeys[3].RefTable = CityTable
	FeedbackTable.Annotation = &entsql.Annotation{
		Table: "feedback",
	}
	GoodsTable.Annotation = &entsql.Annotation{
		Table: "goods",
	}
	InstructionsTable.Annotation = &entsql.Annotation{
		Table: "instructions",
	}
	InventoryTable.Annotation = &entsql.Annotation{
		Table: "inventory",
	}
	MaintainerTable.Annotation = &entsql.Annotation{
		Table: "maintainer",
	}
	ManagerTable.ForeignKeys[0].RefTable = RoleTable
	ManagerTable.Annotation = &entsql.Annotation{
		Table: "manager",
	}
	MaterialTable.Annotation = &entsql.Annotation{
		Table: "material",
	}
	OrderTable.ForeignKeys[0].RefTable = PlanTable
	OrderTable.ForeignKeys[1].RefTable = CityTable
	OrderTable.ForeignKeys[2].RefTable = EbikeBrandTable
	OrderTable.ForeignKeys[3].RefTable = EbikeTable
	OrderTable.ForeignKeys[4].RefTable = AgentTable
	OrderTable.ForeignKeys[5].RefTable = OrderTable
	OrderTable.ForeignKeys[6].RefTable = RiderTable
	OrderTable.ForeignKeys[7].RefTable = SubscribeTable
	OrderTable.Annotation = &entsql.Annotation{
		Table: "order",
	}
	OrderRefundTable.ForeignKeys[0].RefTable = OrderTable
	OrderRefundTable.Annotation = &entsql.Annotation{
		Table: "order_refund",
	}
	PersonTable.Annotation = &entsql.Annotation{
		Table: "person",
	}
	PlanTable.ForeignKeys[0].RefTable = EbikeBrandTable
	PlanTable.ForeignKeys[1].RefTable = AgreementTable
	PlanTable.ForeignKeys[2].RefTable = PlanTable
	PlanTable.Annotation = &entsql.Annotation{
		Table: "plan",
	}
	PlanIntroduceTable.ForeignKeys[0].RefTable = EbikeBrandTable
	PlanIntroduceTable.Annotation = &entsql.Annotation{
		Table: "plan_introduce",
	}
	PointLogTable.ForeignKeys[0].RefTable = RiderTable
	PointLogTable.ForeignKeys[1].RefTable = OrderTable
	PointLogTable.Annotation = &entsql.Annotation{
		Table: "point_log",
	}
	PromotionAchievementTable.Annotation = &entsql.Annotation{
		Table: "promotion_achievement",
	}
	PromotionBankCardTable.ForeignKeys[0].RefTable = PromotionMemberTable
	PromotionBankCardTable.Annotation = &entsql.Annotation{
		Table: "promotion_bank_card",
	}
	PromotionCommissionTable.ForeignKeys[0].RefTable = PromotionMemberTable
	PromotionCommissionTable.Annotation = &entsql.Annotation{
		Table: "promotion_commission",
	}
	PromotionCommissionPlanTable.ForeignKeys[0].RefTable = PlanTable
	PromotionCommissionPlanTable.ForeignKeys[1].RefTable = PromotionCommissionTable
	PromotionCommissionPlanTable.ForeignKeys[2].RefTable = PromotionMemberTable
	PromotionCommissionPlanTable.Annotation = &entsql.Annotation{
		Table: "promotion_commission_plan",
	}
	PromotionEarningsTable.ForeignKeys[0].RefTable = PromotionCommissionTable
	PromotionEarningsTable.ForeignKeys[1].RefTable = PromotionMemberTable
	PromotionEarningsTable.ForeignKeys[2].RefTable = RiderTable
	PromotionEarningsTable.ForeignKeys[3].RefTable = OrderTable
	PromotionEarningsTable.ForeignKeys[4].RefTable = PlanTable
	PromotionEarningsTable.Annotation = &entsql.Annotation{
		Table: "promotion_earnings",
	}
	PromotionGrowthTable.ForeignKeys[0].RefTable = PromotionMemberTable
	PromotionGrowthTable.ForeignKeys[1].RefTable = PromotionLevelTaskTable
	PromotionGrowthTable.ForeignKeys[2].RefTable = RiderTable
	PromotionGrowthTable.Annotation = &entsql.Annotation{
		Table: "promotion_growth",
	}
	PromotionLevelTable.Annotation = &entsql.Annotation{
		Table: "promotion_level",
	}
	PromotionLevelTaskTable.Annotation = &entsql.Annotation{
		Table: "promotion_level_task",
	}
	PromotionMemberTable.ForeignKeys[0].RefTable = RiderTable
	PromotionMemberTable.ForeignKeys[1].RefTable = SubscribeTable
	PromotionMemberTable.ForeignKeys[2].RefTable = PromotionLevelTable
	PromotionMemberTable.ForeignKeys[3].RefTable = PromotionPersonTable
	PromotionMemberTable.Annotation = &entsql.Annotation{
		Table: "promotion_member",
	}
	PromotionMemberCommissionTable.ForeignKeys[0].RefTable = PromotionMemberTable
	PromotionMemberCommissionTable.ForeignKeys[1].RefTable = PromotionCommissionTable
	PromotionMemberCommissionTable.Annotation = &entsql.Annotation{
		Table: "promotion_member_commission",
	}
	PromotionPersonTable.Annotation = &entsql.Annotation{
		Table: "promotion_person",
	}
	PromotionPrivilegeTable.Annotation = &entsql.Annotation{
		Table: "promotion_privilege",
	}
	PromotionReferralsTable.ForeignKeys[0].RefTable = PromotionMemberTable
	PromotionReferralsTable.ForeignKeys[1].RefTable = PromotionMemberTable
	PromotionReferralsTable.ForeignKeys[2].RefTable = RiderTable
	PromotionReferralsTable.ForeignKeys[3].RefTable = SubscribeTable
	PromotionReferralsTable.Annotation = &entsql.Annotation{
		Table: "promotion_referrals",
	}
	PromotionReferralsProgressTable.ForeignKeys[0].RefTable = RiderTable
	PromotionReferralsProgressTable.Annotation = &entsql.Annotation{
		Table: "promotion_referrals_progress",
	}
	PromotionSettingTable.Annotation = &entsql.Annotation{
		Table: "promotion_setting",
	}
	PromotionWithdrawalTable.ForeignKeys[0].RefTable = PromotionBankCardTable
	PromotionWithdrawalTable.ForeignKeys[1].RefTable = PromotionMemberTable
	PromotionWithdrawalTable.Annotation = &entsql.Annotation{
		Table: "promotion_withdrawal",
	}
	QuestionTable.ForeignKeys[0].RefTable = QuestionCategoryTable
	QuestionTable.Annotation = &entsql.Annotation{
		Table: "question",
	}
	QuestionCategoryTable.Annotation = &entsql.Annotation{
		Table: "question_category",
	}
	ReserveTable.ForeignKeys[0].RefTable = CabinetTable
	ReserveTable.ForeignKeys[1].RefTable = RiderTable
	ReserveTable.ForeignKeys[2].RefTable = CityTable
	ReserveTable.ForeignKeys[3].RefTable = BusinessTable
	ReserveTable.Annotation = &entsql.Annotation{
		Table: "reserve",
	}
	RiderTable.ForeignKeys[0].RefTable = EnterpriseTable
	RiderTable.ForeignKeys[1].RefTable = PersonTable
	RiderTable.ForeignKeys[2].RefTable = EnterpriseStationTable
	RiderTable.Annotation = &entsql.Annotation{
		Table: "rider",
	}
	RiderFollowUpTable.ForeignKeys[0].RefTable = RiderTable
	RiderFollowUpTable.ForeignKeys[1].RefTable = ManagerTable
	RiderFollowUpTable.Annotation = &entsql.Annotation{
		Table: "rider_follow_up",
	}
	RiderPhoneDeviceTable.Annotation = &entsql.Annotation{
		Table: "rider_phone_device",
	}
	RoleTable.Annotation = &entsql.Annotation{
		Table: "role",
	}
	SettingTable.Annotation = &entsql.Annotation{
		Table: "setting",
	}
	StockTable.ForeignKeys[0].RefTable = CabinetTable
	StockTable.ForeignKeys[1].RefTable = EmployeeTable
	StockTable.ForeignKeys[2].RefTable = EnterpriseTable
	StockTable.ForeignKeys[3].RefTable = EnterpriseStationTable
	StockTable.ForeignKeys[4].RefTable = RiderTable
	StockTable.ForeignKeys[5].RefTable = CityTable
	StockTable.ForeignKeys[6].RefTable = SubscribeTable
	StockTable.ForeignKeys[7].RefTable = EbikeTable
	StockTable.ForeignKeys[8].RefTable = EbikeBrandTable
	StockTable.ForeignKeys[9].RefTable = BatteryTable
	StockTable.ForeignKeys[10].RefTable = AgentTable
	StockTable.ForeignKeys[11].RefTable = StockTable
	StockTable.ForeignKeys[12].RefTable = StockTable
	StockTable.ForeignKeys[13].RefTable = StoreTable
	StockTable.Annotation = &entsql.Annotation{
		Table: "stock",
	}
	StockSummaryTable.ForeignKeys[0].RefTable = EnterpriseTable
	StockSummaryTable.ForeignKeys[1].RefTable = EnterpriseStationTable
	StockSummaryTable.ForeignKeys[2].RefTable = StoreTable
	StockSummaryTable.ForeignKeys[3].RefTable = RiderTable
	StockSummaryTable.ForeignKeys[4].RefTable = CabinetTable
	StockSummaryTable.Annotation = &entsql.Annotation{
		Table: "stock_summary",
	}
	StoreTable.ForeignKeys[0].RefTable = BranchTable
	StoreTable.ForeignKeys[1].RefTable = EmployeeTable
	StoreTable.ForeignKeys[2].RefTable = CityTable
	StoreTable.Annotation = &entsql.Annotation{
		Table: "store",
	}
	StoreGoodsTable.ForeignKeys[0].RefTable = GoodsTable
	StoreGoodsTable.ForeignKeys[1].RefTable = StoreTable
	StoreGoodsTable.Annotation = &entsql.Annotation{
		Table: "store_goods",
	}
	SubscribeTable.ForeignKeys[0].RefTable = EnterpriseTable
	SubscribeTable.ForeignKeys[1].RefTable = RiderTable
	SubscribeTable.ForeignKeys[2].RefTable = PlanTable
	SubscribeTable.ForeignKeys[3].RefTable = EmployeeTable
	SubscribeTable.ForeignKeys[4].RefTable = CityTable
	SubscribeTable.ForeignKeys[5].RefTable = EnterpriseStationTable
	SubscribeTable.ForeignKeys[6].RefTable = StoreTable
	SubscribeTable.ForeignKeys[7].RefTable = CabinetTable
	SubscribeTable.ForeignKeys[8].RefTable = EbikeBrandTable
	SubscribeTable.ForeignKeys[9].RefTable = EbikeTable
	SubscribeTable.ForeignKeys[10].RefTable = OrderTable
	SubscribeTable.ForeignKeys[11].RefTable = EnterprisePriceTable
	SubscribeTable.Annotation = &entsql.Annotation{
		Table: "subscribe",
	}
	SubscribeAlterTable.ForeignKeys[0].RefTable = SubscribeTable
	SubscribeAlterTable.ForeignKeys[1].RefTable = RiderTable
	SubscribeAlterTable.ForeignKeys[2].RefTable = ManagerTable
	SubscribeAlterTable.ForeignKeys[3].RefTable = EnterpriseTable
	SubscribeAlterTable.ForeignKeys[4].RefTable = AgentTable
	SubscribeAlterTable.Annotation = &entsql.Annotation{
		Table: "subscribe_alter",
	}
	SubscribePauseTable.ForeignKeys[0].RefTable = SubscribeTable
	SubscribePauseTable.ForeignKeys[1].RefTable = RiderTable
	SubscribePauseTable.ForeignKeys[2].RefTable = EmployeeTable
	SubscribePauseTable.ForeignKeys[3].RefTable = CityTable
	SubscribePauseTable.ForeignKeys[4].RefTable = StoreTable
	SubscribePauseTable.ForeignKeys[5].RefTable = StoreTable
	SubscribePauseTable.ForeignKeys[6].RefTable = CabinetTable
	SubscribePauseTable.ForeignKeys[7].RefTable = CabinetTable
	SubscribePauseTable.ForeignKeys[8].RefTable = EmployeeTable
	SubscribePauseTable.Annotation = &entsql.Annotation{
		Table: "subscribe_pause",
	}
	SubscribeReminderTable.ForeignKeys[0].RefTable = SubscribeTable
	SubscribeReminderTable.ForeignKeys[1].RefTable = PlanTable
	SubscribeReminderTable.ForeignKeys[2].RefTable = RiderTable
	SubscribeReminderTable.Annotation = &entsql.Annotation{
		Table: "subscribe_reminder",
	}
	SubscribeSuspendTable.ForeignKeys[0].RefTable = SubscribeTable
	SubscribeSuspendTable.ForeignKeys[1].RefTable = SubscribePauseTable
	SubscribeSuspendTable.ForeignKeys[2].RefTable = CityTable
	SubscribeSuspendTable.ForeignKeys[3].RefTable = RiderTable
	SubscribeSuspendTable.Annotation = &entsql.Annotation{
		Table: "subscribe_suspend",
	}
	VersionTable.Annotation = &entsql.Annotation{
		Table: "version",
	}
	WarehouseTable.ForeignKeys[0].RefTable = CityTable
	WarehouseTable.Annotation = &entsql.Annotation{
		Table: "warehouse",
	}
	AgentStationsTable.ForeignKeys[0].RefTable = AgentTable
	AgentStationsTable.ForeignKeys[1].RefTable = EnterpriseStationTable
	CabinetModelsTable.ForeignKeys[0].RefTable = CabinetTable
	CabinetModelsTable.ForeignKeys[1].RefTable = BatteryModelTable
	CityMaintainersTable.ForeignKeys[0].RefTable = CityTable
	CityMaintainersTable.ForeignKeys[1].RefTable = MaintainerTable
	PlanCitiesTable.ForeignKeys[0].RefTable = PlanTable
	PlanCitiesTable.ForeignKeys[1].RefTable = CityTable
	StoreEmployeesTable.ForeignKeys[0].RefTable = StoreTable
	StoreEmployeesTable.ForeignKeys[1].RefTable = EmployeeTable
	WarehouseAssetManagersTable.ForeignKeys[0].RefTable = WarehouseTable
	WarehouseAssetManagersTable.ForeignKeys[1].RefTable = AssetManagerTable
}
