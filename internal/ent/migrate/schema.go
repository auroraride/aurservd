// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AgentColumns holds the columns for the "agent" table.
	AgentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "enterprise_id", Type: field.TypeUint64},
	}
	// AgentTable holds the schema information for the "agent" table.
	AgentTable = &schema.Table{
		Name:       "agent",
		Columns:    AgentColumns,
		PrimaryKey: []*schema.Column{AgentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "agent_enterprise_enterprise",
				Columns:    []*schema.Column{AgentColumns[10]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "agent_created_at",
				Unique:  false,
				Columns: []*schema.Column{AgentColumns[1]},
			},
			{
				Name:    "agent_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AgentColumns[3]},
			},
			{
				Name:    "agent_phone",
				Unique:  false,
				Columns: []*schema.Column{AgentColumns[8]},
			},
		},
	}
	// AssistanceColumns holds the columns for the "assistance" table.
	AssistanceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeUint8, Default: 0},
		{Name: "lng", Type: field.TypeFloat64},
		{Name: "lat", Type: field.TypeFloat64},
		{Name: "address", Type: field.TypeString},
		{Name: "breakdown", Type: field.TypeString},
		{Name: "breakdown_desc", Type: field.TypeString, Nullable: true},
		{Name: "breakdown_photos", Type: field.TypeJSON},
		{Name: "cancel_reason", Type: field.TypeString, Nullable: true},
		{Name: "cancel_reason_desc", Type: field.TypeString, Nullable: true},
		{Name: "distance", Type: field.TypeFloat64, Nullable: true},
		{Name: "reason", Type: field.TypeString, Nullable: true},
		{Name: "detect_photo", Type: field.TypeString, Nullable: true},
		{Name: "joint_photo", Type: field.TypeString, Nullable: true},
		{Name: "cost", Type: field.TypeFloat64, Nullable: true, Default: 0},
		{Name: "refused_desc", Type: field.TypeString, Nullable: true},
		{Name: "pay_at", Type: field.TypeTime, Nullable: true},
		{Name: "allocate_at", Type: field.TypeTime, Nullable: true},
		{Name: "wait", Type: field.TypeInt, Default: 0},
		{Name: "free_reason", Type: field.TypeString, Nullable: true},
		{Name: "fail_reason", Type: field.TypeString, Nullable: true},
		{Name: "process_at", Type: field.TypeTime, Nullable: true},
		{Name: "price", Type: field.TypeFloat64, Nullable: true},
		{Name: "navi_duration", Type: field.TypeInt, Nullable: true},
		{Name: "navi_polylines", Type: field.TypeJSON, Nullable: true},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true},
		{Name: "order_id", Type: field.TypeUint64, Unique: true, Nullable: true},
	}
	// AssistanceTable holds the schema information for the "assistance" table.
	AssistanceTable = &schema.Table{
		Name:       "assistance",
		Columns:    AssistanceColumns,
		PrimaryKey: []*schema.Column{AssistanceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "assistance_store_store",
				Columns:    []*schema.Column{AssistanceColumns[31]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "assistance_rider_rider",
				Columns:    []*schema.Column{AssistanceColumns[32]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "assistance_subscribe_subscribe",
				Columns:    []*schema.Column{AssistanceColumns[33]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "assistance_city_city",
				Columns:    []*schema.Column{AssistanceColumns[34]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "assistance_employee_assistances",
				Columns:    []*schema.Column{AssistanceColumns[35]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "assistance_order_assistance",
				Columns:    []*schema.Column{AssistanceColumns[36]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assistance_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[1]},
			},
			{
				Name:    "assistance_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[3]},
			},
			{
				Name:    "assistance_status",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[7]},
			},
		},
	}
	// AttendanceColumns holds the columns for the "attendance" table.
	AttendanceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "inventory", Type: field.TypeJSON, Nullable: true},
		{Name: "photo", Type: field.TypeString, Nullable: true},
		{Name: "duty", Type: field.TypeBool},
		{Name: "date", Type: field.TypeTime},
		{Name: "lng", Type: field.TypeFloat64, Nullable: true},
		{Name: "lat", Type: field.TypeFloat64, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "distance", Type: field.TypeFloat64, Nullable: true},
		{Name: "employee_id", Type: field.TypeUint64},
		{Name: "store_id", Type: field.TypeUint64},
	}
	// AttendanceTable holds the schema information for the "attendance" table.
	AttendanceTable = &schema.Table{
		Name:       "attendance",
		Columns:    AttendanceColumns,
		PrimaryKey: []*schema.Column{AttendanceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "attendance_employee_attendances",
				Columns:    []*schema.Column{AttendanceColumns[15]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "attendance_store_attendances",
				Columns:    []*schema.Column{AttendanceColumns[16]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "attendance_created_at",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[1]},
			},
			{
				Name:    "attendance_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[3]},
			},
			{
				Name:    "attendance_date_duty",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[10], AttendanceColumns[9]},
			},
		},
	}
	// BatteryModelColumns holds the columns for the "battery_model" table.
	BatteryModelColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "model", Type: field.TypeString, Unique: true},
		{Name: "enable", Type: field.TypeBool, Default: true},
	}
	// BatteryModelTable holds the schema information for the "battery_model" table.
	BatteryModelTable = &schema.Table{
		Name:       "battery_model",
		Columns:    BatteryModelColumns,
		PrimaryKey: []*schema.Column{BatteryModelColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "batterymodel_created_at",
				Unique:  false,
				Columns: []*schema.Column{BatteryModelColumns[1]},
			},
			{
				Name:    "batterymodel_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{BatteryModelColumns[3]},
			},
			{
				Name:    "batterymodel_model",
				Unique:  false,
				Columns: []*schema.Column{BatteryModelColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// BranchColumns holds the columns for the "branch" table.
	BranchColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "lng", Type: field.TypeFloat64},
		{Name: "lat", Type: field.TypeFloat64},
		{Name: "address", Type: field.TypeString},
		{Name: "photos", Type: field.TypeJSON},
		{Name: "geom", Type: field.TypeOther, Unique: true, SchemaType: map[string]string{"postgres": "geometry"}},
		{Name: "city_id", Type: field.TypeUint64},
	}
	// BranchTable holds the schema information for the "branch" table.
	BranchTable = &schema.Table{
		Name:       "branch",
		Columns:    BranchColumns,
		PrimaryKey: []*schema.Column{BranchColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "branch_city_city",
				Columns:    []*schema.Column{BranchColumns[13]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "branch_created_at",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[1]},
			},
			{
				Name:    "branch_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[3]},
			},
			{
				Name:    "branch_lng_lat",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[8], BranchColumns[9]},
			},
			{
				Name:    "branch_geom",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[12]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIST",
					},
				},
			},
			{
				Name:    "branch_name",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// BranchContractColumns holds the columns for the "branch_contract" table.
	BranchContractColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "landlord_name", Type: field.TypeString},
		{Name: "id_card_number", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "bank_number", Type: field.TypeString},
		{Name: "pledge", Type: field.TypeFloat64},
		{Name: "rent", Type: field.TypeFloat64},
		{Name: "lease", Type: field.TypeUint},
		{Name: "electricity_pledge", Type: field.TypeFloat64},
		{Name: "electricity", Type: field.TypeString},
		{Name: "area", Type: field.TypeFloat64},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "file", Type: field.TypeString},
		{Name: "sheets", Type: field.TypeJSON},
		{Name: "branch_id", Type: field.TypeUint64},
	}
	// BranchContractTable holds the schema information for the "branch_contract" table.
	BranchContractTable = &schema.Table{
		Name:       "branch_contract",
		Columns:    BranchContractColumns,
		PrimaryKey: []*schema.Column{BranchContractColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "branch_contract_branch_contracts",
				Columns:    []*schema.Column{BranchContractColumns[21]},
				RefColumns: []*schema.Column{BranchColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "branchcontract_created_at",
				Unique:  false,
				Columns: []*schema.Column{BranchContractColumns[1]},
			},
			{
				Name:    "branchcontract_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{BranchContractColumns[3]},
			},
		},
	}
	// BusinessColumns holds the columns for the "business" table.
	BusinessColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"active", "pause", "continue", "unsubscribe"}},
		{Name: "bin_info", Type: field.TypeJSON, Nullable: true},
		{Name: "stock_sn", Type: field.TypeString, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true},
	}
	// BusinessTable holds the schema information for the "business" table.
	BusinessTable = &schema.Table{
		Name:       "business",
		Columns:    BusinessColumns,
		PrimaryKey: []*schema.Column{BusinessColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "business_rider_rider",
				Columns:    []*schema.Column{BusinessColumns[10]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "business_city_city",
				Columns:    []*schema.Column{BusinessColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "business_subscribe_subscribe",
				Columns:    []*schema.Column{BusinessColumns[12]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "business_employee_employee",
				Columns:    []*schema.Column{BusinessColumns[13]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_store_store",
				Columns:    []*schema.Column{BusinessColumns[14]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_plan_plan",
				Columns:    []*schema.Column{BusinessColumns[15]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_enterprise_enterprise",
				Columns:    []*schema.Column{BusinessColumns[16]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_enterprise_station_station",
				Columns:    []*schema.Column{BusinessColumns[17]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_cabinet_cabinet",
				Columns:    []*schema.Column{BusinessColumns[18]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "business_created_at",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[1]},
			},
			{
				Name:    "business_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[3]},
			},
			{
				Name:    "business_type",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[7]},
			},
			{
				Name:    "business_stock_sn",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[9]},
			},
		},
	}
	// CabinetColumns holds the columns for the "cabinet" table.
	CabinetColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "sn", Type: field.TypeString, Unique: true},
		{Name: "brand", Type: field.TypeString},
		{Name: "serial", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "doors", Type: field.TypeInt},
		{Name: "status", Type: field.TypeUint8},
		{Name: "health", Type: field.TypeUint8, Default: 0},
		{Name: "bin", Type: field.TypeJSON, Nullable: true},
		{Name: "lng", Type: field.TypeFloat64, Nullable: true},
		{Name: "lat", Type: field.TypeFloat64, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "sim_sn", Type: field.TypeString, Nullable: true},
		{Name: "sim_date", Type: field.TypeTime, Nullable: true},
		{Name: "transferred", Type: field.TypeBool, Default: false},
		{Name: "battery_num", Type: field.TypeInt, Default: 0},
		{Name: "battery_full_num", Type: field.TypeInt, Default: 0},
		{Name: "battery_charging_num", Type: field.TypeInt, Default: 0},
		{Name: "empty_bin_num", Type: field.TypeInt, Default: 0},
		{Name: "locked_bin_num", Type: field.TypeInt, Default: 0},
		{Name: "branch_id", Type: field.TypeUint64, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true},
	}
	// CabinetTable holds the schema information for the "cabinet" table.
	CabinetTable = &schema.Table{
		Name:       "cabinet",
		Columns:    CabinetColumns,
		PrimaryKey: []*schema.Column{CabinetColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cabinet_branch_cabinets",
				Columns:    []*schema.Column{CabinetColumns[26]},
				RefColumns: []*schema.Column{BranchColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cabinet_city_city",
				Columns:    []*schema.Column{CabinetColumns[27]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "cabinet_created_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[1]},
			},
			{
				Name:    "cabinet_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[3]},
			},
			{
				Name:    "cabinet_branch_id",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[26]},
			},
			{
				Name:    "cabinet_brand",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[8]},
			},
			{
				Name:    "cabinet_serial",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "cabinet_name",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[10]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "cabinet_bin",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[14]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "cabinet_sim_date",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[19]},
			},
		},
	}
	// CabinetFaultColumns holds the columns for the "cabinet_fault" table.
	CabinetFaultColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeUint8, Default: 0},
		{Name: "fault", Type: field.TypeString, Nullable: true},
		{Name: "attachments", Type: field.TypeJSON, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "branch_id", Type: field.TypeUint64},
		{Name: "cabinet_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64},
		{Name: "rider_id", Type: field.TypeUint64},
	}
	// CabinetFaultTable holds the schema information for the "cabinet_fault" table.
	CabinetFaultTable = &schema.Table{
		Name:       "cabinet_fault",
		Columns:    CabinetFaultColumns,
		PrimaryKey: []*schema.Column{CabinetFaultColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cabinet_fault_branch_faults",
				Columns:    []*schema.Column{CabinetFaultColumns[11]},
				RefColumns: []*schema.Column{BranchColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "cabinet_fault_cabinet_faults",
				Columns:    []*schema.Column{CabinetFaultColumns[12]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "cabinet_fault_city_city",
				Columns:    []*schema.Column{CabinetFaultColumns[13]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "cabinet_fault_rider_faults",
				Columns:    []*schema.Column{CabinetFaultColumns[14]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "cabinetfault_created_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[1]},
			},
			{
				Name:    "cabinetfault_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[3]},
			},
			{
				Name:    "cabinetfault_status",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[7]},
			},
		},
	}
	// CityColumns holds the columns for the "city" table.
	CityColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "open", Type: field.TypeBool, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "code", Type: field.TypeString, Size: 10},
		{Name: "lng", Type: field.TypeFloat64, Nullable: true},
		{Name: "lat", Type: field.TypeFloat64, Nullable: true},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true},
	}
	// CityTable holds the schema information for the "city" table.
	CityTable = &schema.Table{
		Name:       "city",
		Columns:    CityColumns,
		PrimaryKey: []*schema.Column{CityColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "city_city_children",
				Columns:    []*schema.Column{CityColumns[12]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "city_created_at",
				Unique:  false,
				Columns: []*schema.Column{CityColumns[1]},
			},
			{
				Name:    "city_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CityColumns[3]},
			},
			{
				Name:    "city_open",
				Unique:  false,
				Columns: []*schema.Column{CityColumns[7]},
			},
			{
				Name:    "city_parent_id",
				Unique:  false,
				Columns: []*schema.Column{CityColumns[12]},
			},
		},
	}
	// CommissionColumns holds the columns for the "commission" table.
	CommissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "amount", Type: field.TypeFloat64},
		{Name: "status", Type: field.TypeUint8, Default: 0},
		{Name: "business_id", Type: field.TypeUint64, Nullable: true},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true},
		{Name: "order_id", Type: field.TypeUint64, Unique: true},
	}
	// CommissionTable holds the schema information for the "commission" table.
	CommissionTable = &schema.Table{
		Name:       "commission",
		Columns:    CommissionColumns,
		PrimaryKey: []*schema.Column{CommissionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "commission_business_business",
				Columns:    []*schema.Column{CommissionColumns[9]},
				RefColumns: []*schema.Column{BusinessColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_subscribe_subscribe",
				Columns:    []*schema.Column{CommissionColumns[10]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_plan_plan",
				Columns:    []*schema.Column{CommissionColumns[11]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_rider_rider",
				Columns:    []*schema.Column{CommissionColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_employee_commissions",
				Columns:    []*schema.Column{CommissionColumns[13]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_order_commission",
				Columns:    []*schema.Column{CommissionColumns[14]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "commission_created_at",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[1]},
			},
			{
				Name:    "commission_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[3]},
			},
			{
				Name:    "commission_status",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[8]},
			},
		},
	}
	// ContractColumns holds the columns for the "contract" table.
	ContractColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeUint8, Default: 0},
		{Name: "flow_id", Type: field.TypeString, Unique: true, Size: 64},
		{Name: "sn", Type: field.TypeString, Unique: true, Size: 64},
		{Name: "files", Type: field.TypeJSON, Nullable: true},
		{Name: "effective", Type: field.TypeBool, Default: true},
		{Name: "rider_id", Type: field.TypeUint64},
	}
	// ContractTable holds the schema information for the "contract" table.
	ContractTable = &schema.Table{
		Name:       "contract",
		Columns:    ContractColumns,
		PrimaryKey: []*schema.Column{ContractColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contract_rider_contracts",
				Columns:    []*schema.Column{ContractColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "contract_created_at",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[1]},
			},
			{
				Name:    "contract_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[3]},
			},
			{
				Name:    "contract_status_effective",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[7], ContractColumns[11]},
			},
		},
	}
	// EmployeeColumns holds the columns for the "employee" table.
	EmployeeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "sn", Type: field.TypeUUID, Unique: true, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "enable", Type: field.TypeBool, Default: true},
		{Name: "city_id", Type: field.TypeUint64},
	}
	// EmployeeTable holds the schema information for the "employee" table.
	EmployeeTable = &schema.Table{
		Name:       "employee",
		Columns:    EmployeeColumns,
		PrimaryKey: []*schema.Column{EmployeeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "employee_city_city",
				Columns:    []*schema.Column{EmployeeColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "employee_created_at",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[1]},
			},
			{
				Name:    "employee_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[3]},
			},
			{
				Name:    "employee_enable",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[10]},
			},
			{
				Name:    "employee_name",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "employee_phone",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// EnterpriseColumns holds the columns for the "enterprise" table.
	EnterpriseColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "company_name", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeUint8},
		{Name: "contact_name", Type: field.TypeString},
		{Name: "contact_phone", Type: field.TypeString},
		{Name: "idcard_number", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "payment", Type: field.TypeUint8},
		{Name: "deposit", Type: field.TypeFloat64, Default: 0},
		{Name: "balance", Type: field.TypeFloat64, Default: 0},
		{Name: "prepayment_total", Type: field.TypeFloat64, Default: 0},
		{Name: "suspensed_at", Type: field.TypeTime, Nullable: true},
		{Name: "agent", Type: field.TypeBool, Default: false},
		{Name: "use_store", Type: field.TypeBool, Nullable: true, Default: true},
		{Name: "days", Type: field.TypeJSON, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64},
	}
	// EnterpriseTable holds the schema information for the "enterprise" table.
	EnterpriseTable = &schema.Table{
		Name:       "enterprise",
		Columns:    EnterpriseColumns,
		PrimaryKey: []*schema.Column{EnterpriseColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_city_city",
				Columns:    []*schema.Column{EnterpriseColumns[22]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprise_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[1]},
			},
			{
				Name:    "enterprise_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[3]},
			},
			{
				Name:    "enterprise_payment",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[14]},
			},
			{
				Name:    "enterprise_balance",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[16]},
			},
			{
				Name:    "enterprise_name",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "enterprise_contact_name",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[10]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "enterprise_contact_phone",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[11]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "enterprise_idcard_number",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[12]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// EnterpriseBillColumns holds the columns for the "enterprise_bill" table.
	EnterpriseBillColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "start", Type: field.TypeTime},
		{Name: "end", Type: field.TypeTime},
		{Name: "days", Type: field.TypeInt},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "cost", Type: field.TypeFloat64},
		{Name: "model", Type: field.TypeString},
		{Name: "enterprise_id", Type: field.TypeUint64},
		{Name: "rider_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true},
		{Name: "statement_id", Type: field.TypeUint64},
		{Name: "subscribe_id", Type: field.TypeUint64},
	}
	// EnterpriseBillTable holds the schema information for the "enterprise_bill" table.
	EnterpriseBillTable = &schema.Table{
		Name:       "enterprise_bill",
		Columns:    EnterpriseBillColumns,
		PrimaryKey: []*schema.Column{EnterpriseBillColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_bill_enterprise_bills",
				Columns:    []*schema.Column{EnterpriseBillColumns[13]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_bill_rider_rider",
				Columns:    []*schema.Column{EnterpriseBillColumns[14]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_bill_city_city",
				Columns:    []*schema.Column{EnterpriseBillColumns[15]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_bill_enterprise_station_station",
				Columns:    []*schema.Column{EnterpriseBillColumns[16]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "enterprise_bill_enterprise_statement_bills",
				Columns:    []*schema.Column{EnterpriseBillColumns[17]},
				RefColumns: []*schema.Column{EnterpriseStatementColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_bill_subscribe_bills",
				Columns:    []*schema.Column{EnterpriseBillColumns[18]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisebill_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[1]},
			},
			{
				Name:    "enterprisebill_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[3]},
			},
			{
				Name:    "enterprisebill_model",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[12]},
			},
		},
	}
	// EnterpriseContractColumns holds the columns for the "enterprise_contract" table.
	EnterpriseContractColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "start", Type: field.TypeTime},
		{Name: "end", Type: field.TypeTime},
		{Name: "file", Type: field.TypeString},
		{Name: "enterprise_id", Type: field.TypeUint64},
	}
	// EnterpriseContractTable holds the schema information for the "enterprise_contract" table.
	EnterpriseContractTable = &schema.Table{
		Name:       "enterprise_contract",
		Columns:    EnterpriseContractColumns,
		PrimaryKey: []*schema.Column{EnterpriseContractColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_contract_enterprise_contracts",
				Columns:    []*schema.Column{EnterpriseContractColumns[10]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisecontract_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[1]},
			},
			{
				Name:    "enterprisecontract_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[3]},
			},
			{
				Name:    "enterprisecontract_start",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[7]},
			},
			{
				Name:    "enterprisecontract_end",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[8]},
			},
		},
	}
	// EnterprisePrepaymentColumns holds the columns for the "enterprise_prepayment" table.
	EnterprisePrepaymentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "amount", Type: field.TypeFloat64},
		{Name: "enterprise_id", Type: field.TypeUint64},
	}
	// EnterprisePrepaymentTable holds the schema information for the "enterprise_prepayment" table.
	EnterprisePrepaymentTable = &schema.Table{
		Name:       "enterprise_prepayment",
		Columns:    EnterprisePrepaymentColumns,
		PrimaryKey: []*schema.Column{EnterprisePrepaymentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_prepayment_enterprise_enterprise",
				Columns:    []*schema.Column{EnterprisePrepaymentColumns[8]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterpriseprepayment_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePrepaymentColumns[1]},
			},
			{
				Name:    "enterpriseprepayment_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePrepaymentColumns[3]},
			},
		},
	}
	// EnterprisePriceColumns holds the columns for the "enterprise_price" table.
	EnterprisePriceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "model", Type: field.TypeString},
		{Name: "enterprise_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64},
	}
	// EnterprisePriceTable holds the schema information for the "enterprise_price" table.
	EnterprisePriceTable = &schema.Table{
		Name:       "enterprise_price",
		Columns:    EnterprisePriceColumns,
		PrimaryKey: []*schema.Column{EnterprisePriceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_price_enterprise_prices",
				Columns:    []*schema.Column{EnterprisePriceColumns[9]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_price_city_city",
				Columns:    []*schema.Column{EnterprisePriceColumns[10]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterpriseprice_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[1]},
			},
			{
				Name:    "enterpriseprice_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[3]},
			},
			{
				Name:    "enterpriseprice_model",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[8]},
			},
		},
	}
	// EnterpriseStatementColumns holds the columns for the "enterprise_statement" table.
	EnterpriseStatementColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "cost", Type: field.TypeFloat64, Default: 0},
		{Name: "settled_at", Type: field.TypeTime, Nullable: true},
		{Name: "days", Type: field.TypeInt, Default: 0},
		{Name: "rider_number", Type: field.TypeInt, Default: 0},
		{Name: "date", Type: field.TypeTime, Nullable: true},
		{Name: "start", Type: field.TypeTime},
		{Name: "end", Type: field.TypeTime, Nullable: true},
		{Name: "enterprise_id", Type: field.TypeUint64},
	}
	// EnterpriseStatementTable holds the schema information for the "enterprise_statement" table.
	EnterpriseStatementTable = &schema.Table{
		Name:       "enterprise_statement",
		Columns:    EnterpriseStatementColumns,
		PrimaryKey: []*schema.Column{EnterpriseStatementColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_statement_enterprise_statements",
				Columns:    []*schema.Column{EnterpriseStatementColumns[14]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisestatement_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[1]},
			},
			{
				Name:    "enterprisestatement_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[3]},
			},
			{
				Name:    "enterprisestatement_date",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[11]},
			},
			{
				Name:    "enterprisestatement_start_end",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[12], EnterpriseStatementColumns[13]},
			},
		},
	}
	// EnterpriseStationColumns holds the columns for the "enterprise_station" table.
	EnterpriseStationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "enterprise_id", Type: field.TypeUint64},
	}
	// EnterpriseStationTable holds the schema information for the "enterprise_station" table.
	EnterpriseStationTable = &schema.Table{
		Name:       "enterprise_station",
		Columns:    EnterpriseStationColumns,
		PrimaryKey: []*schema.Column{EnterpriseStationColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_station_enterprise_stations",
				Columns:    []*schema.Column{EnterpriseStationColumns[8]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisestation_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStationColumns[1]},
			},
			{
				Name:    "enterprisestation_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStationColumns[3]},
			},
		},
	}
	// ExceptionColumns holds the columns for the "exception" table.
	ExceptionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeUint8, Default: 0},
		{Name: "name", Type: field.TypeString},
		{Name: "model", Type: field.TypeString, Nullable: true},
		{Name: "num", Type: field.TypeInt},
		{Name: "reason", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "attachments", Type: field.TypeJSON, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64},
		{Name: "employee_id", Type: field.TypeUint64},
		{Name: "store_id", Type: field.TypeUint64},
	}
	// ExceptionTable holds the schema information for the "exception" table.
	ExceptionTable = &schema.Table{
		Name:       "exception",
		Columns:    ExceptionColumns,
		PrimaryKey: []*schema.Column{ExceptionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exception_city_city",
				Columns:    []*schema.Column{ExceptionColumns[14]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "exception_employee_employee",
				Columns:    []*schema.Column{ExceptionColumns[15]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "exception_store_exceptions",
				Columns:    []*schema.Column{ExceptionColumns[16]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exception_created_at",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[1]},
			},
			{
				Name:    "exception_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[3]},
			},
			{
				Name:    "exception_name",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[8]},
			},
			{
				Name:    "exception_model",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[9]},
			},
			{
				Name:    "exception_num",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[10]},
			},
		},
	}
	// ExchangeColumns holds the columns for the "exchange" table.
	ExchangeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "uuid", Type: field.TypeString, Unique: true},
		{Name: "success", Type: field.TypeBool, Default: true},
		{Name: "detail", Type: field.TypeJSON, Nullable: true},
		{Name: "info", Type: field.TypeJSON, Nullable: true},
		{Name: "model", Type: field.TypeString},
		{Name: "alternative", Type: field.TypeBool, Default: false},
		{Name: "start_at", Type: field.TypeTime, Nullable: true},
		{Name: "finish_at", Type: field.TypeTime, Nullable: true},
		{Name: "duration", Type: field.TypeInt, Nullable: true},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64},
	}
	// ExchangeTable holds the schema information for the "exchange" table.
	ExchangeTable = &schema.Table{
		Name:       "exchange",
		Columns:    ExchangeColumns,
		PrimaryKey: []*schema.Column{ExchangeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exchange_cabinet_exchanges",
				Columns:    []*schema.Column{ExchangeColumns[16]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_employee_exchanges",
				Columns:    []*schema.Column{ExchangeColumns[17]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_subscribe_subscribe",
				Columns:    []*schema.Column{ExchangeColumns[18]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "exchange_city_city",
				Columns:    []*schema.Column{ExchangeColumns[19]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "exchange_store_store",
				Columns:    []*schema.Column{ExchangeColumns[20]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_enterprise_enterprise",
				Columns:    []*schema.Column{ExchangeColumns[21]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_enterprise_station_station",
				Columns:    []*schema.Column{ExchangeColumns[22]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_rider_exchanges",
				Columns:    []*schema.Column{ExchangeColumns[23]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exchange_created_at",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[1]},
			},
			{
				Name:    "exchange_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[3]},
			},
			{
				Name:    "exchange_success",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[8]},
			},
			{
				Name:    "exchange_model",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[11]},
			},
		},
	}
	// ExportColumns holds the columns for the "export" table.
	ExportColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "taxonomy", Type: field.TypeString},
		{Name: "sn", Type: field.TypeString},
		{Name: "status", Type: field.TypeUint8, Default: 0},
		{Name: "path", Type: field.TypeString, Nullable: true},
		{Name: "message", Type: field.TypeString, Nullable: true},
		{Name: "finish_at", Type: field.TypeTime, Nullable: true},
		{Name: "duration", Type: field.TypeInt64, Nullable: true},
		{Name: "condition", Type: field.TypeJSON},
		{Name: "info", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString},
		{Name: "manager_id", Type: field.TypeUint64},
	}
	// ExportTable holds the schema information for the "export" table.
	ExportTable = &schema.Table{
		Name:       "export",
		Columns:    ExportColumns,
		PrimaryKey: []*schema.Column{ExportColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "export_manager_manager",
				Columns:    []*schema.Column{ExportColumns[14]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "export_created_at",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[1]},
			},
			{
				Name:    "export_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[3]},
			},
			{
				Name:    "export_sn",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[5]},
			},
			{
				Name:    "export_status",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[6]},
			},
		},
	}
	// InventoryColumns holds the columns for the "inventory" table.
	InventoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "count", Type: field.TypeBool},
		{Name: "transfer", Type: field.TypeBool},
		{Name: "purchase", Type: field.TypeBool},
	}
	// InventoryTable holds the schema information for the "inventory" table.
	InventoryTable = &schema.Table{
		Name:       "inventory",
		Columns:    InventoryColumns,
		PrimaryKey: []*schema.Column{InventoryColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "inventory_created_at",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[1]},
			},
			{
				Name:    "inventory_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[3]},
			},
			{
				Name:    "inventory_count",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[8]},
			},
			{
				Name:    "inventory_transfer",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[9]},
			},
			{
				Name:    "inventory_purchase",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[10]},
			},
		},
	}
	// ManagerColumns holds the columns for the "manager" table.
	ManagerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Size: 30},
		{Name: "name", Type: field.TypeString, Size: 30},
		{Name: "password", Type: field.TypeString},
		{Name: "last_signin_at", Type: field.TypeTime, Nullable: true},
		{Name: "role_id", Type: field.TypeUint64, Nullable: true},
	}
	// ManagerTable holds the schema information for the "manager" table.
	ManagerTable = &schema.Table{
		Name:       "manager",
		Columns:    ManagerColumns,
		PrimaryKey: []*schema.Column{ManagerColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "manager_role_managers",
				Columns:    []*schema.Column{ManagerColumns[11]},
				RefColumns: []*schema.Column{RoleColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "manager_created_at",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[1]},
			},
			{
				Name:    "manager_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[3]},
			},
			{
				Name:    "manager_phone",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "manager_name",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// OrderColumns holds the columns for the "order" table.
	OrderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "payway", Type: field.TypeUint8},
		{Name: "type", Type: field.TypeUint},
		{Name: "out_trade_no", Type: field.TypeString},
		{Name: "trade_no", Type: field.TypeString},
		{Name: "amount", Type: field.TypeFloat64},
		{Name: "total", Type: field.TypeFloat64, Default: 0},
		{Name: "refund_at", Type: field.TypeTime, Nullable: true},
		{Name: "initial_days", Type: field.TypeInt, Nullable: true},
		{Name: "past_days", Type: field.TypeInt, Nullable: true},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
	}
	// OrderTable holds the schema information for the "order" table.
	OrderTable = &schema.Table{
		Name:       "order",
		Columns:    OrderColumns,
		PrimaryKey: []*schema.Column{OrderColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_plan_plan",
				Columns:    []*schema.Column{OrderColumns[17]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_city_city",
				Columns:    []*schema.Column{OrderColumns[18]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_order_children",
				Columns:    []*schema.Column{OrderColumns[19]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_rider_orders",
				Columns:    []*schema.Column{OrderColumns[20]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "order_subscribe_orders",
				Columns:    []*schema.Column{OrderColumns[21]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "order_created_at",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[1]},
			},
			{
				Name:    "order_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[3]},
			},
			{
				Name:    "order_trade_no",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[11]},
			},
			{
				Name:    "order_out_trade_no",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[10]},
			},
			{
				Name:    "order_status",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[7]},
			},
			{
				Name:    "order_initial_days",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[15]},
			},
		},
	}
	// OrderRefundColumns holds the columns for the "order_refund" table.
	OrderRefundColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeUint8},
		{Name: "amount", Type: field.TypeFloat64},
		{Name: "out_refund_no", Type: field.TypeString, Unique: true},
		{Name: "reason", Type: field.TypeString},
		{Name: "refund_at", Type: field.TypeTime, Nullable: true},
		{Name: "order_id", Type: field.TypeUint64, Unique: true},
	}
	// OrderRefundTable holds the schema information for the "order_refund" table.
	OrderRefundTable = &schema.Table{
		Name:       "order_refund",
		Columns:    OrderRefundColumns,
		PrimaryKey: []*schema.Column{OrderRefundColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_refund_order_refund",
				Columns:    []*schema.Column{OrderRefundColumns[12]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderrefund_created_at",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[1]},
			},
			{
				Name:    "orderrefund_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[3]},
			},
			{
				Name:    "orderrefund_status",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[7]},
			},
			{
				Name:    "orderrefund_out_refund_no",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[9]},
			},
		},
	}
	// PersonColumns holds the columns for the "person" table.
	PersonColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeUint8, Default: 0},
		{Name: "banned", Type: field.TypeBool, Default: false},
		{Name: "name", Type: field.TypeString, Size: 40},
		{Name: "id_card_number", Type: field.TypeString, Unique: true, Nullable: true, Size: 40},
		{Name: "id_card_type", Type: field.TypeUint8, Default: 1},
		{Name: "id_card_portrait", Type: field.TypeString, Nullable: true},
		{Name: "id_card_national", Type: field.TypeString, Nullable: true},
		{Name: "auth_face", Type: field.TypeString, Nullable: true},
		{Name: "auth_result", Type: field.TypeJSON, Nullable: true},
		{Name: "auth_at", Type: field.TypeTime, Nullable: true},
		{Name: "esign_account_id", Type: field.TypeString, Nullable: true},
		{Name: "baidu_verify_token", Type: field.TypeString, Nullable: true},
		{Name: "baidu_log_id", Type: field.TypeString, Nullable: true},
	}
	// PersonTable holds the schema information for the "person" table.
	PersonTable = &schema.Table{
		Name:       "person",
		Columns:    PersonColumns,
		PrimaryKey: []*schema.Column{PersonColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "person_created_at",
				Unique:  false,
				Columns: []*schema.Column{PersonColumns[1]},
			},
			{
				Name:    "person_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PersonColumns[3]},
			},
			{
				Name:    "person_status",
				Unique:  false,
				Columns: []*schema.Column{PersonColumns[7]},
			},
			{
				Name:    "person_name",
				Unique:  false,
				Columns: []*schema.Column{PersonColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// PlanColumns holds the columns for the "plan" table.
	PlanColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "enable", Type: field.TypeBool},
		{Name: "name", Type: field.TypeString},
		{Name: "start", Type: field.TypeTime},
		{Name: "end", Type: field.TypeTime},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "days", Type: field.TypeUint},
		{Name: "commission", Type: field.TypeFloat64},
		{Name: "original", Type: field.TypeFloat64, Nullable: true},
		{Name: "desc", Type: field.TypeString, Nullable: true},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true},
	}
	// PlanTable holds the schema information for the "plan" table.
	PlanTable = &schema.Table{
		Name:       "plan",
		Columns:    PlanColumns,
		PrimaryKey: []*schema.Column{PlanColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plan_plan_complexes",
				Columns:    []*schema.Column{PlanColumns[16]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "plan_created_at",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[1]},
			},
			{
				Name:    "plan_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[3]},
			},
			{
				Name:    "plan_days",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[12]},
			},
			{
				Name:    "plan_enable",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[7]},
			},
			{
				Name:    "plan_start_end",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[9], PlanColumns[10]},
			},
			{
				Name:    "plan_name",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// ReserveColumns holds the columns for the "reserve" table.
	ReserveColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeUint8, Default: 0},
		{Name: "type", Type: field.TypeString},
		{Name: "cabinet_id", Type: field.TypeUint64},
		{Name: "rider_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64},
		{Name: "business_id", Type: field.TypeUint64, Nullable: true},
	}
	// ReserveTable holds the schema information for the "reserve" table.
	ReserveTable = &schema.Table{
		Name:       "reserve",
		Columns:    ReserveColumns,
		PrimaryKey: []*schema.Column{ReserveColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "reserve_cabinet_cabinet",
				Columns:    []*schema.Column{ReserveColumns[9]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "reserve_rider_rider",
				Columns:    []*schema.Column{ReserveColumns[10]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "reserve_city_city",
				Columns:    []*schema.Column{ReserveColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "reserve_business_business",
				Columns:    []*schema.Column{ReserveColumns[12]},
				RefColumns: []*schema.Column{BusinessColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "reserve_created_at",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[1]},
			},
			{
				Name:    "reserve_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[3]},
			},
			{
				Name:    "reserve_type",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[8]},
			},
			{
				Name:    "reserve_status",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[7]},
			},
		},
	}
	// RiderColumns holds the columns for the "rider" table.
	RiderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Size: 11},
		{Name: "contact", Type: field.TypeJSON, Nullable: true},
		{Name: "device_type", Type: field.TypeUint8, Nullable: true},
		{Name: "last_device", Type: field.TypeString, Nullable: true, Size: 60},
		{Name: "is_new_device", Type: field.TypeBool, Default: false},
		{Name: "last_face", Type: field.TypeString, Nullable: true},
		{Name: "push_id", Type: field.TypeString, Nullable: true, Size: 60},
		{Name: "last_signin_at", Type: field.TypeTime, Nullable: true},
		{Name: "blocked", Type: field.TypeBool, Default: false},
		{Name: "contractual", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true},
		{Name: "person_id", Type: field.TypeUint64, Nullable: true},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true},
	}
	// RiderTable holds the schema information for the "rider" table.
	RiderTable = &schema.Table{
		Name:       "rider",
		Columns:    RiderColumns,
		PrimaryKey: []*schema.Column{RiderColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rider_enterprise_riders",
				Columns:    []*schema.Column{RiderColumns[17]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "rider_person_rider",
				Columns:    []*schema.Column{RiderColumns[18]},
				RefColumns: []*schema.Column{PersonColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "rider_enterprise_station_station",
				Columns:    []*schema.Column{RiderColumns[19]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "rider_created_at",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[1]},
			},
			{
				Name:    "rider_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[3]},
			},
			{
				Name:    "rider_phone",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "rider_last_device",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[10]},
			},
			{
				Name:    "rider_push_id",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[13]},
			},
		},
	}
	// RiderFollowUpColumns holds the columns for the "rider_follow_up" table.
	RiderFollowUpColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64},
		{Name: "manager_id", Type: field.TypeUint64},
	}
	// RiderFollowUpTable holds the schema information for the "rider_follow_up" table.
	RiderFollowUpTable = &schema.Table{
		Name:       "rider_follow_up",
		Columns:    RiderFollowUpColumns,
		PrimaryKey: []*schema.Column{RiderFollowUpColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rider_follow_up_rider_followups",
				Columns:    []*schema.Column{RiderFollowUpColumns[7]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "rider_follow_up_manager_manager",
				Columns:    []*schema.Column{RiderFollowUpColumns[8]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "riderfollowup_created_at",
				Unique:  false,
				Columns: []*schema.Column{RiderFollowUpColumns[1]},
			},
			{
				Name:    "riderfollowup_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{RiderFollowUpColumns[3]},
			},
		},
	}
	// RoleColumns holds the columns for the "role" table.
	RoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "permissions", Type: field.TypeJSON, Nullable: true},
		{Name: "buildin", Type: field.TypeBool, Default: false},
		{Name: "super", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// RoleTable holds the schema information for the "role" table.
	RoleTable = &schema.Table{
		Name:       "role",
		Columns:    RoleColumns,
		PrimaryKey: []*schema.Column{RoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "role_name",
				Unique:  false,
				Columns: []*schema.Column{RoleColumns[1]},
			},
			{
				Name:    "role_buildin",
				Unique:  false,
				Columns: []*schema.Column{RoleColumns[3]},
			},
		},
	}
	// SettingColumns holds the columns for the "setting" table.
	SettingColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "key", Type: field.TypeString, Unique: true, Size: 40},
		{Name: "desc", Type: field.TypeString},
		{Name: "content", Type: field.TypeString},
	}
	// SettingTable holds the schema information for the "setting" table.
	SettingTable = &schema.Table{
		Name:       "setting",
		Columns:    SettingColumns,
		PrimaryKey: []*schema.Column{SettingColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "setting_created_at",
				Unique:  false,
				Columns: []*schema.Column{SettingColumns[1]},
			},
		},
	}
	// StockColumns holds the columns for the "stock" table.
	StockColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "sn", Type: field.TypeString},
		{Name: "type", Type: field.TypeUint8, Default: 0},
		{Name: "name", Type: field.TypeString},
		{Name: "model", Type: field.TypeString, Nullable: true},
		{Name: "num", Type: field.TypeInt},
		{Name: "material", Type: field.TypeEnum, Enums: []string{"battery", "frame", "others"}},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
		{Name: "stock_spouse", Type: field.TypeUint64, Unique: true, Nullable: true},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true},
	}
	// StockTable holds the schema information for the "stock" table.
	StockTable = &schema.Table{
		Name:       "stock",
		Columns:    StockColumns,
		PrimaryKey: []*schema.Column{StockColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "stock_cabinet_stocks",
				Columns:    []*schema.Column{StockColumns[13]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_employee_stocks",
				Columns:    []*schema.Column{StockColumns[14]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_rider_stocks",
				Columns:    []*schema.Column{StockColumns[15]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_city_city",
				Columns:    []*schema.Column{StockColumns[16]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_subscribe_subscribe",
				Columns:    []*schema.Column{StockColumns[17]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_stock_spouse",
				Columns:    []*schema.Column{StockColumns[18]},
				RefColumns: []*schema.Column{StockColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_store_stocks",
				Columns:    []*schema.Column{StockColumns[19]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "stock_created_at",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[1]},
			},
			{
				Name:    "stock_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[3]},
			},
			{
				Name:    "stock_creator",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[4]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "stock_name",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[9]},
			},
			{
				Name:    "stock_model",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[10]},
			},
			{
				Name:    "stock_sn",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[7]},
			},
		},
	}
	// StoreColumns holds the columns for the "store" table.
	StoreColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "sn", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "status", Type: field.TypeUint8, Default: 0},
		{Name: "lng", Type: field.TypeFloat64},
		{Name: "lat", Type: field.TypeFloat64},
		{Name: "address", Type: field.TypeString},
		{Name: "branch_id", Type: field.TypeUint64},
		{Name: "employee_id", Type: field.TypeUint64, Unique: true, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64},
	}
	// StoreTable holds the schema information for the "store" table.
	StoreTable = &schema.Table{
		Name:       "store",
		Columns:    StoreColumns,
		PrimaryKey: []*schema.Column{StoreColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "store_branch_stores",
				Columns:    []*schema.Column{StoreColumns[13]},
				RefColumns: []*schema.Column{BranchColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "store_employee_store",
				Columns:    []*schema.Column{StoreColumns[14]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "store_city_city",
				Columns:    []*schema.Column{StoreColumns[15]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "store_created_at",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[1]},
			},
			{
				Name:    "store_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[3]},
			},
			{
				Name:    "store_status",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[9]},
			},
			{
				Name:    "store_name",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// SubscribeColumns holds the columns for the "subscribe" table.
	SubscribeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeUint8, Default: 0},
		{Name: "type", Type: field.TypeUint, Default: 0},
		{Name: "model", Type: field.TypeString},
		{Name: "initial_days", Type: field.TypeInt, Nullable: true},
		{Name: "alter_days", Type: field.TypeInt, Default: 0},
		{Name: "pause_days", Type: field.TypeInt, Default: 0},
		{Name: "suspend_days", Type: field.TypeInt, Default: 0},
		{Name: "renewal_days", Type: field.TypeInt, Default: 0},
		{Name: "overdue_days", Type: field.TypeInt, Default: 0},
		{Name: "remaining", Type: field.TypeInt, Default: 0},
		{Name: "paused_at", Type: field.TypeTime, Nullable: true},
		{Name: "suspend_at", Type: field.TypeTime, Nullable: true},
		{Name: "start_at", Type: field.TypeTime, Nullable: true},
		{Name: "end_at", Type: field.TypeTime, Nullable: true},
		{Name: "refund_at", Type: field.TypeTime, Nullable: true},
		{Name: "unsubscribe_reason", Type: field.TypeString, Nullable: true},
		{Name: "last_bill_date", Type: field.TypeTime, Nullable: true},
		{Name: "pause_overdue", Type: field.TypeBool, Default: false},
		{Name: "agent_end_at", Type: field.TypeTime, Nullable: true},
		{Name: "formula", Type: field.TypeString, Nullable: true},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true},
		{Name: "initial_order_id", Type: field.TypeUint64, Nullable: true},
	}
	// SubscribeTable holds the schema information for the "subscribe" table.
	SubscribeTable = &schema.Table{
		Name:       "subscribe",
		Columns:    SubscribeColumns,
		PrimaryKey: []*schema.Column{SubscribeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_enterprise_subscribes",
				Columns:    []*schema.Column{SubscribeColumns[27]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_rider_subscribes",
				Columns:    []*schema.Column{SubscribeColumns[28]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_plan_plan",
				Columns:    []*schema.Column{SubscribeColumns[29]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_employee_employee",
				Columns:    []*schema.Column{SubscribeColumns[30]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_city_city",
				Columns:    []*schema.Column{SubscribeColumns[31]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_enterprise_station_station",
				Columns:    []*schema.Column{SubscribeColumns[32]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_store_store",
				Columns:    []*schema.Column{SubscribeColumns[33]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_cabinet_cabinet",
				Columns:    []*schema.Column{SubscribeColumns[34]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_order_initial_order",
				Columns:    []*schema.Column{SubscribeColumns[35]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribe_created_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[1]},
			},
			{
				Name:    "subscribe_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[3]},
			},
			{
				Name:    "subscribe_paused_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[17]},
			},
			{
				Name:    "subscribe_last_bill_date",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[23]},
			},
			{
				Name:    "subscribe_start_at_end_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[19], SubscribeColumns[20]},
			},
		},
	}
	// SubscribeAlterColumns holds the columns for the "subscribe_alter" table.
	SubscribeAlterColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "days", Type: field.TypeInt},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "rider_id", Type: field.TypeUint64},
		{Name: "manager_id", Type: field.TypeUint64, Nullable: true},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true},
		{Name: "agent_id", Type: field.TypeUint64, Nullable: true},
	}
	// SubscribeAlterTable holds the schema information for the "subscribe_alter" table.
	SubscribeAlterTable = &schema.Table{
		Name:       "subscribe_alter",
		Columns:    SubscribeAlterColumns,
		PrimaryKey: []*schema.Column{SubscribeAlterColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_alter_subscribe_alters",
				Columns:    []*schema.Column{SubscribeAlterColumns[8]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_alter_rider_rider",
				Columns:    []*schema.Column{SubscribeAlterColumns[9]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_alter_manager_manager",
				Columns:    []*schema.Column{SubscribeAlterColumns[10]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_alter_enterprise_enterprise",
				Columns:    []*schema.Column{SubscribeAlterColumns[11]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_alter_agent_agent",
				Columns:    []*schema.Column{SubscribeAlterColumns[12]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribealter_created_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[1]},
			},
			{
				Name:    "subscribealter_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[3]},
			},
		},
	}
	// SubscribePauseColumns holds the columns for the "subscribe_pause" table.
	SubscribePauseColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "start_at", Type: field.TypeTime},
		{Name: "end_at", Type: field.TypeTime, Nullable: true},
		{Name: "days", Type: field.TypeInt, Nullable: true},
		{Name: "overdue_days", Type: field.TypeInt, Default: 0},
		{Name: "end_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "pause_overdue", Type: field.TypeBool, Default: false},
		{Name: "suspend_days", Type: field.TypeInt, Default: 0},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "rider_id", Type: field.TypeUint64},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true},
		{Name: "end_store_id", Type: field.TypeUint64, Nullable: true},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true},
		{Name: "end_cabinet_id", Type: field.TypeUint64, Nullable: true},
		{Name: "end_employee_id", Type: field.TypeUint64, Nullable: true},
	}
	// SubscribePauseTable holds the schema information for the "subscribe_pause" table.
	SubscribePauseTable = &schema.Table{
		Name:       "subscribe_pause",
		Columns:    SubscribePauseColumns,
		PrimaryKey: []*schema.Column{SubscribePauseColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_pause_subscribe_pauses",
				Columns:    []*schema.Column{SubscribePauseColumns[14]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_pause_rider_rider",
				Columns:    []*schema.Column{SubscribePauseColumns[15]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_pause_employee_employee",
				Columns:    []*schema.Column{SubscribePauseColumns[16]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_city_city",
				Columns:    []*schema.Column{SubscribePauseColumns[17]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_store_store",
				Columns:    []*schema.Column{SubscribePauseColumns[18]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_store_endStore",
				Columns:    []*schema.Column{SubscribePauseColumns[19]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_cabinet_cabinet",
				Columns:    []*schema.Column{SubscribePauseColumns[20]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_cabinet_endCabinet",
				Columns:    []*schema.Column{SubscribePauseColumns[21]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_employee_end_employee",
				Columns:    []*schema.Column{SubscribePauseColumns[22]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribepause_created_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[1]},
			},
			{
				Name:    "subscribepause_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[3]},
			},
			{
				Name:    "subscribepause_creator",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[4]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "subscribepause_end_modifier",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[11]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// SubscribeReminderColumns holds the columns for the "subscribe_reminder" table.
	SubscribeReminderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"sms", "vms"}},
		{Name: "phone", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "success", Type: field.TypeBool},
		{Name: "days", Type: field.TypeInt},
		{Name: "plan_name", Type: field.TypeString},
		{Name: "date", Type: field.TypeString},
		{Name: "fee", Type: field.TypeFloat64, Default: 0},
		{Name: "fee_formula", Type: field.TypeString, Nullable: true},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "plan_id", Type: field.TypeUint64},
	}
	// SubscribeReminderTable holds the schema information for the "subscribe_reminder" table.
	SubscribeReminderTable = &schema.Table{
		Name:       "subscribe_reminder",
		Columns:    SubscribeReminderColumns,
		PrimaryKey: []*schema.Column{SubscribeReminderColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_reminder_subscribe_subscribe",
				Columns:    []*schema.Column{SubscribeReminderColumns[12]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_reminder_plan_plan",
				Columns:    []*schema.Column{SubscribeReminderColumns[13]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribereminder_type",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[3]},
			},
			{
				Name:    "subscribereminder_date",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[9]},
			},
		},
	}
	// SubscribeSuspendColumns holds the columns for the "subscribe_suspend" table.
	SubscribeSuspendColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "days", Type: field.TypeInt, Default: 0},
		{Name: "start_at", Type: field.TypeTime},
		{Name: "end_at", Type: field.TypeTime, Nullable: true},
		{Name: "end_reason", Type: field.TypeString, Nullable: true},
		{Name: "end_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "pause_id", Type: field.TypeUint64, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64},
		{Name: "rider_id", Type: field.TypeUint64},
	}
	// SubscribeSuspendTable holds the schema information for the "subscribe_suspend" table.
	SubscribeSuspendTable = &schema.Table{
		Name:       "subscribe_suspend",
		Columns:    SubscribeSuspendColumns,
		PrimaryKey: []*schema.Column{SubscribeSuspendColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_suspend_subscribe_suspends",
				Columns:    []*schema.Column{SubscribeSuspendColumns[9]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_suspend_subscribe_pause_suspends",
				Columns:    []*schema.Column{SubscribeSuspendColumns[10]},
				RefColumns: []*schema.Column{SubscribePauseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_suspend_city_city",
				Columns:    []*schema.Column{SubscribeSuspendColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_suspend_rider_rider",
				Columns:    []*schema.Column{SubscribeSuspendColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CabinetBmsColumns holds the columns for the "cabinet_bms" table.
	CabinetBmsColumns = []*schema.Column{
		{Name: "cabinet_id", Type: field.TypeInt},
		{Name: "battery_model_id", Type: field.TypeInt},
	}
	// CabinetBmsTable holds the schema information for the "cabinet_bms" table.
	CabinetBmsTable = &schema.Table{
		Name:       "cabinet_bms",
		Columns:    CabinetBmsColumns,
		PrimaryKey: []*schema.Column{CabinetBmsColumns[0], CabinetBmsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cabinet_bms_cabinet_id",
				Columns:    []*schema.Column{CabinetBmsColumns[0]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "cabinet_bms_battery_model_id",
				Columns:    []*schema.Column{CabinetBmsColumns[1]},
				RefColumns: []*schema.Column{BatteryModelColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PlanPmsColumns holds the columns for the "plan_pms" table.
	PlanPmsColumns = []*schema.Column{
		{Name: "plan_id", Type: field.TypeInt},
		{Name: "battery_model_id", Type: field.TypeInt},
	}
	// PlanPmsTable holds the schema information for the "plan_pms" table.
	PlanPmsTable = &schema.Table{
		Name:       "plan_pms",
		Columns:    PlanPmsColumns,
		PrimaryKey: []*schema.Column{PlanPmsColumns[0], PlanPmsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plan_pms_plan_id",
				Columns:    []*schema.Column{PlanPmsColumns[0]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "plan_pms_battery_model_id",
				Columns:    []*schema.Column{PlanPmsColumns[1]},
				RefColumns: []*schema.Column{BatteryModelColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PlanCitiesColumns holds the columns for the "plan_cities" table.
	PlanCitiesColumns = []*schema.Column{
		{Name: "plan_id", Type: field.TypeInt},
		{Name: "city_id", Type: field.TypeUint64},
	}
	// PlanCitiesTable holds the schema information for the "plan_cities" table.
	PlanCitiesTable = &schema.Table{
		Name:       "plan_cities",
		Columns:    PlanCitiesColumns,
		PrimaryKey: []*schema.Column{PlanCitiesColumns[0], PlanCitiesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plan_cities_plan_id",
				Columns:    []*schema.Column{PlanCitiesColumns[0]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "plan_cities_city_id",
				Columns:    []*schema.Column{PlanCitiesColumns[1]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AgentTable,
		AssistanceTable,
		AttendanceTable,
		BatteryModelTable,
		BranchTable,
		BranchContractTable,
		BusinessTable,
		CabinetTable,
		CabinetFaultTable,
		CityTable,
		CommissionTable,
		ContractTable,
		EmployeeTable,
		EnterpriseTable,
		EnterpriseBillTable,
		EnterpriseContractTable,
		EnterprisePrepaymentTable,
		EnterprisePriceTable,
		EnterpriseStatementTable,
		EnterpriseStationTable,
		ExceptionTable,
		ExchangeTable,
		ExportTable,
		InventoryTable,
		ManagerTable,
		OrderTable,
		OrderRefundTable,
		PersonTable,
		PlanTable,
		ReserveTable,
		RiderTable,
		RiderFollowUpTable,
		RoleTable,
		SettingTable,
		StockTable,
		StoreTable,
		SubscribeTable,
		SubscribeAlterTable,
		SubscribePauseTable,
		SubscribeReminderTable,
		SubscribeSuspendTable,
		CabinetBmsTable,
		PlanPmsTable,
		PlanCitiesTable,
	}
)

func init() {
	AgentTable.ForeignKeys[0].RefTable = EnterpriseTable
	AgentTable.Annotation = &entsql.Annotation{
		Table: "agent",
	}
	AssistanceTable.ForeignKeys[0].RefTable = StoreTable
	AssistanceTable.ForeignKeys[1].RefTable = RiderTable
	AssistanceTable.ForeignKeys[2].RefTable = SubscribeTable
	AssistanceTable.ForeignKeys[3].RefTable = CityTable
	AssistanceTable.ForeignKeys[4].RefTable = EmployeeTable
	AssistanceTable.ForeignKeys[5].RefTable = OrderTable
	AssistanceTable.Annotation = &entsql.Annotation{
		Table: "assistance",
	}
	AttendanceTable.ForeignKeys[0].RefTable = EmployeeTable
	AttendanceTable.ForeignKeys[1].RefTable = StoreTable
	AttendanceTable.Annotation = &entsql.Annotation{
		Table: "attendance",
	}
	BatteryModelTable.Annotation = &entsql.Annotation{
		Table: "battery_model",
	}
	BranchTable.ForeignKeys[0].RefTable = CityTable
	BranchTable.Annotation = &entsql.Annotation{
		Table: "branch",
	}
	BranchContractTable.ForeignKeys[0].RefTable = BranchTable
	BranchContractTable.Annotation = &entsql.Annotation{
		Table: "branch_contract",
	}
	BusinessTable.ForeignKeys[0].RefTable = RiderTable
	BusinessTable.ForeignKeys[1].RefTable = CityTable
	BusinessTable.ForeignKeys[2].RefTable = SubscribeTable
	BusinessTable.ForeignKeys[3].RefTable = EmployeeTable
	BusinessTable.ForeignKeys[4].RefTable = StoreTable
	BusinessTable.ForeignKeys[5].RefTable = PlanTable
	BusinessTable.ForeignKeys[6].RefTable = EnterpriseTable
	BusinessTable.ForeignKeys[7].RefTable = EnterpriseStationTable
	BusinessTable.ForeignKeys[8].RefTable = CabinetTable
	BusinessTable.Annotation = &entsql.Annotation{
		Table: "business",
	}
	CabinetTable.ForeignKeys[0].RefTable = BranchTable
	CabinetTable.ForeignKeys[1].RefTable = CityTable
	CabinetTable.Annotation = &entsql.Annotation{
		Table: "cabinet",
	}
	CabinetFaultTable.ForeignKeys[0].RefTable = BranchTable
	CabinetFaultTable.ForeignKeys[1].RefTable = CabinetTable
	CabinetFaultTable.ForeignKeys[2].RefTable = CityTable
	CabinetFaultTable.ForeignKeys[3].RefTable = RiderTable
	CabinetFaultTable.Annotation = &entsql.Annotation{
		Table: "cabinet_fault",
	}
	CityTable.ForeignKeys[0].RefTable = CityTable
	CityTable.Annotation = &entsql.Annotation{
		Table: "city",
	}
	CommissionTable.ForeignKeys[0].RefTable = BusinessTable
	CommissionTable.ForeignKeys[1].RefTable = SubscribeTable
	CommissionTable.ForeignKeys[2].RefTable = PlanTable
	CommissionTable.ForeignKeys[3].RefTable = RiderTable
	CommissionTable.ForeignKeys[4].RefTable = EmployeeTable
	CommissionTable.ForeignKeys[5].RefTable = OrderTable
	CommissionTable.Annotation = &entsql.Annotation{
		Table: "commission",
	}
	ContractTable.ForeignKeys[0].RefTable = RiderTable
	ContractTable.Annotation = &entsql.Annotation{
		Table: "contract",
	}
	EmployeeTable.ForeignKeys[0].RefTable = CityTable
	EmployeeTable.Annotation = &entsql.Annotation{
		Table: "employee",
	}
	EnterpriseTable.ForeignKeys[0].RefTable = CityTable
	EnterpriseTable.Annotation = &entsql.Annotation{
		Table: "enterprise",
	}
	EnterpriseBillTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseBillTable.ForeignKeys[1].RefTable = RiderTable
	EnterpriseBillTable.ForeignKeys[2].RefTable = CityTable
	EnterpriseBillTable.ForeignKeys[3].RefTable = EnterpriseStationTable
	EnterpriseBillTable.ForeignKeys[4].RefTable = EnterpriseStatementTable
	EnterpriseBillTable.ForeignKeys[5].RefTable = SubscribeTable
	EnterpriseBillTable.Annotation = &entsql.Annotation{
		Table: "enterprise_bill",
	}
	EnterpriseContractTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseContractTable.Annotation = &entsql.Annotation{
		Table: "enterprise_contract",
	}
	EnterprisePrepaymentTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterprisePrepaymentTable.Annotation = &entsql.Annotation{
		Table: "enterprise_prepayment",
	}
	EnterprisePriceTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterprisePriceTable.ForeignKeys[1].RefTable = CityTable
	EnterprisePriceTable.Annotation = &entsql.Annotation{
		Table: "enterprise_price",
	}
	EnterpriseStatementTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseStatementTable.Annotation = &entsql.Annotation{
		Table: "enterprise_statement",
	}
	EnterpriseStationTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseStationTable.Annotation = &entsql.Annotation{
		Table: "enterprise_station",
	}
	ExceptionTable.ForeignKeys[0].RefTable = CityTable
	ExceptionTable.ForeignKeys[1].RefTable = EmployeeTable
	ExceptionTable.ForeignKeys[2].RefTable = StoreTable
	ExceptionTable.Annotation = &entsql.Annotation{
		Table: "exception",
	}
	ExchangeTable.ForeignKeys[0].RefTable = CabinetTable
	ExchangeTable.ForeignKeys[1].RefTable = EmployeeTable
	ExchangeTable.ForeignKeys[2].RefTable = SubscribeTable
	ExchangeTable.ForeignKeys[3].RefTable = CityTable
	ExchangeTable.ForeignKeys[4].RefTable = StoreTable
	ExchangeTable.ForeignKeys[5].RefTable = EnterpriseTable
	ExchangeTable.ForeignKeys[6].RefTable = EnterpriseStationTable
	ExchangeTable.ForeignKeys[7].RefTable = RiderTable
	ExchangeTable.Annotation = &entsql.Annotation{
		Table: "exchange",
	}
	ExportTable.ForeignKeys[0].RefTable = ManagerTable
	ExportTable.Annotation = &entsql.Annotation{
		Table: "export",
	}
	InventoryTable.Annotation = &entsql.Annotation{
		Table: "inventory",
	}
	ManagerTable.ForeignKeys[0].RefTable = RoleTable
	ManagerTable.Annotation = &entsql.Annotation{
		Table: "manager",
	}
	OrderTable.ForeignKeys[0].RefTable = PlanTable
	OrderTable.ForeignKeys[1].RefTable = CityTable
	OrderTable.ForeignKeys[2].RefTable = OrderTable
	OrderTable.ForeignKeys[3].RefTable = RiderTable
	OrderTable.ForeignKeys[4].RefTable = SubscribeTable
	OrderTable.Annotation = &entsql.Annotation{
		Table: "order",
	}
	OrderRefundTable.ForeignKeys[0].RefTable = OrderTable
	OrderRefundTable.Annotation = &entsql.Annotation{
		Table: "order_refund",
	}
	PersonTable.Annotation = &entsql.Annotation{
		Table: "person",
	}
	PlanTable.ForeignKeys[0].RefTable = PlanTable
	PlanTable.Annotation = &entsql.Annotation{
		Table: "plan",
	}
	ReserveTable.ForeignKeys[0].RefTable = CabinetTable
	ReserveTable.ForeignKeys[1].RefTable = RiderTable
	ReserveTable.ForeignKeys[2].RefTable = CityTable
	ReserveTable.ForeignKeys[3].RefTable = BusinessTable
	ReserveTable.Annotation = &entsql.Annotation{
		Table: "reserve",
	}
	RiderTable.ForeignKeys[0].RefTable = EnterpriseTable
	RiderTable.ForeignKeys[1].RefTable = PersonTable
	RiderTable.ForeignKeys[2].RefTable = EnterpriseStationTable
	RiderTable.Annotation = &entsql.Annotation{
		Table: "rider",
	}
	RiderFollowUpTable.ForeignKeys[0].RefTable = RiderTable
	RiderFollowUpTable.ForeignKeys[1].RefTable = ManagerTable
	RiderFollowUpTable.Annotation = &entsql.Annotation{
		Table: "rider_follow_up",
	}
	RoleTable.Annotation = &entsql.Annotation{
		Table: "role",
	}
	SettingTable.Annotation = &entsql.Annotation{
		Table: "setting",
	}
	StockTable.ForeignKeys[0].RefTable = CabinetTable
	StockTable.ForeignKeys[1].RefTable = EmployeeTable
	StockTable.ForeignKeys[2].RefTable = RiderTable
	StockTable.ForeignKeys[3].RefTable = CityTable
	StockTable.ForeignKeys[4].RefTable = SubscribeTable
	StockTable.ForeignKeys[5].RefTable = StockTable
	StockTable.ForeignKeys[6].RefTable = StoreTable
	StockTable.Annotation = &entsql.Annotation{
		Table: "stock",
	}
	StoreTable.ForeignKeys[0].RefTable = BranchTable
	StoreTable.ForeignKeys[1].RefTable = EmployeeTable
	StoreTable.ForeignKeys[2].RefTable = CityTable
	StoreTable.Annotation = &entsql.Annotation{
		Table: "store",
	}
	SubscribeTable.ForeignKeys[0].RefTable = EnterpriseTable
	SubscribeTable.ForeignKeys[1].RefTable = RiderTable
	SubscribeTable.ForeignKeys[2].RefTable = PlanTable
	SubscribeTable.ForeignKeys[3].RefTable = EmployeeTable
	SubscribeTable.ForeignKeys[4].RefTable = CityTable
	SubscribeTable.ForeignKeys[5].RefTable = EnterpriseStationTable
	SubscribeTable.ForeignKeys[6].RefTable = StoreTable
	SubscribeTable.ForeignKeys[7].RefTable = CabinetTable
	SubscribeTable.ForeignKeys[8].RefTable = OrderTable
	SubscribeTable.Annotation = &entsql.Annotation{
		Table: "subscribe",
	}
	SubscribeAlterTable.ForeignKeys[0].RefTable = SubscribeTable
	SubscribeAlterTable.ForeignKeys[1].RefTable = RiderTable
	SubscribeAlterTable.ForeignKeys[2].RefTable = ManagerTable
	SubscribeAlterTable.ForeignKeys[3].RefTable = EnterpriseTable
	SubscribeAlterTable.ForeignKeys[4].RefTable = AgentTable
	SubscribeAlterTable.Annotation = &entsql.Annotation{
		Table: "subscribe_alter",
	}
	SubscribePauseTable.ForeignKeys[0].RefTable = SubscribeTable
	SubscribePauseTable.ForeignKeys[1].RefTable = RiderTable
	SubscribePauseTable.ForeignKeys[2].RefTable = EmployeeTable
	SubscribePauseTable.ForeignKeys[3].RefTable = CityTable
	SubscribePauseTable.ForeignKeys[4].RefTable = StoreTable
	SubscribePauseTable.ForeignKeys[5].RefTable = StoreTable
	SubscribePauseTable.ForeignKeys[6].RefTable = CabinetTable
	SubscribePauseTable.ForeignKeys[7].RefTable = CabinetTable
	SubscribePauseTable.ForeignKeys[8].RefTable = EmployeeTable
	SubscribePauseTable.Annotation = &entsql.Annotation{
		Table: "subscribe_pause",
	}
	SubscribeReminderTable.ForeignKeys[0].RefTable = SubscribeTable
	SubscribeReminderTable.ForeignKeys[1].RefTable = PlanTable
	SubscribeReminderTable.Annotation = &entsql.Annotation{
		Table: "subscribe_reminder",
	}
	SubscribeSuspendTable.ForeignKeys[0].RefTable = SubscribeTable
	SubscribeSuspendTable.ForeignKeys[1].RefTable = SubscribePauseTable
	SubscribeSuspendTable.ForeignKeys[2].RefTable = CityTable
	SubscribeSuspendTable.ForeignKeys[3].RefTable = RiderTable
	SubscribeSuspendTable.Annotation = &entsql.Annotation{
		Table: "subscribe_suspend",
	}
	CabinetBmsTable.ForeignKeys[0].RefTable = CabinetTable
	CabinetBmsTable.ForeignKeys[1].RefTable = BatteryModelTable
	PlanPmsTable.ForeignKeys[0].RefTable = PlanTable
	PlanPmsTable.ForeignKeys[1].RefTable = BatteryModelTable
	PlanCitiesTable.ForeignKeys[0].RefTable = PlanTable
	PlanCitiesTable.ForeignKeys[1].RefTable = CityTable
}
