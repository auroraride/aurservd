// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AgentColumns holds the columns for the "agent" table.
	AgentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Unique: true},
		{Name: "openid", Type: field.TypeString, Nullable: true},
		{Name: "enterprise_id", Type: field.TypeUint64, Comment: "企业ID"},
		{Name: "enterprise_agents", Type: field.TypeUint64, Nullable: true},
	}
	// AgentTable holds the schema information for the "agent" table.
	AgentTable = &schema.Table{
		Name:       "agent",
		Columns:    AgentColumns,
		PrimaryKey: []*schema.Column{AgentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "agent_enterprise_enterprise",
				Columns:    []*schema.Column{AgentColumns[10]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "agent_enterprise_agents",
				Columns:    []*schema.Column{AgentColumns[11]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "agent_created_at",
				Unique:  false,
				Columns: []*schema.Column{AgentColumns[1]},
			},
			{
				Name:    "agent_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AgentColumns[3]},
			},
			{
				Name:    "agent_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{AgentColumns[10]},
			},
			{
				Name:    "agent_phone",
				Unique:  false,
				Columns: []*schema.Column{AgentColumns[8]},
			},
		},
	}
	// AllocateColumns holds the columns for the "allocate" table.
	AllocateColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "type", Type: field.TypeEnum, Comment: "分配类型", Enums: []string{"battery", "ebike"}},
		{Name: "status", Type: field.TypeUint8, Comment: "分配状态"},
		{Name: "time", Type: field.TypeTime, Comment: "分配时间"},
		{Name: "model", Type: field.TypeString, Comment: "电池型号"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "ebike_id", Type: field.TypeUint64, Nullable: true},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
	}
	// AllocateTable holds the schema information for the "allocate" table.
	AllocateTable = &schema.Table{
		Name:       "allocate",
		Columns:    AllocateColumns,
		PrimaryKey: []*schema.Column{AllocateColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "allocate_rider_rider",
				Columns:    []*schema.Column{AllocateColumns[10]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "allocate_subscribe_subscribe",
				Columns:    []*schema.Column{AllocateColumns[11]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "allocate_employee_employee",
				Columns:    []*schema.Column{AllocateColumns[12]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "allocate_cabinet_cabinet",
				Columns:    []*schema.Column{AllocateColumns[13]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "allocate_store_store",
				Columns:    []*schema.Column{AllocateColumns[14]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "allocate_ebike_ebike",
				Columns:    []*schema.Column{AllocateColumns[15]},
				RefColumns: []*schema.Column{EbikeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "allocate_ebike_brand_brand",
				Columns:    []*schema.Column{AllocateColumns[16]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "allocate_rider_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[10]},
			},
			{
				Name:    "allocate_subscribe_id",
				Unique:  true,
				Columns: []*schema.Column{AllocateColumns[11]},
			},
			{
				Name:    "allocate_employee_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[12]},
			},
			{
				Name:    "allocate_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[13]},
			},
			{
				Name:    "allocate_store_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[14]},
			},
			{
				Name:    "allocate_ebike_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[15]},
			},
			{
				Name:    "allocate_brand_id",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[16]},
			},
			{
				Name:    "allocate_time",
				Unique:  false,
				Columns: []*schema.Column{AllocateColumns[8]},
			},
		},
	}
	// AssistanceColumns holds the columns for the "assistance" table.
	AssistanceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "救援状态 0:待分配 1:已接单/已分配 2:已拒绝 3:救援失败 4:救援成功待支付 5:救援成功已支付", Default: 0},
		{Name: "lng", Type: field.TypeFloat64, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Comment: "纬度"},
		{Name: "address", Type: field.TypeString, Comment: "详细地址"},
		{Name: "breakdown", Type: field.TypeString, Comment: "故障"},
		{Name: "breakdown_desc", Type: field.TypeString, Nullable: true, Comment: "故障描述"},
		{Name: "breakdown_photos", Type: field.TypeJSON, Comment: "故障照片"},
		{Name: "cancel_reason", Type: field.TypeString, Nullable: true, Comment: "取消原因"},
		{Name: "cancel_reason_desc", Type: field.TypeString, Nullable: true, Comment: "取消原因详细描述"},
		{Name: "distance", Type: field.TypeFloat64, Nullable: true, Comment: "救援距离"},
		{Name: "reason", Type: field.TypeString, Nullable: true, Comment: "救援原因"},
		{Name: "detect_photo", Type: field.TypeString, Nullable: true, Comment: "检测照片"},
		{Name: "joint_photo", Type: field.TypeString, Nullable: true, Comment: "与用户合影"},
		{Name: "cost", Type: field.TypeFloat64, Nullable: true, Comment: "本次救援费用", Default: 0},
		{Name: "refused_desc", Type: field.TypeString, Nullable: true, Comment: "拒绝原因"},
		{Name: "pay_at", Type: field.TypeTime, Nullable: true, Comment: "支付时间"},
		{Name: "allocate_at", Type: field.TypeTime, Nullable: true, Comment: "分配时间"},
		{Name: "wait", Type: field.TypeInt, Comment: "分配等待时间(s)", Default: 0},
		{Name: "free_reason", Type: field.TypeString, Nullable: true, Comment: "免费理由"},
		{Name: "fail_reason", Type: field.TypeString, Nullable: true, Comment: "失败原因"},
		{Name: "process_at", Type: field.TypeTime, Nullable: true, Comment: "救援处理时间"},
		{Name: "price", Type: field.TypeFloat64, Nullable: true, Comment: "救援费用单价 元/公里"},
		{Name: "navi_duration", Type: field.TypeInt, Nullable: true, Comment: "路径导航规划时间 (s)"},
		{Name: "navi_polylines", Type: field.TypeJSON, Nullable: true, Comment: "路径导航规划坐标组"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "order_id", Type: field.TypeUint64, Unique: true, Nullable: true, Comment: "支付订单"},
	}
	// AssistanceTable holds the schema information for the "assistance" table.
	AssistanceTable = &schema.Table{
		Name:       "assistance",
		Columns:    AssistanceColumns,
		PrimaryKey: []*schema.Column{AssistanceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "assistance_store_store",
				Columns:    []*schema.Column{AssistanceColumns[31]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "assistance_rider_rider",
				Columns:    []*schema.Column{AssistanceColumns[32]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "assistance_subscribe_subscribe",
				Columns:    []*schema.Column{AssistanceColumns[33]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "assistance_city_city",
				Columns:    []*schema.Column{AssistanceColumns[34]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "assistance_employee_assistances",
				Columns:    []*schema.Column{AssistanceColumns[35]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "assistance_order_assistance",
				Columns:    []*schema.Column{AssistanceColumns[36]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "assistance_created_at",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[1]},
			},
			{
				Name:    "assistance_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[3]},
			},
			{
				Name:    "assistance_store_id",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[31]},
			},
			{
				Name:    "assistance_rider_id",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[32]},
			},
			{
				Name:    "assistance_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[33]},
			},
			{
				Name:    "assistance_city_id",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[34]},
			},
			{
				Name:    "assistance_status",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[7]},
			},
			{
				Name:    "assistance_order_id",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[36]},
			},
			{
				Name:    "assistance_employee_id",
				Unique:  false,
				Columns: []*schema.Column{AssistanceColumns[35]},
			},
		},
	}
	// AttendanceColumns holds the columns for the "attendance" table.
	AttendanceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "inventory", Type: field.TypeJSON, Nullable: true, Comment: "物资盘点"},
		{Name: "photo", Type: field.TypeString, Nullable: true, Comment: "上班照片"},
		{Name: "duty", Type: field.TypeBool, Comment: "是否上班盘点"},
		{Name: "date", Type: field.TypeTime, Comment: "日期"},
		{Name: "lng", Type: field.TypeFloat64, Nullable: true, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Nullable: true, Comment: "纬度"},
		{Name: "address", Type: field.TypeString, Nullable: true, Comment: "详细地址"},
		{Name: "distance", Type: field.TypeFloat64, Nullable: true, Comment: "打卡距离"},
		{Name: "employee_id", Type: field.TypeUint64, Comment: "店员ID"},
		{Name: "store_id", Type: field.TypeUint64, Comment: "门店ID"},
	}
	// AttendanceTable holds the schema information for the "attendance" table.
	AttendanceTable = &schema.Table{
		Name:       "attendance",
		Columns:    AttendanceColumns,
		PrimaryKey: []*schema.Column{AttendanceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "attendance_employee_attendances",
				Columns:    []*schema.Column{AttendanceColumns[15]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "attendance_store_attendances",
				Columns:    []*schema.Column{AttendanceColumns[16]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "attendance_created_at",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[1]},
			},
			{
				Name:    "attendance_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[3]},
			},
			{
				Name:    "attendance_date_duty",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[10], AttendanceColumns[9]},
			},
			{
				Name:    "attendance_employee_id",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[15]},
			},
			{
				Name:    "attendance_store_id",
				Unique:  false,
				Columns: []*schema.Column{AttendanceColumns[16]},
			},
		},
	}
	// BatteryColumns holds the columns for the "battery" table.
	BatteryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "sn", Type: field.TypeString, Unique: true, Comment: "电池编号"},
		{Name: "brand", Type: field.TypeOther, Comment: "品牌", SchemaType: map[string]string{"postgres": "character varying"}},
		{Name: "enable", Type: field.TypeBool, Comment: "是否启用", Default: true},
		{Name: "model", Type: field.TypeString, Comment: "电池型号"},
		{Name: "ordinal", Type: field.TypeInt, Nullable: true, Comment: "所在智能柜仓位序号"},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true, Comment: "城市ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "所属团签"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "所属站点Id"},
		{Name: "rider_id", Type: field.TypeUint64, Unique: true, Nullable: true, Comment: "骑手ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Unique: true, Nullable: true, Comment: "订阅ID"},
	}
	// BatteryTable holds the schema information for the "battery" table.
	BatteryTable = &schema.Table{
		Name:       "battery",
		Columns:    BatteryColumns,
		PrimaryKey: []*schema.Column{BatteryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "battery_city_city",
				Columns:    []*schema.Column{BatteryColumns[12]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_cabinet_batteries",
				Columns:    []*schema.Column{BatteryColumns[13]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_enterprise_battery",
				Columns:    []*schema.Column{BatteryColumns[14]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_enterprise_station_battery",
				Columns:    []*schema.Column{BatteryColumns[15]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_rider_battery",
				Columns:    []*schema.Column{BatteryColumns[16]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_subscribe_battery",
				Columns:    []*schema.Column{BatteryColumns[17]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "battery_created_at",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[1]},
			},
			{
				Name:    "battery_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[3]},
			},
			{
				Name:    "battery_city_id",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[12]},
			},
			{
				Name:    "battery_cabinet_id_ordinal",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[13], BatteryColumns[11]},
			},
			{
				Name:    "battery_enable",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[9]},
			},
			{
				Name:    "battery_brand",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[8]},
			},
			{
				Name:    "index_battery_model",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[10]},
			},
			{
				Name:    "battery_sn",
				Unique:  false,
				Columns: []*schema.Column{BatteryColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// BatteryFlowColumns holds the columns for the "battery_flow" table.
	BatteryFlowColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "sn", Type: field.TypeString, Comment: "电池编号"},
		{Name: "soc", Type: field.TypeFloat64, Comment: "容量, -1代表未查询到", Default: -1},
		{Name: "serial", Type: field.TypeString, Nullable: true, Comment: "电柜编号"},
		{Name: "ordinal", Type: field.TypeInt, Nullable: true, Comment: "仓位序号, 从1开始"},
		{Name: "geom", Type: field.TypeOther, Nullable: true, Comment: "坐标", SchemaType: map[string]string{"postgres": "geometry(POINT, 4326)"}},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注信息"},
		{Name: "battery_id", Type: field.TypeUint64, Comment: "电池ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
	}
	// BatteryFlowTable holds the schema information for the "battery_flow" table.
	BatteryFlowTable = &schema.Table{
		Name:       "battery_flow",
		Columns:    BatteryFlowColumns,
		PrimaryKey: []*schema.Column{BatteryFlowColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "battery_flow_battery_flows",
				Columns:    []*schema.Column{BatteryFlowColumns[9]},
				RefColumns: []*schema.Column{BatteryColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "battery_flow_subscribe_subscribe",
				Columns:    []*schema.Column{BatteryFlowColumns[10]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_flow_cabinet_battery_flows",
				Columns:    []*schema.Column{BatteryFlowColumns[11]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battery_flow_rider_battery_flows",
				Columns:    []*schema.Column{BatteryFlowColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "batteryflow_created_at",
				Unique:  false,
				Columns: []*schema.Column{BatteryFlowColumns[1]},
			},
			{
				Name:    "batteryflow_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{BatteryFlowColumns[10]},
			},
			{
				Name:    "batteryflow_sn",
				Unique:  false,
				Columns: []*schema.Column{BatteryFlowColumns[3]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// BatteryModelColumns holds the columns for the "battery_model" table.
	BatteryModelColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "model", Type: field.TypeString, Unique: true, Comment: "型号"},
		{Name: "created_at", Type: field.TypeTime},
	}
	// BatteryModelTable holds the schema information for the "battery_model" table.
	BatteryModelTable = &schema.Table{
		Name:       "battery_model",
		Columns:    BatteryModelColumns,
		PrimaryKey: []*schema.Column{BatteryModelColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "batterymodel_model",
				Unique:  false,
				Columns: []*schema.Column{BatteryModelColumns[1]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// BranchColumns holds the columns for the "branch" table.
	BranchColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "网点名称"},
		{Name: "lng", Type: field.TypeFloat64, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Comment: "纬度"},
		{Name: "address", Type: field.TypeString, Comment: "详细地址"},
		{Name: "photos", Type: field.TypeJSON, Comment: "网点照片"},
		{Name: "geom", Type: field.TypeOther, Unique: true, Comment: "坐标", SchemaType: map[string]string{"postgres": "geometry"}},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
	}
	// BranchTable holds the schema information for the "branch" table.
	BranchTable = &schema.Table{
		Name:       "branch",
		Columns:    BranchColumns,
		PrimaryKey: []*schema.Column{BranchColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "branch_city_city",
				Columns:    []*schema.Column{BranchColumns[13]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "branch_created_at",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[1]},
			},
			{
				Name:    "branch_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[3]},
			},
			{
				Name:    "branch_city_id",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[13]},
			},
			{
				Name:    "branch_lng_lat",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[8], BranchColumns[9]},
			},
			{
				Name:    "branch_geom",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[12]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIST",
					},
				},
			},
			{
				Name:    "branch_name",
				Unique:  false,
				Columns: []*schema.Column{BranchColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// BranchContractColumns holds the columns for the "branch_contract" table.
	BranchContractColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "landlord_name", Type: field.TypeString, Comment: "房东姓名"},
		{Name: "id_card_number", Type: field.TypeString, Comment: "房东身份证"},
		{Name: "phone", Type: field.TypeString, Comment: "房东手机号"},
		{Name: "bank_number", Type: field.TypeString, Comment: "房东银行卡号"},
		{Name: "pledge", Type: field.TypeFloat64, Comment: "押金"},
		{Name: "rent", Type: field.TypeFloat64, Comment: "租金"},
		{Name: "lease", Type: field.TypeUint, Comment: "租期月数"},
		{Name: "electricity_pledge", Type: field.TypeFloat64, Comment: "电费押金"},
		{Name: "electricity", Type: field.TypeString, Comment: "电费单价"},
		{Name: "area", Type: field.TypeFloat64, Comment: "网点面积"},
		{Name: "start_time", Type: field.TypeTime, Comment: "租期开始时间"},
		{Name: "end_time", Type: field.TypeTime, Comment: "租期结束时间"},
		{Name: "file", Type: field.TypeString, Comment: "合同文件"},
		{Name: "sheets", Type: field.TypeJSON, Comment: "底单"},
		{Name: "branch_id", Type: field.TypeUint64, Comment: "网点ID"},
	}
	// BranchContractTable holds the schema information for the "branch_contract" table.
	BranchContractTable = &schema.Table{
		Name:       "branch_contract",
		Columns:    BranchContractColumns,
		PrimaryKey: []*schema.Column{BranchContractColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "branch_contract_branch_contracts",
				Columns:    []*schema.Column{BranchContractColumns[21]},
				RefColumns: []*schema.Column{BranchColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "branchcontract_created_at",
				Unique:  false,
				Columns: []*schema.Column{BranchContractColumns[1]},
			},
			{
				Name:    "branchcontract_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{BranchContractColumns[3]},
			},
			{
				Name:    "branchcontract_branch_id",
				Unique:  false,
				Columns: []*schema.Column{BranchContractColumns[21]},
			},
		},
	}
	// BusinessColumns holds the columns for the "business" table.
	BusinessColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "type", Type: field.TypeEnum, Comment: "业务类型", Enums: []string{"active", "pause", "continue", "unsubscribe"}},
		{Name: "bin_info", Type: field.TypeJSON, Nullable: true, Comment: "仓位信息"},
		{Name: "stock_sn", Type: field.TypeString, Nullable: true, Comment: "出入库编码"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "企业ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "battery_id", Type: field.TypeUint64, Nullable: true},
	}
	// BusinessTable holds the schema information for the "business" table.
	BusinessTable = &schema.Table{
		Name:       "business",
		Columns:    BusinessColumns,
		PrimaryKey: []*schema.Column{BusinessColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "business_rider_rider",
				Columns:    []*schema.Column{BusinessColumns[10]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "business_city_city",
				Columns:    []*schema.Column{BusinessColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "business_subscribe_subscribe",
				Columns:    []*schema.Column{BusinessColumns[12]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "business_employee_employee",
				Columns:    []*schema.Column{BusinessColumns[13]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_store_store",
				Columns:    []*schema.Column{BusinessColumns[14]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_plan_plan",
				Columns:    []*schema.Column{BusinessColumns[15]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_enterprise_enterprise",
				Columns:    []*schema.Column{BusinessColumns[16]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_enterprise_station_station",
				Columns:    []*schema.Column{BusinessColumns[17]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_cabinet_cabinet",
				Columns:    []*schema.Column{BusinessColumns[18]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "business_battery_battery",
				Columns:    []*schema.Column{BusinessColumns[19]},
				RefColumns: []*schema.Column{BatteryColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "business_created_at",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[1]},
			},
			{
				Name:    "business_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[3]},
			},
			{
				Name:    "business_rider_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[10]},
			},
			{
				Name:    "business_city_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[11]},
			},
			{
				Name:    "business_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[12]},
			},
			{
				Name:    "business_employee_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[13]},
			},
			{
				Name:    "business_store_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[14]},
			},
			{
				Name:    "business_plan_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[15]},
			},
			{
				Name:    "business_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[16]},
			},
			{
				Name:    "business_station_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[17]},
			},
			{
				Name:    "business_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[18]},
			},
			{
				Name:    "business_battery_id",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[19]},
			},
			{
				Name:    "business_type",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[7]},
			},
			{
				Name:    "business_stock_sn",
				Unique:  false,
				Columns: []*schema.Column{BusinessColumns[9]},
			},
		},
	}
	// CabinetColumns holds the columns for the "cabinet" table.
	CabinetColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "sn", Type: field.TypeString, Unique: true, Comment: "编号"},
		{Name: "brand", Type: field.TypeOther, Comment: "品牌", SchemaType: map[string]string{"postgres": "character varying"}},
		{Name: "serial", Type: field.TypeString, Comment: "原始编号"},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "doors", Type: field.TypeInt, Comment: "柜门数量"},
		{Name: "status", Type: field.TypeUint8, Comment: "投放状态"},
		{Name: "lng", Type: field.TypeFloat64, Nullable: true, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Nullable: true, Comment: "纬度"},
		{Name: "address", Type: field.TypeString, Nullable: true, Comment: "详细地址"},
		{Name: "sim_sn", Type: field.TypeString, Nullable: true, Comment: "SIM卡号"},
		{Name: "sim_date", Type: field.TypeTime, Nullable: true, Comment: "SIM卡到期日期"},
		{Name: "transferred", Type: field.TypeBool, Comment: "电池是否已调拨", Default: false},
		{Name: "intelligent", Type: field.TypeBool, Comment: "是否智能柜", Default: false},
		{Name: "health", Type: field.TypeUint8, Comment: "健康状态 0:离线 1:正常 2:故障", Default: 0},
		{Name: "bin", Type: field.TypeJSON, Nullable: true, Comment: "仓位信息"},
		{Name: "battery_num", Type: field.TypeInt, Comment: "电池总数", Default: 0},
		{Name: "battery_full_num", Type: field.TypeInt, Comment: "满电总数", Default: 0},
		{Name: "battery_charging_num", Type: field.TypeInt, Comment: "充电总数", Default: 0},
		{Name: "empty_bin_num", Type: field.TypeInt, Comment: "空仓数量", Default: 0},
		{Name: "locked_bin_num", Type: field.TypeInt, Comment: "锁仓数量", Default: 0},
		{Name: "branch_id", Type: field.TypeUint64, Nullable: true, Comment: "网点"},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true, Comment: "城市ID"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "团签ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
	}
	// CabinetTable holds the schema information for the "cabinet" table.
	CabinetTable = &schema.Table{
		Name:       "cabinet",
		Columns:    CabinetColumns,
		PrimaryKey: []*schema.Column{CabinetColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cabinet_branch_cabinets",
				Columns:    []*schema.Column{CabinetColumns[27]},
				RefColumns: []*schema.Column{BranchColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cabinet_city_city",
				Columns:    []*schema.Column{CabinetColumns[28]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cabinet_enterprise_cabinets",
				Columns:    []*schema.Column{CabinetColumns[29]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cabinet_enterprise_station_cabinets",
				Columns:    []*schema.Column{CabinetColumns[30]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "cabinet_created_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[1]},
			},
			{
				Name:    "cabinet_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[3]},
			},
			{
				Name:    "cabinet_city_id",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[28]},
			},
			{
				Name:    "cabinet_branch_id",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[27]},
			},
			{
				Name:    "cabinet_brand",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[8]},
			},
			{
				Name:    "cabinet_serial",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "cabinet_name",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[10]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "cabinet_bin",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[21]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "jsonb_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "cabinet_sim_date",
				Unique:  false,
				Columns: []*schema.Column{CabinetColumns[17]},
			},
		},
	}
	// CabinetFaultColumns holds the columns for the "cabinet_fault" table.
	CabinetFaultColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "故障状态 0未处理 1已处理", Default: 0},
		{Name: "fault", Type: field.TypeString, Nullable: true, Comment: "故障内容"},
		{Name: "attachments", Type: field.TypeJSON, Nullable: true, Comment: "附件"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "故障留言"},
		{Name: "branch_id", Type: field.TypeUint64, Comment: "网点ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Comment: "电柜ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
	}
	// CabinetFaultTable holds the schema information for the "cabinet_fault" table.
	CabinetFaultTable = &schema.Table{
		Name:       "cabinet_fault",
		Columns:    CabinetFaultColumns,
		PrimaryKey: []*schema.Column{CabinetFaultColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cabinet_fault_branch_faults",
				Columns:    []*schema.Column{CabinetFaultColumns[11]},
				RefColumns: []*schema.Column{BranchColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "cabinet_fault_cabinet_faults",
				Columns:    []*schema.Column{CabinetFaultColumns[12]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "cabinet_fault_city_city",
				Columns:    []*schema.Column{CabinetFaultColumns[13]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "cabinet_fault_rider_faults",
				Columns:    []*schema.Column{CabinetFaultColumns[14]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "cabinetfault_created_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[1]},
			},
			{
				Name:    "cabinetfault_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[3]},
			},
			{
				Name:    "cabinetfault_city_id",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[13]},
			},
			{
				Name:    "cabinetfault_branch_id",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[11]},
			},
			{
				Name:    "cabinetfault_status",
				Unique:  false,
				Columns: []*schema.Column{CabinetFaultColumns[7]},
			},
		},
	}
	// CityColumns holds the columns for the "city" table.
	CityColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "open", Type: field.TypeBool, Nullable: true, Comment: "启用"},
		{Name: "name", Type: field.TypeString, Size: 100, Comment: "城市"},
		{Name: "code", Type: field.TypeString, Size: 10, Comment: "城市编号"},
		{Name: "lng", Type: field.TypeFloat64, Nullable: true, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Nullable: true, Comment: "纬度"},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true, Comment: "父级"},
	}
	// CityTable holds the schema information for the "city" table.
	CityTable = &schema.Table{
		Name:       "city",
		Columns:    CityColumns,
		PrimaryKey: []*schema.Column{CityColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "city_city_children",
				Columns:    []*schema.Column{CityColumns[12]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "city_created_at",
				Unique:  false,
				Columns: []*schema.Column{CityColumns[1]},
			},
			{
				Name:    "city_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CityColumns[3]},
			},
			{
				Name:    "city_open",
				Unique:  false,
				Columns: []*schema.Column{CityColumns[7]},
			},
			{
				Name:    "city_parent_id",
				Unique:  false,
				Columns: []*schema.Column{CityColumns[12]},
			},
		},
	}
	// CommissionColumns holds the columns for the "commission" table.
	CommissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "提成金额"},
		{Name: "status", Type: field.TypeUint8, Comment: "提成状态 0未发放 1已发放", Default: 0},
		{Name: "business_id", Type: field.TypeUint64, Nullable: true},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "员工ID"},
		{Name: "order_id", Type: field.TypeUint64, Unique: true, Comment: "订单ID"},
	}
	// CommissionTable holds the schema information for the "commission" table.
	CommissionTable = &schema.Table{
		Name:       "commission",
		Columns:    CommissionColumns,
		PrimaryKey: []*schema.Column{CommissionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "commission_business_business",
				Columns:    []*schema.Column{CommissionColumns[9]},
				RefColumns: []*schema.Column{BusinessColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_subscribe_subscribe",
				Columns:    []*schema.Column{CommissionColumns[10]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_plan_plan",
				Columns:    []*schema.Column{CommissionColumns[11]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_rider_rider",
				Columns:    []*schema.Column{CommissionColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_employee_commissions",
				Columns:    []*schema.Column{CommissionColumns[13]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "commission_order_commission",
				Columns:    []*schema.Column{CommissionColumns[14]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "commission_created_at",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[1]},
			},
			{
				Name:    "commission_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[3]},
			},
			{
				Name:    "commission_business_id",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[9]},
			},
			{
				Name:    "commission_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[10]},
			},
			{
				Name:    "commission_plan_id",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[11]},
			},
			{
				Name:    "commission_rider_id",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[12]},
			},
			{
				Name:    "commission_status",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[8]},
			},
			{
				Name:    "commission_order_id",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[14]},
			},
			{
				Name:    "commission_employee_id",
				Unique:  false,
				Columns: []*schema.Column{CommissionColumns[13]},
			},
		},
	}
	// ContractColumns holds the columns for the "contract" table.
	ContractColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "状态", Default: 0},
		{Name: "flow_id", Type: field.TypeString, Unique: true, Size: 64, Comment: "E签宝流程ID"},
		{Name: "sn", Type: field.TypeString, Unique: true, Size: 64, Comment: "合同编码"},
		{Name: "files", Type: field.TypeJSON, Nullable: true, Comment: "合同链接"},
		{Name: "effective", Type: field.TypeBool, Comment: "是否有效", Default: true},
		{Name: "rider_info", Type: field.TypeJSON, Nullable: true, Comment: "骑手信息"},
		{Name: "link", Type: field.TypeString, Nullable: true, Comment: "跳转URL"},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true, Comment: "合同过期时间"},
		{Name: "signed_at", Type: field.TypeTime, Nullable: true, Comment: "签约时间"},
		{Name: "allocate_id", Type: field.TypeUint64, Unique: true, Nullable: true, Comment: "电车分配ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手"},
	}
	// ContractTable holds the schema information for the "contract" table.
	ContractTable = &schema.Table{
		Name:       "contract",
		Columns:    ContractColumns,
		PrimaryKey: []*schema.Column{ContractColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contract_allocate_contract",
				Columns:    []*schema.Column{ContractColumns[16]},
				RefColumns: []*schema.Column{AllocateColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "contract_subscribe_subscribe",
				Columns:    []*schema.Column{ContractColumns[17]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "contract_employee_employee",
				Columns:    []*schema.Column{ContractColumns[18]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "contract_rider_contracts",
				Columns:    []*schema.Column{ContractColumns[19]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "contract_created_at",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[1]},
			},
			{
				Name:    "contract_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[3]},
			},
			{
				Name:    "contract_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[17]},
			},
			{
				Name:    "contract_employee_id",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[18]},
			},
			{
				Name:    "contract_rider_id",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[19]},
			},
			{
				Name:    "contract_status_effective",
				Unique:  false,
				Columns: []*schema.Column{ContractColumns[7], ContractColumns[11]},
			},
		},
	}
	// CouponColumns holds the columns for the "coupon" table.
	CouponColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "rule", Type: field.TypeUint8, Comment: "使用规则"},
		{Name: "multiple", Type: field.TypeBool, Comment: "该券是否可叠加", Default: false},
		{Name: "amount", Type: field.TypeFloat64, Comment: "金额"},
		{Name: "code", Type: field.TypeString, Unique: true, Comment: "券码"},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true, Comment: "过期时间"},
		{Name: "used_at", Type: field.TypeTime, Nullable: true, Comment: "使用时间"},
		{Name: "duration", Type: field.TypeJSON, Comment: "有效期规则"},
		{Name: "plans", Type: field.TypeJSON, Nullable: true, Comment: "可用骑士卡"},
		{Name: "cities", Type: field.TypeJSON, Nullable: true, Comment: "可用城市"},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
		{Name: "assembly_id", Type: field.TypeUint64},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true, Comment: "实际使用骑士卡"},
		{Name: "template_id", Type: field.TypeUint64},
		{Name: "order_id", Type: field.TypeUint64, Nullable: true, Comment: "订单ID"},
	}
	// CouponTable holds the schema information for the "coupon" table.
	CouponTable = &schema.Table{
		Name:       "coupon",
		Columns:    CouponColumns,
		PrimaryKey: []*schema.Column{CouponColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "coupon_rider_rider",
				Columns:    []*schema.Column{CouponColumns[16]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "coupon_coupon_assembly_assembly",
				Columns:    []*schema.Column{CouponColumns[17]},
				RefColumns: []*schema.Column{CouponAssemblyColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "coupon_plan_plan",
				Columns:    []*schema.Column{CouponColumns[18]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "coupon_coupon_template_coupons",
				Columns:    []*schema.Column{CouponColumns[19]},
				RefColumns: []*schema.Column{CouponTemplateColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "coupon_order_coupons",
				Columns:    []*schema.Column{CouponColumns[20]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "coupon_created_at",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[1]},
			},
			{
				Name:    "coupon_rider_id",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[16]},
			},
			{
				Name:    "coupon_assembly_id",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[17]},
			},
			{
				Name:    "coupon_plan_id",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[18]},
			},
			{
				Name:    "coupon_name",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[6]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "coupon_order_id",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[20]},
			},
			{
				Name:    "coupon_template_id",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[19]},
			},
			{
				Name:    "coupon_multiple",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[8]},
			},
			{
				Name:    "coupon_expires_at",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[11]},
			},
			{
				Name:    "coupon_used_at",
				Unique:  false,
				Columns: []*schema.Column{CouponColumns[12]},
			},
		},
	}
	// CouponAssemblyColumns holds the columns for the "coupon_assembly" table.
	CouponAssemblyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "number", Type: field.TypeInt, Comment: "数量"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "金额"},
		{Name: "target", Type: field.TypeUint8, Comment: "发送对象"},
		{Name: "meta", Type: field.TypeJSON, Comment: "详情"},
		{Name: "template_id", Type: field.TypeUint64},
	}
	// CouponAssemblyTable holds the schema information for the "coupon_assembly" table.
	CouponAssemblyTable = &schema.Table{
		Name:       "coupon_assembly",
		Columns:    CouponAssemblyColumns,
		PrimaryKey: []*schema.Column{CouponAssemblyColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "coupon_assembly_coupon_template_template",
				Columns:    []*schema.Column{CouponAssemblyColumns[11]},
				RefColumns: []*schema.Column{CouponTemplateColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "couponassembly_created_at",
				Unique:  false,
				Columns: []*schema.Column{CouponAssemblyColumns[1]},
			},
			{
				Name:    "couponassembly_template_id",
				Unique:  false,
				Columns: []*schema.Column{CouponAssemblyColumns[11]},
			},
		},
	}
	// CouponTemplateColumns holds the columns for the "coupon_template" table.
	CouponTemplateColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "enable", Type: field.TypeBool, Comment: "是否启用", Default: true},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "meta", Type: field.TypeJSON, Comment: "详情"},
	}
	// CouponTemplateTable holds the schema information for the "coupon_template" table.
	CouponTemplateTable = &schema.Table{
		Name:       "coupon_template",
		Columns:    CouponTemplateColumns,
		PrimaryKey: []*schema.Column{CouponTemplateColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "coupontemplate_created_at",
				Unique:  false,
				Columns: []*schema.Column{CouponTemplateColumns[1]},
			},
		},
	}
	// EbikeColumns holds the columns for the "ebike" table.
	EbikeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeOther, Comment: "状态", SchemaType: map[string]string{"postgres": "smallint"}},
		{Name: "enable", Type: field.TypeBool, Comment: "是否启用", Default: true},
		{Name: "sn", Type: field.TypeString, Unique: true, Comment: "车架号"},
		{Name: "plate", Type: field.TypeString, Unique: true, Nullable: true, Comment: "车牌号"},
		{Name: "machine", Type: field.TypeString, Unique: true, Nullable: true, Comment: "终端编号"},
		{Name: "sim", Type: field.TypeString, Unique: true, Nullable: true, Comment: "SIM卡号"},
		{Name: "color", Type: field.TypeString, Comment: "颜色", Default: "橘黄"},
		{Name: "ex_factory", Type: field.TypeString, Comment: "生产批次(出厂日期)"},
		{Name: "brand_id", Type: field.TypeUint64},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "骑手ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
	}
	// EbikeTable holds the schema information for the "ebike" table.
	EbikeTable = &schema.Table{
		Name:       "ebike",
		Columns:    EbikeColumns,
		PrimaryKey: []*schema.Column{EbikeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ebike_ebike_brand_brand",
				Columns:    []*schema.Column{EbikeColumns[14]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "ebike_rider_rider",
				Columns:    []*schema.Column{EbikeColumns[15]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ebike_store_store",
				Columns:    []*schema.Column{EbikeColumns[16]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ebike_created_at",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[1]},
			},
			{
				Name:    "ebike_brand_id",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[14]},
			},
			{
				Name:    "ebike_rider_id",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[15]},
			},
			{
				Name:    "ebike_store_id",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[16]},
			},
			{
				Name:    "ebike_status",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[6]},
			},
			{
				Name:    "ebike_ex_factory",
				Unique:  false,
				Columns: []*schema.Column{EbikeColumns[13]},
			},
		},
	}
	// EbikeBrandColumns holds the columns for the "ebike_brand" table.
	EbikeBrandColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "名称"},
		{Name: "cover", Type: field.TypeString, Comment: "封面缩略图"},
	}
	// EbikeBrandTable holds the schema information for the "ebike_brand" table.
	EbikeBrandTable = &schema.Table{
		Name:       "ebike_brand",
		Columns:    EbikeBrandColumns,
		PrimaryKey: []*schema.Column{EbikeBrandColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "ebikebrand_created_at",
				Unique:  false,
				Columns: []*schema.Column{EbikeBrandColumns[1]},
			},
			{
				Name:    "ebikebrand_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EbikeBrandColumns[3]},
			},
		},
	}
	// EmployeeColumns holds the columns for the "employee" table.
	EmployeeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "sn", Type: field.TypeUUID, Unique: true, Nullable: true},
		{Name: "name", Type: field.TypeString, Comment: "姓名"},
		{Name: "phone", Type: field.TypeString, Comment: "电话"},
		{Name: "enable", Type: field.TypeBool, Comment: "启用状态", Default: true},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
	}
	// EmployeeTable holds the schema information for the "employee" table.
	EmployeeTable = &schema.Table{
		Name:       "employee",
		Columns:    EmployeeColumns,
		PrimaryKey: []*schema.Column{EmployeeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "employee_city_city",
				Columns:    []*schema.Column{EmployeeColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "employee_created_at",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[1]},
			},
			{
				Name:    "employee_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[3]},
			},
			{
				Name:    "employee_city_id",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[11]},
			},
			{
				Name:    "employee_enable",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[10]},
			},
			{
				Name:    "employee_name",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "employee_phone",
				Unique:  false,
				Columns: []*schema.Column{EmployeeColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// EnterpriseColumns holds the columns for the "enterprise" table.
	EnterpriseColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "团签名称"},
		{Name: "company_name", Type: field.TypeString, Nullable: true, Comment: "企业全称"},
		{Name: "status", Type: field.TypeUint8, Comment: "合作状态 0未合作 1合作中 2暂停合作"},
		{Name: "contact_name", Type: field.TypeString, Comment: "联系人姓名"},
		{Name: "contact_phone", Type: field.TypeString, Comment: "联系人电话"},
		{Name: "idcard_number", Type: field.TypeString, Comment: "身份证号码"},
		{Name: "address", Type: field.TypeString, Comment: "地址"},
		{Name: "payment", Type: field.TypeUint8, Comment: "付费方式 1预付费 2后付费"},
		{Name: "deposit", Type: field.TypeFloat64, Comment: "押金", Default: 0},
		{Name: "balance", Type: field.TypeFloat64, Comment: "账户余额", Default: 0},
		{Name: "prepayment_total", Type: field.TypeFloat64, Comment: "总储值金额 = 总金额 - 轧账金额(修改价格后自动轧账)", Default: 0},
		{Name: "suspensed_at", Type: field.TypeTime, Nullable: true, Comment: "暂停合作时间"},
		{Name: "agent", Type: field.TypeBool, Comment: "代理商模式", Default: false},
		{Name: "use_store", Type: field.TypeBool, Nullable: true, Comment: "是否可以使用门店, 只有代理商模式生效", Default: true},
		{Name: "days", Type: field.TypeJSON, Nullable: true, Comment: "代理商时间选项"},
		{Name: "distance", Type: field.TypeFloat64, Comment: "可控制电柜距离", Default: 0},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
	}
	// EnterpriseTable holds the schema information for the "enterprise" table.
	EnterpriseTable = &schema.Table{
		Name:       "enterprise",
		Columns:    EnterpriseColumns,
		PrimaryKey: []*schema.Column{EnterpriseColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_city_city",
				Columns:    []*schema.Column{EnterpriseColumns[23]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprise_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[1]},
			},
			{
				Name:    "enterprise_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[3]},
			},
			{
				Name:    "enterprise_city_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[23]},
			},
			{
				Name:    "enterprise_payment",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[14]},
			},
			{
				Name:    "enterprise_balance",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[16]},
			},
			{
				Name:    "enterprise_name",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "enterprise_contact_name",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[10]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "enterprise_contact_phone",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[11]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "enterprise_idcard_number",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseColumns[12]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// EnterpriseBillColumns holds the columns for the "enterprise_bill" table.
	EnterpriseBillColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "start", Type: field.TypeTime, Comment: "结算开始日期(包含)"},
		{Name: "end", Type: field.TypeTime, Comment: "结算结束日期(包含)"},
		{Name: "days", Type: field.TypeInt, Comment: "账单天数"},
		{Name: "price", Type: field.TypeFloat64, Comment: "账单单价"},
		{Name: "cost", Type: field.TypeFloat64, Comment: "账单金额"},
		{Name: "model", Type: field.TypeString, Comment: "电池型号"},
		{Name: "enterprise_id", Type: field.TypeUint64, Comment: "企业ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
		{Name: "statement_id", Type: field.TypeUint64, Comment: "账单ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Comment: "订阅ID"},
	}
	// EnterpriseBillTable holds the schema information for the "enterprise_bill" table.
	EnterpriseBillTable = &schema.Table{
		Name:       "enterprise_bill",
		Columns:    EnterpriseBillColumns,
		PrimaryKey: []*schema.Column{EnterpriseBillColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_bill_enterprise_bills",
				Columns:    []*schema.Column{EnterpriseBillColumns[13]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_bill_rider_rider",
				Columns:    []*schema.Column{EnterpriseBillColumns[14]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_bill_city_city",
				Columns:    []*schema.Column{EnterpriseBillColumns[15]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_bill_enterprise_station_station",
				Columns:    []*schema.Column{EnterpriseBillColumns[16]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "enterprise_bill_enterprise_statement_bills",
				Columns:    []*schema.Column{EnterpriseBillColumns[17]},
				RefColumns: []*schema.Column{EnterpriseStatementColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_bill_subscribe_bills",
				Columns:    []*schema.Column{EnterpriseBillColumns[18]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisebill_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[1]},
			},
			{
				Name:    "enterprisebill_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[3]},
			},
			{
				Name:    "enterprisebill_rider_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[14]},
			},
			{
				Name:    "enterprisebill_city_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[15]},
			},
			{
				Name:    "enterprisebill_station_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[16]},
			},
			{
				Name:    "enterprisebill_model",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[12]},
			},
			{
				Name:    "enterprisebill_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[13]},
			},
			{
				Name:    "enterprisebill_statement_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[17]},
			},
			{
				Name:    "enterprisebill_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseBillColumns[18]},
			},
		},
	}
	// EnterpriseContractColumns holds the columns for the "enterprise_contract" table.
	EnterpriseContractColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "start", Type: field.TypeTime, Comment: "合同开始时间"},
		{Name: "end", Type: field.TypeTime, Comment: "合同结束时间"},
		{Name: "file", Type: field.TypeString, Comment: "合同文件"},
		{Name: "enterprise_id", Type: field.TypeUint64},
	}
	// EnterpriseContractTable holds the schema information for the "enterprise_contract" table.
	EnterpriseContractTable = &schema.Table{
		Name:       "enterprise_contract",
		Columns:    EnterpriseContractColumns,
		PrimaryKey: []*schema.Column{EnterpriseContractColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_contract_enterprise_contracts",
				Columns:    []*schema.Column{EnterpriseContractColumns[10]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisecontract_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[1]},
			},
			{
				Name:    "enterprisecontract_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[3]},
			},
			{
				Name:    "enterprisecontract_start",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[7]},
			},
			{
				Name:    "enterprisecontract_end",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[8]},
			},
			{
				Name:    "enterprisecontract_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseContractColumns[10]},
			},
		},
	}
	// EnterprisePrepaymentColumns holds the columns for the "enterprise_prepayment" table.
	EnterprisePrepaymentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "预付金额"},
		{Name: "enterprise_id", Type: field.TypeUint64, Comment: "企业ID"},
	}
	// EnterprisePrepaymentTable holds the schema information for the "enterprise_prepayment" table.
	EnterprisePrepaymentTable = &schema.Table{
		Name:       "enterprise_prepayment",
		Columns:    EnterprisePrepaymentColumns,
		PrimaryKey: []*schema.Column{EnterprisePrepaymentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_prepayment_enterprise_enterprise",
				Columns:    []*schema.Column{EnterprisePrepaymentColumns[8]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterpriseprepayment_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePrepaymentColumns[1]},
			},
			{
				Name:    "enterpriseprepayment_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePrepaymentColumns[3]},
			},
			{
				Name:    "enterpriseprepayment_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePrepaymentColumns[8]},
			},
		},
	}
	// EnterprisePriceColumns holds the columns for the "enterprise_price" table.
	EnterprisePriceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "price", Type: field.TypeFloat64, Comment: "单价 元/天"},
		{Name: "model", Type: field.TypeString, Comment: "可用电池型号"},
		{Name: "intelligent", Type: field.TypeBool, Comment: "是否智能电池", Default: false},
		{Name: "enterprise_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
	}
	// EnterprisePriceTable holds the schema information for the "enterprise_price" table.
	EnterprisePriceTable = &schema.Table{
		Name:       "enterprise_price",
		Columns:    EnterprisePriceColumns,
		PrimaryKey: []*schema.Column{EnterprisePriceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_price_enterprise_prices",
				Columns:    []*schema.Column{EnterprisePriceColumns[10]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "enterprise_price_city_city",
				Columns:    []*schema.Column{EnterprisePriceColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterpriseprice_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[1]},
			},
			{
				Name:    "enterpriseprice_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[3]},
			},
			{
				Name:    "enterpriseprice_city_id",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[11]},
			},
			{
				Name:    "enterpriseprice_model",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[8]},
			},
			{
				Name:    "enterpriseprice_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterprisePriceColumns[10]},
			},
		},
	}
	// EnterpriseStatementColumns holds the columns for the "enterprise_statement" table.
	EnterpriseStatementColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "cost", Type: field.TypeFloat64, Comment: "账单金额", Default: 0},
		{Name: "settled_at", Type: field.TypeTime, Nullable: true, Comment: "结账时间"},
		{Name: "days", Type: field.TypeInt, Comment: "账期内使用总天数", Default: 0},
		{Name: "rider_number", Type: field.TypeInt, Comment: "账期内使用总人数", Default: 0},
		{Name: "date", Type: field.TypeTime, Nullable: true, Comment: "对账单计算日期(包含当日)"},
		{Name: "start", Type: field.TypeTime, Comment: "账单开始日期"},
		{Name: "end", Type: field.TypeTime, Nullable: true, Comment: "账单结束日期"},
		{Name: "enterprise_id", Type: field.TypeUint64, Comment: "企业ID"},
	}
	// EnterpriseStatementTable holds the schema information for the "enterprise_statement" table.
	EnterpriseStatementTable = &schema.Table{
		Name:       "enterprise_statement",
		Columns:    EnterpriseStatementColumns,
		PrimaryKey: []*schema.Column{EnterpriseStatementColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_statement_enterprise_statements",
				Columns:    []*schema.Column{EnterpriseStatementColumns[14]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisestatement_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[1]},
			},
			{
				Name:    "enterprisestatement_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[3]},
			},
			{
				Name:    "enterprisestatement_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[14]},
			},
			{
				Name:    "enterprisestatement_date",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[11]},
			},
			{
				Name:    "enterprisestatement_start_end",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStatementColumns[12], EnterpriseStatementColumns[13]},
			},
		},
	}
	// EnterpriseStationColumns holds the columns for the "enterprise_station" table.
	EnterpriseStationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Comment: "站点名称"},
		{Name: "enterprise_id", Type: field.TypeUint64, Comment: "企业ID"},
	}
	// EnterpriseStationTable holds the schema information for the "enterprise_station" table.
	EnterpriseStationTable = &schema.Table{
		Name:       "enterprise_station",
		Columns:    EnterpriseStationColumns,
		PrimaryKey: []*schema.Column{EnterpriseStationColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enterprise_station_enterprise_stations",
				Columns:    []*schema.Column{EnterpriseStationColumns[8]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enterprisestation_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStationColumns[1]},
			},
			{
				Name:    "enterprisestation_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStationColumns[3]},
			},
			{
				Name:    "enterprisestation_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{EnterpriseStationColumns[8]},
			},
		},
	}
	// ExceptionColumns holds the columns for the "exception" table.
	ExceptionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "异常状态", Default: 0},
		{Name: "name", Type: field.TypeString, Comment: "物资名称"},
		{Name: "model", Type: field.TypeString, Nullable: true, Comment: "电池型号"},
		{Name: "num", Type: field.TypeInt, Comment: "异常数量"},
		{Name: "reason", Type: field.TypeString, Comment: "异常原因"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "异常描述"},
		{Name: "attachments", Type: field.TypeJSON, Nullable: true, Comment: "附件"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "employee_id", Type: field.TypeUint64, Comment: "店员ID"},
		{Name: "store_id", Type: field.TypeUint64, Comment: "门店ID"},
	}
	// ExceptionTable holds the schema information for the "exception" table.
	ExceptionTable = &schema.Table{
		Name:       "exception",
		Columns:    ExceptionColumns,
		PrimaryKey: []*schema.Column{ExceptionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exception_city_city",
				Columns:    []*schema.Column{ExceptionColumns[14]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "exception_employee_employee",
				Columns:    []*schema.Column{ExceptionColumns[15]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "exception_store_exceptions",
				Columns:    []*schema.Column{ExceptionColumns[16]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exception_created_at",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[1]},
			},
			{
				Name:    "exception_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[3]},
			},
			{
				Name:    "exception_city_id",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[14]},
			},
			{
				Name:    "exception_employee_id",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[15]},
			},
			{
				Name:    "exception_store_id",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[16]},
			},
			{
				Name:    "exception_name",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[8]},
			},
			{
				Name:    "exception_model",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[9]},
			},
			{
				Name:    "exception_num",
				Unique:  false,
				Columns: []*schema.Column{ExceptionColumns[10]},
			},
		},
	}
	// ExchangeColumns holds the columns for the "exchange" table.
	ExchangeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "uuid", Type: field.TypeString, Unique: true},
		{Name: "success", Type: field.TypeBool, Comment: "是否成功", Default: true},
		{Name: "model", Type: field.TypeString, Comment: "电池型号"},
		{Name: "alternative", Type: field.TypeBool, Comment: "是否备用方案", Default: false},
		{Name: "start_at", Type: field.TypeTime, Nullable: true, Comment: "换电开始时间"},
		{Name: "finish_at", Type: field.TypeTime, Nullable: true, Comment: "换电结束时间"},
		{Name: "duration", Type: field.TypeInt, Nullable: true, Comment: "换电耗时(s)"},
		{Name: "rider_battery", Type: field.TypeString, Nullable: true, Comment: "骑手当前电池编号"},
		{Name: "putin_battery", Type: field.TypeString, Nullable: true, Comment: "放入电池编号"},
		{Name: "putout_battery", Type: field.TypeString, Nullable: true, Comment: "取出电池编号"},
		{Name: "cabinet_info", Type: field.TypeJSON, Nullable: true, Comment: "电柜信息"},
		{Name: "empty", Type: field.TypeJSON, Nullable: true, Comment: "空仓信息"},
		{Name: "fully", Type: field.TypeJSON, Nullable: true, Comment: "满仓信息"},
		{Name: "steps", Type: field.TypeJSON, Nullable: true, Comment: "步骤信息"},
		{Name: "message", Type: field.TypeString, Comment: "消息", Default: ""},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "企业ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
	}
	// ExchangeTable holds the schema information for the "exchange" table.
	ExchangeTable = &schema.Table{
		Name:       "exchange",
		Columns:    ExchangeColumns,
		PrimaryKey: []*schema.Column{ExchangeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exchange_cabinet_exchanges",
				Columns:    []*schema.Column{ExchangeColumns[22]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_employee_exchanges",
				Columns:    []*schema.Column{ExchangeColumns[23]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_subscribe_subscribe",
				Columns:    []*schema.Column{ExchangeColumns[24]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "exchange_city_city",
				Columns:    []*schema.Column{ExchangeColumns[25]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "exchange_store_store",
				Columns:    []*schema.Column{ExchangeColumns[26]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_enterprise_enterprise",
				Columns:    []*schema.Column{ExchangeColumns[27]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_enterprise_station_station",
				Columns:    []*schema.Column{ExchangeColumns[28]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exchange_rider_exchanges",
				Columns:    []*schema.Column{ExchangeColumns[29]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exchange_created_at",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[1]},
			},
			{
				Name:    "exchange_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[3]},
			},
			{
				Name:    "exchange_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[24]},
			},
			{
				Name:    "exchange_city_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[25]},
			},
			{
				Name:    "exchange_store_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[26]},
			},
			{
				Name:    "exchange_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[27]},
			},
			{
				Name:    "exchange_station_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[28]},
			},
			{
				Name:    "exchange_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[22]},
			},
			{
				Name:    "exchange_rider_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[29]},
			},
			{
				Name:    "exchange_employee_id",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[23]},
			},
			{
				Name:    "exchange_success",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[8]},
			},
			{
				Name:    "exchange_model",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[9]},
			},
			{
				Name:    "exchange_rider_battery",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[14]},
			},
			{
				Name:    "exchange_putin_battery",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[15]},
			},
			{
				Name:    "exchange_putout_battery",
				Unique:  false,
				Columns: []*schema.Column{ExchangeColumns[16]},
			},
		},
	}
	// ExportColumns holds the columns for the "export" table.
	ExportColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "taxonomy", Type: field.TypeString, Comment: "分类"},
		{Name: "sn", Type: field.TypeString, Comment: "编号"},
		{Name: "status", Type: field.TypeUint8, Comment: "状态", Default: 0},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "文件路径"},
		{Name: "message", Type: field.TypeString, Nullable: true, Comment: "失败原因"},
		{Name: "finish_at", Type: field.TypeTime, Nullable: true, Comment: "生成时间"},
		{Name: "duration", Type: field.TypeInt64, Nullable: true, Comment: "耗时"},
		{Name: "condition", Type: field.TypeString, Size: 2147483647, Comment: "筛选条件"},
		{Name: "info", Type: field.TypeJSON, Nullable: true, Comment: "详细信息"},
		{Name: "remark", Type: field.TypeString, Comment: "备注信息"},
		{Name: "manager_id", Type: field.TypeUint64, Comment: "管理人ID"},
	}
	// ExportTable holds the schema information for the "export" table.
	ExportTable = &schema.Table{
		Name:       "export",
		Columns:    ExportColumns,
		PrimaryKey: []*schema.Column{ExportColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "export_manager_manager",
				Columns:    []*schema.Column{ExportColumns[14]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "export_created_at",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[1]},
			},
			{
				Name:    "export_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[3]},
			},
			{
				Name:    "export_manager_id",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[14]},
			},
			{
				Name:    "export_sn",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[5]},
			},
			{
				Name:    "export_status",
				Unique:  false,
				Columns: []*schema.Column{ExportColumns[6]},
			},
		},
	}
	// FeedbackColumns holds the columns for the "feedback" table.
	FeedbackColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString},
		{Name: "type", Type: field.TypeUint8, Default: 0},
		{Name: "url", Type: field.TypeJSON, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true},
	}
	// FeedbackTable holds the schema information for the "feedback" table.
	FeedbackTable = &schema.Table{
		Name:       "feedback",
		Columns:    FeedbackColumns,
		PrimaryKey: []*schema.Column{FeedbackColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "feedback_enterprise_feedback",
				Columns:    []*schema.Column{FeedbackColumns[12]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "feedback_created_at",
				Unique:  false,
				Columns: []*schema.Column{FeedbackColumns[1]},
			},
			{
				Name:    "feedback_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{FeedbackColumns[3]},
			},
		},
	}
	// InventoryColumns holds the columns for the "inventory" table.
	InventoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "物资名称"},
		{Name: "count", Type: field.TypeBool, Comment: "是否需要盘点"},
		{Name: "transfer", Type: field.TypeBool, Comment: "是否可调拨"},
		{Name: "purchase", Type: field.TypeBool, Comment: "是否可采购"},
	}
	// InventoryTable holds the schema information for the "inventory" table.
	InventoryTable = &schema.Table{
		Name:       "inventory",
		Columns:    InventoryColumns,
		PrimaryKey: []*schema.Column{InventoryColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "inventory_created_at",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[1]},
			},
			{
				Name:    "inventory_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[3]},
			},
			{
				Name:    "inventory_count",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[8]},
			},
			{
				Name:    "inventory_transfer",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[9]},
			},
			{
				Name:    "inventory_purchase",
				Unique:  false,
				Columns: []*schema.Column{InventoryColumns[10]},
			},
		},
	}
	// ManagerColumns holds the columns for the "manager" table.
	ManagerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "phone", Type: field.TypeString, Size: 30, Comment: "账户/手机号"},
		{Name: "name", Type: field.TypeString, Size: 30, Comment: "姓名"},
		{Name: "password", Type: field.TypeString, Comment: "密码"},
		{Name: "last_signin_at", Type: field.TypeTime, Nullable: true, Comment: "最后登录时间"},
		{Name: "role_id", Type: field.TypeUint64, Nullable: true, Comment: "角色ID"},
	}
	// ManagerTable holds the schema information for the "manager" table.
	ManagerTable = &schema.Table{
		Name:       "manager",
		Columns:    ManagerColumns,
		PrimaryKey: []*schema.Column{ManagerColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "manager_role_managers",
				Columns:    []*schema.Column{ManagerColumns[11]},
				RefColumns: []*schema.Column{RoleColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "manager_created_at",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[1]},
			},
			{
				Name:    "manager_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[3]},
			},
			{
				Name:    "manager_role_id",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[11]},
			},
			{
				Name:    "manager_phone",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "manager_name",
				Unique:  false,
				Columns: []*schema.Column{ManagerColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// OrderColumns holds the columns for the "order" table.
	OrderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "订单状态 0未支付 1已支付 2申请退款 3已退款", Default: 1},
		{Name: "payway", Type: field.TypeUint8, Comment: "支付方式 0手动 1支付宝 2微信"},
		{Name: "type", Type: field.TypeUint, Comment: "订单类型 1新签 2续签 3重签 4更改电池 5救援 6滞纳金 7押金"},
		{Name: "out_trade_no", Type: field.TypeString, Comment: "交易订单号"},
		{Name: "trade_no", Type: field.TypeString, Comment: "平台订单号"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "子订单金额(拆分项此条订单)"},
		{Name: "total", Type: field.TypeFloat64, Comment: "此次支付总金额(包含所有子订单的总支付)", Default: 0},
		{Name: "refund_at", Type: field.TypeTime, Nullable: true, Comment: "退款时间"},
		{Name: "initial_days", Type: field.TypeInt, Nullable: true, Comment: "所购骑士卡天数(也可能为补缴欠费天数)"},
		{Name: "past_days", Type: field.TypeInt, Nullable: true, Comment: "距上次退订天数"},
		{Name: "points", Type: field.TypeInt64, Comment: "使用积分", Default: 0},
		{Name: "point_ratio", Type: field.TypeFloat64, Comment: "积分兑换比例", Default: 0.01},
		{Name: "coupon_amount", Type: field.TypeFloat64, Comment: "优惠券金额", Default: 0},
		{Name: "discount_newly", Type: field.TypeFloat64, Comment: "新签优惠", Default: 0},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true, Comment: "城市ID"},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
		{Name: "ebike_id", Type: field.TypeUint64, Nullable: true},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true, Comment: "父订单ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true, Comment: "所属订阅ID"},
	}
	// OrderTable holds the schema information for the "order" table.
	OrderTable = &schema.Table{
		Name:       "order",
		Columns:    OrderColumns,
		PrimaryKey: []*schema.Column{OrderColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_plan_plan",
				Columns:    []*schema.Column{OrderColumns[21]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_city_city",
				Columns:    []*schema.Column{OrderColumns[22]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_ebike_brand_brand",
				Columns:    []*schema.Column{OrderColumns[23]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_ebike_ebike",
				Columns:    []*schema.Column{OrderColumns[24]},
				RefColumns: []*schema.Column{EbikeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_order_children",
				Columns:    []*schema.Column{OrderColumns[25]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_rider_orders",
				Columns:    []*schema.Column{OrderColumns[26]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "order_subscribe_orders",
				Columns:    []*schema.Column{OrderColumns[27]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "order_created_at",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[1]},
			},
			{
				Name:    "order_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[3]},
			},
			{
				Name:    "order_plan_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[21]},
			},
			{
				Name:    "order_city_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[22]},
			},
			{
				Name:    "order_brand_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[23]},
			},
			{
				Name:    "order_ebike_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[24]},
			},
			{
				Name:    "order_rider_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[26]},
			},
			{
				Name:    "order_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[27]},
			},
			{
				Name:    "order_trade_no",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[11]},
			},
			{
				Name:    "order_out_trade_no",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[10]},
			},
			{
				Name:    "order_status",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[7]},
			},
			{
				Name:    "order_initial_days",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[15]},
			},
		},
	}
	// OrderRefundColumns holds the columns for the "order_refund" table.
	OrderRefundColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "退款状态"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "退款金额"},
		{Name: "out_refund_no", Type: field.TypeString, Unique: true, Comment: "退款订单编号"},
		{Name: "reason", Type: field.TypeString, Comment: "退款理由"},
		{Name: "refund_at", Type: field.TypeTime, Nullable: true, Comment: "退款成功时间"},
		{Name: "order_id", Type: field.TypeUint64, Unique: true, Comment: "订单ID"},
	}
	// OrderRefundTable holds the schema information for the "order_refund" table.
	OrderRefundTable = &schema.Table{
		Name:       "order_refund",
		Columns:    OrderRefundColumns,
		PrimaryKey: []*schema.Column{OrderRefundColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_refund_order_refund",
				Columns:    []*schema.Column{OrderRefundColumns[12]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderrefund_created_at",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[1]},
			},
			{
				Name:    "orderrefund_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[3]},
			},
			{
				Name:    "orderrefund_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[12]},
			},
			{
				Name:    "orderrefund_status",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[7]},
			},
			{
				Name:    "orderrefund_out_refund_no",
				Unique:  false,
				Columns: []*schema.Column{OrderRefundColumns[9]},
			},
		},
	}
	// PersonColumns holds the columns for the "person" table.
	PersonColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "认证状态", Default: 0},
		{Name: "banned", Type: field.TypeBool, Comment: "是否封禁身份", Default: false},
		{Name: "name", Type: field.TypeString, Size: 40, Comment: "真实姓名"},
		{Name: "id_card_number", Type: field.TypeString, Unique: true, Nullable: true, Size: 40, Comment: "证件号码"},
		{Name: "id_card_type", Type: field.TypeUint8, Comment: "证件类别", Default: 1},
		{Name: "id_card_portrait", Type: field.TypeString, Nullable: true, Comment: "证件人像面"},
		{Name: "id_card_national", Type: field.TypeString, Nullable: true, Comment: "证件国徽面"},
		{Name: "auth_face", Type: field.TypeString, Nullable: true, Comment: "实名认证人脸照片"},
		{Name: "auth_result", Type: field.TypeJSON, Nullable: true, Comment: "实名认证结果详情"},
		{Name: "auth_at", Type: field.TypeTime, Nullable: true, Comment: "实名认证结果获取时间"},
		{Name: "esign_account_id", Type: field.TypeString, Nullable: true, Comment: "E签宝账户ID"},
		{Name: "baidu_verify_token", Type: field.TypeString, Nullable: true, Comment: "百度人脸verify_token"},
		{Name: "baidu_log_id", Type: field.TypeString, Nullable: true, Comment: "百度人脸log_id"},
	}
	// PersonTable holds the schema information for the "person" table.
	PersonTable = &schema.Table{
		Name:       "person",
		Columns:    PersonColumns,
		PrimaryKey: []*schema.Column{PersonColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "person_created_at",
				Unique:  false,
				Columns: []*schema.Column{PersonColumns[1]},
			},
			{
				Name:    "person_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PersonColumns[3]},
			},
			{
				Name:    "person_status",
				Unique:  false,
				Columns: []*schema.Column{PersonColumns[7]},
			},
			{
				Name:    "person_name",
				Unique:  false,
				Columns: []*schema.Column{PersonColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// PlanColumns holds the columns for the "plan" table.
	PlanColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "model", Type: field.TypeString, Nullable: true, Comment: "电池型号"},
		{Name: "enable", Type: field.TypeBool, Comment: "是否启用"},
		{Name: "type", Type: field.TypeUint8, Comment: "骑士卡类别 1:单电 2:车加电", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "骑士卡名称"},
		{Name: "start", Type: field.TypeTime, Comment: "有效期开始日期"},
		{Name: "end", Type: field.TypeTime, Comment: "有效期结束日期"},
		{Name: "price", Type: field.TypeFloat64, Comment: "骑士卡价格"},
		{Name: "days", Type: field.TypeUint, Comment: "骑士卡天数"},
		{Name: "commission", Type: field.TypeFloat64, Comment: "提成"},
		{Name: "original", Type: field.TypeFloat64, Nullable: true, Comment: "原价"},
		{Name: "desc", Type: field.TypeString, Nullable: true, Comment: "优惠信息"},
		{Name: "discount_newly", Type: field.TypeFloat64, Comment: "新签减免", Default: 0},
		{Name: "notes", Type: field.TypeJSON, Nullable: true, Comment: "购买须知"},
		{Name: "intelligent", Type: field.TypeBool, Comment: "是否智能柜套餐", Default: false},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true, Comment: "父级"},
	}
	// PlanTable holds the schema information for the "plan" table.
	PlanTable = &schema.Table{
		Name:       "plan",
		Columns:    PlanColumns,
		PrimaryKey: []*schema.Column{PlanColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plan_ebike_brand_brand",
				Columns:    []*schema.Column{PlanColumns[21]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "plan_plan_complexes",
				Columns:    []*schema.Column{PlanColumns[22]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "plan_created_at",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[1]},
			},
			{
				Name:    "plan_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[3]},
			},
			{
				Name:    "plan_brand_id",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[21]},
			},
			{
				Name:    "plan_type",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[9]},
			},
			{
				Name:    "plan_model",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[7]},
			},
			{
				Name:    "plan_days",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[14]},
			},
			{
				Name:    "plan_enable",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[8]},
			},
			{
				Name:    "plan_start_end",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[11], PlanColumns[12]},
			},
			{
				Name:    "plan_name",
				Unique:  false,
				Columns: []*schema.Column{PlanColumns[10]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// PlanIntroduceColumns holds the columns for the "plan_introduce" table.
	PlanIntroduceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "model", Type: field.TypeString, Comment: "电池型号"},
		{Name: "image", Type: field.TypeString},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
	}
	// PlanIntroduceTable holds the schema information for the "plan_introduce" table.
	PlanIntroduceTable = &schema.Table{
		Name:       "plan_introduce",
		Columns:    PlanIntroduceColumns,
		PrimaryKey: []*schema.Column{PlanIntroduceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plan_introduce_ebike_brand_brand",
				Columns:    []*schema.Column{PlanIntroduceColumns[5]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "planintroduce_brand_id",
				Unique:  false,
				Columns: []*schema.Column{PlanIntroduceColumns[5]},
			},
			{
				Name:    "planintroduce_model",
				Unique:  false,
				Columns: []*schema.Column{PlanIntroduceColumns[3]},
			},
		},
	}
	// PointLogColumns holds the columns for the "point_log" table.
	PointLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "modifier", Type: field.TypeJSON, Nullable: true, Comment: "管理"},
		{Name: "employee_info", Type: field.TypeJSON, Nullable: true, Comment: "店员"},
		{Name: "type", Type: field.TypeUint8, Comment: "变动类型"},
		{Name: "points", Type: field.TypeInt64, Comment: "变动数量"},
		{Name: "after", Type: field.TypeInt64, Comment: "变动结果"},
		{Name: "reason", Type: field.TypeString, Nullable: true, Comment: "原因"},
		{Name: "attach", Type: field.TypeJSON, Nullable: true, Comment: "其他信息"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "order_id", Type: field.TypeUint64, Nullable: true},
	}
	// PointLogTable holds the schema information for the "point_log" table.
	PointLogTable = &schema.Table{
		Name:       "point_log",
		Columns:    PointLogColumns,
		PrimaryKey: []*schema.Column{PointLogColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "point_log_rider_rider",
				Columns:    []*schema.Column{PointLogColumns[10]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "point_log_order_order",
				Columns:    []*schema.Column{PointLogColumns[11]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "pointlog_created_at",
				Unique:  false,
				Columns: []*schema.Column{PointLogColumns[1]},
			},
			{
				Name:    "pointlog_rider_id",
				Unique:  false,
				Columns: []*schema.Column{PointLogColumns[10]},
			},
			{
				Name:    "pointlog_order_id",
				Unique:  false,
				Columns: []*schema.Column{PointLogColumns[11]},
			},
			{
				Name:    "pointlog_type",
				Unique:  false,
				Columns: []*schema.Column{PointLogColumns[5]},
			},
		},
	}
	// ReserveColumns holds the columns for the "reserve" table.
	ReserveColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "预约状态", Default: 0},
		{Name: "type", Type: field.TypeString, Comment: "业务类型"},
		{Name: "cabinet_id", Type: field.TypeUint64, Comment: "电柜ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "business_id", Type: field.TypeUint64, Nullable: true},
	}
	// ReserveTable holds the schema information for the "reserve" table.
	ReserveTable = &schema.Table{
		Name:       "reserve",
		Columns:    ReserveColumns,
		PrimaryKey: []*schema.Column{ReserveColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "reserve_cabinet_cabinet",
				Columns:    []*schema.Column{ReserveColumns[9]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "reserve_rider_rider",
				Columns:    []*schema.Column{ReserveColumns[10]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "reserve_city_city",
				Columns:    []*schema.Column{ReserveColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "reserve_business_business",
				Columns:    []*schema.Column{ReserveColumns[12]},
				RefColumns: []*schema.Column{BusinessColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "reserve_created_at",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[1]},
			},
			{
				Name:    "reserve_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[3]},
			},
			{
				Name:    "reserve_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[9]},
			},
			{
				Name:    "reserve_rider_id",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[10]},
			},
			{
				Name:    "reserve_city_id",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[11]},
			},
			{
				Name:    "reserve_business_id",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[12]},
			},
			{
				Name:    "reserve_type",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[8]},
			},
			{
				Name:    "reserve_status",
				Unique:  false,
				Columns: []*schema.Column{ReserveColumns[7]},
			},
		},
	}
	// RiderColumns holds the columns for the "rider" table.
	RiderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "骑手姓名"},
		{Name: "id_card_number", Type: field.TypeString, Nullable: true, Comment: "身份证号"},
		{Name: "phone", Type: field.TypeString, Size: 11, Comment: "手机号"},
		{Name: "contact", Type: field.TypeJSON, Nullable: true, Comment: "紧急联系人"},
		{Name: "device_type", Type: field.TypeUint8, Nullable: true, Comment: "登录设备类型: 1iOS 2Android"},
		{Name: "last_device", Type: field.TypeString, Nullable: true, Size: 60, Comment: "最近登录设备"},
		{Name: "is_new_device", Type: field.TypeBool, Comment: "是否新设备", Default: false},
		{Name: "last_face", Type: field.TypeString, Nullable: true, Comment: "上次登录人脸"},
		{Name: "push_id", Type: field.TypeString, Nullable: true, Size: 60, Comment: "推送ID"},
		{Name: "last_signin_at", Type: field.TypeTime, Nullable: true, Comment: "最后登录时间"},
		{Name: "blocked", Type: field.TypeBool, Comment: "是否封禁骑手账号", Default: false},
		{Name: "points", Type: field.TypeInt64, Comment: "骑手积分", Default: 0},
		{Name: "exchange_limit", Type: field.TypeJSON, Nullable: true, Comment: "换电间隔配置"},
		{Name: "exchange_frequency", Type: field.TypeJSON, Nullable: true, Comment: "换电频次配置"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "所属企业"},
		{Name: "person_id", Type: field.TypeUint64, Nullable: true, Comment: "身份"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
	}
	// RiderTable holds the schema information for the "rider" table.
	RiderTable = &schema.Table{
		Name:       "rider",
		Columns:    RiderColumns,
		PrimaryKey: []*schema.Column{RiderColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rider_enterprise_riders",
				Columns:    []*schema.Column{RiderColumns[21]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "rider_person_rider",
				Columns:    []*schema.Column{RiderColumns[22]},
				RefColumns: []*schema.Column{PersonColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "rider_enterprise_station_station",
				Columns:    []*schema.Column{RiderColumns[23]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "rider_created_at",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[1]},
			},
			{
				Name:    "rider_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[3]},
			},
			{
				Name:    "rider_station_id",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[23]},
			},
			{
				Name:    "rider_phone",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "rider_name",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[7]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "rider_id_card_number",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[8]},
			},
			{
				Name:    "rider_person_id",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[22]},
			},
			{
				Name:    "rider_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[21]},
			},
			{
				Name:    "rider_last_device",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[12]},
			},
			{
				Name:    "rider_push_id",
				Unique:  false,
				Columns: []*schema.Column{RiderColumns[15]},
			},
		},
	}
	// RiderFollowUpColumns holds the columns for the "rider_follow_up" table.
	RiderFollowUpColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "manager_id", Type: field.TypeUint64, Comment: "管理人ID"},
	}
	// RiderFollowUpTable holds the schema information for the "rider_follow_up" table.
	RiderFollowUpTable = &schema.Table{
		Name:       "rider_follow_up",
		Columns:    RiderFollowUpColumns,
		PrimaryKey: []*schema.Column{RiderFollowUpColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rider_follow_up_rider_followups",
				Columns:    []*schema.Column{RiderFollowUpColumns[7]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "rider_follow_up_manager_manager",
				Columns:    []*schema.Column{RiderFollowUpColumns[8]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "riderfollowup_created_at",
				Unique:  false,
				Columns: []*schema.Column{RiderFollowUpColumns[1]},
			},
			{
				Name:    "riderfollowup_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{RiderFollowUpColumns[3]},
			},
			{
				Name:    "riderfollowup_manager_id",
				Unique:  false,
				Columns: []*schema.Column{RiderFollowUpColumns[8]},
			},
			{
				Name:    "riderfollowup_rider_id",
				Unique:  false,
				Columns: []*schema.Column{RiderFollowUpColumns[7]},
			},
		},
	}
	// RoleColumns holds the columns for the "role" table.
	RoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "角色"},
		{Name: "permissions", Type: field.TypeJSON, Nullable: true, Comment: "权限列表"},
		{Name: "buildin", Type: field.TypeBool, Comment: "是否内置角色", Default: false},
		{Name: "super", Type: field.TypeBool, Comment: "是否超级管理员", Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// RoleTable holds the schema information for the "role" table.
	RoleTable = &schema.Table{
		Name:       "role",
		Columns:    RoleColumns,
		PrimaryKey: []*schema.Column{RoleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "role_name",
				Unique:  false,
				Columns: []*schema.Column{RoleColumns[1]},
			},
			{
				Name:    "role_buildin",
				Unique:  false,
				Columns: []*schema.Column{RoleColumns[3]},
			},
		},
	}
	// SettingColumns holds the columns for the "setting" table.
	SettingColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "key", Type: field.TypeString, Unique: true, Size: 40, Comment: "设置项"},
		{Name: "desc", Type: field.TypeString, Comment: "描述"},
		{Name: "content", Type: field.TypeString, Comment: "值"},
	}
	// SettingTable holds the schema information for the "setting" table.
	SettingTable = &schema.Table{
		Name:       "setting",
		Columns:    SettingColumns,
		PrimaryKey: []*schema.Column{SettingColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "setting_created_at",
				Unique:  false,
				Columns: []*schema.Column{SettingColumns[1]},
			},
		},
	}
	// StockColumns holds the columns for the "stock" table.
	StockColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "sn", Type: field.TypeString, Comment: "调拨编号"},
		{Name: "type", Type: field.TypeUint8, Comment: "类型 0:调拨 1:领取电池 2:寄存电池 3:结束寄存 4:归还电池", Default: 0},
		{Name: "name", Type: field.TypeString, Comment: "物资名称"},
		{Name: "model", Type: field.TypeString, Nullable: true, Comment: "电池型号"},
		{Name: "num", Type: field.TypeInt, Comment: "物资数量: 正值调入 / 负值调出"},
		{Name: "material", Type: field.TypeEnum, Comment: "物资种类", Enums: []string{"battery", "ebike", "others"}},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "入库至 或 出库自 电柜ID"},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "操作店员ID"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "团签id"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "入库至 或 出库自     站点ID"},
		{Name: "rider_id", Type: field.TypeUint64, Nullable: true, Comment: "对应骑手ID"},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true, Comment: "城市ID"},
		{Name: "subscribe_id", Type: field.TypeUint64, Nullable: true},
		{Name: "ebike_id", Type: field.TypeUint64, Nullable: true},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
		{Name: "battery_id", Type: field.TypeUint64, Nullable: true},
		{Name: "stock_spouse", Type: field.TypeUint64, Unique: true, Nullable: true},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true, Comment: "父级"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "入库至 或 出库自 门店ID"},
	}
	// StockTable holds the schema information for the "stock" table.
	StockTable = &schema.Table{
		Name:       "stock",
		Columns:    StockColumns,
		PrimaryKey: []*schema.Column{StockColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "stock_cabinet_stocks",
				Columns:    []*schema.Column{StockColumns[13]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_employee_stocks",
				Columns:    []*schema.Column{StockColumns[14]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_enterprise_stocks",
				Columns:    []*schema.Column{StockColumns[15]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_enterprise_station_stocks",
				Columns:    []*schema.Column{StockColumns[16]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_rider_stocks",
				Columns:    []*schema.Column{StockColumns[17]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_city_city",
				Columns:    []*schema.Column{StockColumns[18]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_subscribe_subscribe",
				Columns:    []*schema.Column{StockColumns[19]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_ebike_ebike",
				Columns:    []*schema.Column{StockColumns[20]},
				RefColumns: []*schema.Column{EbikeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_ebike_brand_brand",
				Columns:    []*schema.Column{StockColumns[21]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_battery_battery",
				Columns:    []*schema.Column{StockColumns[22]},
				RefColumns: []*schema.Column{BatteryColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_stock_spouse",
				Columns:    []*schema.Column{StockColumns[23]},
				RefColumns: []*schema.Column{StockColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_stock_children",
				Columns:    []*schema.Column{StockColumns[24]},
				RefColumns: []*schema.Column{StockColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "stock_store_stocks",
				Columns:    []*schema.Column{StockColumns[25]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "stock_created_at",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[1]},
			},
			{
				Name:    "stock_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[3]},
			},
			{
				Name:    "stock_creator",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[4]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "stock_city_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[18]},
			},
			{
				Name:    "stock_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[19]},
			},
			{
				Name:    "stock_ebike_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[20]},
			},
			{
				Name:    "stock_brand_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[21]},
			},
			{
				Name:    "stock_battery_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[22]},
			},
			{
				Name:    "stock_store_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[25]},
			},
			{
				Name:    "stock_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[13]},
			},
			{
				Name:    "stock_rider_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[17]},
			},
			{
				Name:    "stock_employee_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[14]},
			},
			{
				Name:    "stock_model",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[10]},
			},
			{
				Name:    "stock_sn",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[7]},
			},
			{
				Name:    "stock_parent_id",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[24]},
			},
			{
				Name:    "stock_name",
				Unique:  false,
				Columns: []*schema.Column{StockColumns[9]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// StoreColumns holds the columns for the "store" table.
	StoreColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "sn", Type: field.TypeString, Unique: true, Comment: "门店编号"},
		{Name: "name", Type: field.TypeString, Comment: "门店名称"},
		{Name: "status", Type: field.TypeUint8, Comment: "门店状态 0维护 1营业 2休息 3隐藏", Default: 0},
		{Name: "lng", Type: field.TypeFloat64, Comment: "经度"},
		{Name: "lat", Type: field.TypeFloat64, Comment: "纬度"},
		{Name: "address", Type: field.TypeString, Comment: "详细地址"},
		{Name: "ebike_obtain", Type: field.TypeBool, Comment: "是否可以领取车辆", Default: false},
		{Name: "ebike_repair", Type: field.TypeBool, Comment: "是否可以维修车辆", Default: false},
		{Name: "branch_id", Type: field.TypeUint64, Comment: "网点ID"},
		{Name: "employee_id", Type: field.TypeUint64, Unique: true, Nullable: true, Comment: "上班员工ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
	}
	// StoreTable holds the schema information for the "store" table.
	StoreTable = &schema.Table{
		Name:       "store",
		Columns:    StoreColumns,
		PrimaryKey: []*schema.Column{StoreColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "store_branch_stores",
				Columns:    []*schema.Column{StoreColumns[15]},
				RefColumns: []*schema.Column{BranchColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "store_employee_store",
				Columns:    []*schema.Column{StoreColumns[16]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "store_city_city",
				Columns:    []*schema.Column{StoreColumns[17]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "store_created_at",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[1]},
			},
			{
				Name:    "store_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[3]},
			},
			{
				Name:    "store_city_id",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[17]},
			},
			{
				Name:    "store_branch_id",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[15]},
			},
			{
				Name:    "store_employee_id",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[16]},
			},
			{
				Name:    "store_status",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[9]},
			},
			{
				Name:    "store_name",
				Unique:  false,
				Columns: []*schema.Column{StoreColumns[8]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// SubscribeColumns holds the columns for the "subscribe" table.
	SubscribeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "status", Type: field.TypeUint8, Comment: "当前订阅状态", Default: 0},
		{Name: "type", Type: field.TypeUint, Comment: "订阅类型 0团签 1新签 2续签 3重签 4更改电池, 除0值外 其他值参考order.type", Default: 0},
		{Name: "model", Type: field.TypeString, Comment: "电池型号"},
		{Name: "initial_days", Type: field.TypeInt, Nullable: true, Comment: "初始骑士卡天数, 个签和代理模式团签有此字段"},
		{Name: "alter_days", Type: field.TypeInt, Comment: "改动天数", Default: 0},
		{Name: "pause_days", Type: field.TypeInt, Comment: "寄存天数", Default: 0},
		{Name: "suspend_days", Type: field.TypeInt, Comment: "暂停天数", Default: 0},
		{Name: "renewal_days", Type: field.TypeInt, Comment: "续期天数", Default: 0},
		{Name: "overdue_days", Type: field.TypeInt, Comment: "已缴纳逾期滞纳金天数", Default: 0},
		{Name: "remaining", Type: field.TypeInt, Comment: "剩余天数, 负数为逾期, 代理商骑手剩余时间根据agent_end_at计算", Default: 0},
		{Name: "paused_at", Type: field.TypeTime, Nullable: true, Comment: "当前寄存时间"},
		{Name: "suspend_at", Type: field.TypeTime, Nullable: true, Comment: "当前暂停时间"},
		{Name: "start_at", Type: field.TypeTime, Nullable: true, Comment: "激活时间"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "归还/团签结束时间"},
		{Name: "refund_at", Type: field.TypeTime, Nullable: true, Comment: "退款时间"},
		{Name: "unsubscribe_reason", Type: field.TypeString, Nullable: true, Comment: "退租理由"},
		{Name: "last_bill_date", Type: field.TypeTime, Nullable: true, Comment: "上次结算日期(包含该日期)"},
		{Name: "pause_overdue", Type: field.TypeBool, Comment: "是否超期退租", Default: false},
		{Name: "agent_end_at", Type: field.TypeTime, Nullable: true, Comment: "代理商处到期日期"},
		{Name: "formula", Type: field.TypeString, Nullable: true, Comment: "计算公式"},
		{Name: "need_contract", Type: field.TypeBool, Comment: "是否需要签约", Default: false},
		{Name: "intelligent", Type: field.TypeBool, Comment: "是否智能柜套餐", Default: false},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "企业ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "plan_id", Type: field.TypeUint64, Nullable: true},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "station_id", Type: field.TypeUint64, Nullable: true, Comment: "站点ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "brand_id", Type: field.TypeUint64, Nullable: true},
		{Name: "ebike_id", Type: field.TypeUint64, Nullable: true},
		{Name: "initial_order_id", Type: field.TypeUint64, Nullable: true, Comment: "初始订单ID(开通订阅的初始订单), 团签用户无此字段"},
	}
	// SubscribeTable holds the schema information for the "subscribe" table.
	SubscribeTable = &schema.Table{
		Name:       "subscribe",
		Columns:    SubscribeColumns,
		PrimaryKey: []*schema.Column{SubscribeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_enterprise_subscribes",
				Columns:    []*schema.Column{SubscribeColumns[29]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_rider_subscribes",
				Columns:    []*schema.Column{SubscribeColumns[30]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_plan_plan",
				Columns:    []*schema.Column{SubscribeColumns[31]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_employee_employee",
				Columns:    []*schema.Column{SubscribeColumns[32]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_city_city",
				Columns:    []*schema.Column{SubscribeColumns[33]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_enterprise_station_station",
				Columns:    []*schema.Column{SubscribeColumns[34]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_store_store",
				Columns:    []*schema.Column{SubscribeColumns[35]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_cabinet_cabinet",
				Columns:    []*schema.Column{SubscribeColumns[36]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_ebike_brand_brand",
				Columns:    []*schema.Column{SubscribeColumns[37]},
				RefColumns: []*schema.Column{EbikeBrandColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_ebike_ebike",
				Columns:    []*schema.Column{SubscribeColumns[38]},
				RefColumns: []*schema.Column{EbikeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_order_initial_order",
				Columns:    []*schema.Column{SubscribeColumns[39]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribe_created_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[1]},
			},
			{
				Name:    "subscribe_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[3]},
			},
			{
				Name:    "subscribe_plan_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[31]},
			},
			{
				Name:    "subscribe_employee_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[32]},
			},
			{
				Name:    "subscribe_city_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[33]},
			},
			{
				Name:    "subscribe_station_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[34]},
			},
			{
				Name:    "subscribe_store_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[35]},
			},
			{
				Name:    "subscribe_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[36]},
			},
			{
				Name:    "subscribe_brand_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[37]},
			},
			{
				Name:    "subscribe_ebike_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[38]},
			},
			{
				Name:    "subscribe_rider_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[30]},
			},
			{
				Name:    "subscribe_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[29]},
			},
			{
				Name:    "subscribe_paused_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[17]},
			},
			{
				Name:    "subscribe_last_bill_date",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[23]},
			},
			{
				Name:    "subscribe_start_at_end_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeColumns[19], SubscribeColumns[20]},
			},
		},
	}
	// SubscribeAlterColumns holds the columns for the "subscribe_alter" table.
	SubscribeAlterColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "days", Type: field.TypeInt, Comment: "更改天数"},
		{Name: "status", Type: field.TypeInt, Comment: "状态", Default: 0},
		{Name: "subscribe_id", Type: field.TypeUint64, Comment: "订阅ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "manager_id", Type: field.TypeUint64, Nullable: true, Comment: "管理人ID"},
		{Name: "enterprise_id", Type: field.TypeUint64, Nullable: true, Comment: "企业ID"},
		{Name: "agent_id", Type: field.TypeUint64, Nullable: true},
	}
	// SubscribeAlterTable holds the schema information for the "subscribe_alter" table.
	SubscribeAlterTable = &schema.Table{
		Name:       "subscribe_alter",
		Columns:    SubscribeAlterColumns,
		PrimaryKey: []*schema.Column{SubscribeAlterColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_alter_subscribe_alters",
				Columns:    []*schema.Column{SubscribeAlterColumns[9]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_alter_rider_rider",
				Columns:    []*schema.Column{SubscribeAlterColumns[10]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_alter_manager_manager",
				Columns:    []*schema.Column{SubscribeAlterColumns[11]},
				RefColumns: []*schema.Column{ManagerColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_alter_enterprise_enterprise",
				Columns:    []*schema.Column{SubscribeAlterColumns[12]},
				RefColumns: []*schema.Column{EnterpriseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_alter_agent_agent",
				Columns:    []*schema.Column{SubscribeAlterColumns[13]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribealter_created_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[1]},
			},
			{
				Name:    "subscribealter_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[3]},
			},
			{
				Name:    "subscribealter_rider_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[10]},
			},
			{
				Name:    "subscribealter_manager_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[11]},
			},
			{
				Name:    "subscribealter_enterprise_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[12]},
			},
			{
				Name:    "subscribealter_agent_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[13]},
			},
			{
				Name:    "subscribealter_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeAlterColumns[9]},
			},
		},
	}
	// SubscribePauseColumns holds the columns for the "subscribe_pause" table.
	SubscribePauseColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "start_at", Type: field.TypeTime, Comment: "寄存开始时间"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "寄存结束时间"},
		{Name: "days", Type: field.TypeInt, Nullable: true, Comment: "寄存天数 = 天数差 - 重复天数"},
		{Name: "overdue_days", Type: field.TypeInt, Comment: "超期天数", Default: 0},
		{Name: "end_modifier", Type: field.TypeJSON, Nullable: true, Comment: "结束寄存管理员信息"},
		{Name: "pause_overdue", Type: field.TypeBool, Comment: "是否超期退租", Default: false},
		{Name: "suspend_days", Type: field.TypeInt, Comment: "重复天数, 寄存过程中暂停扣费天数", Default: 0},
		{Name: "subscribe_id", Type: field.TypeUint64, Comment: "订阅ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
		{Name: "employee_id", Type: field.TypeUint64, Nullable: true, Comment: "店员ID"},
		{Name: "city_id", Type: field.TypeUint64, Nullable: true, Comment: "城市ID"},
		{Name: "store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "end_store_id", Type: field.TypeUint64, Nullable: true, Comment: "门店ID"},
		{Name: "cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "end_cabinet_id", Type: field.TypeUint64, Nullable: true, Comment: "电柜ID"},
		{Name: "end_employee_id", Type: field.TypeUint64, Nullable: true, Comment: "结束寄存店员ID"},
	}
	// SubscribePauseTable holds the schema information for the "subscribe_pause" table.
	SubscribePauseTable = &schema.Table{
		Name:       "subscribe_pause",
		Columns:    SubscribePauseColumns,
		PrimaryKey: []*schema.Column{SubscribePauseColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_pause_subscribe_pauses",
				Columns:    []*schema.Column{SubscribePauseColumns[14]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_pause_rider_rider",
				Columns:    []*schema.Column{SubscribePauseColumns[15]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_pause_employee_employee",
				Columns:    []*schema.Column{SubscribePauseColumns[16]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_city_city",
				Columns:    []*schema.Column{SubscribePauseColumns[17]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_store_store",
				Columns:    []*schema.Column{SubscribePauseColumns[18]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_store_endStore",
				Columns:    []*schema.Column{SubscribePauseColumns[19]},
				RefColumns: []*schema.Column{StoreColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_cabinet_cabinet",
				Columns:    []*schema.Column{SubscribePauseColumns[20]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_cabinet_endCabinet",
				Columns:    []*schema.Column{SubscribePauseColumns[21]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_pause_employee_end_employee",
				Columns:    []*schema.Column{SubscribePauseColumns[22]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribepause_created_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[1]},
			},
			{
				Name:    "subscribepause_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[3]},
			},
			{
				Name:    "subscribepause_creator",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[4]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "subscribepause_rider_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[15]},
			},
			{
				Name:    "subscribepause_employee_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[16]},
			},
			{
				Name:    "subscribepause_city_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[17]},
			},
			{
				Name:    "subscribepause_store_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[18]},
			},
			{
				Name:    "subscribepause_end_store_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[19]},
			},
			{
				Name:    "subscribepause_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[20]},
			},
			{
				Name:    "subscribepause_end_cabinet_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[21]},
			},
			{
				Name:    "subscribepause_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[14]},
			},
			{
				Name:    "subscribepause_end_modifier",
				Unique:  false,
				Columns: []*schema.Column{SubscribePauseColumns[11]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// SubscribeReminderColumns holds the columns for the "subscribe_reminder" table.
	SubscribeReminderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "type", Type: field.TypeEnum, Comment: "催费类型", Enums: []string{"sms", "vms"}},
		{Name: "phone", Type: field.TypeString, Comment: "电话"},
		{Name: "name", Type: field.TypeString, Comment: "姓名"},
		{Name: "success", Type: field.TypeBool, Comment: "是否成功"},
		{Name: "days", Type: field.TypeInt, Comment: "剩余天数"},
		{Name: "plan_name", Type: field.TypeString, Comment: "套餐名称"},
		{Name: "date", Type: field.TypeString, Comment: "发送日期"},
		{Name: "fee", Type: field.TypeFloat64, Comment: "逾期费用", Default: 0},
		{Name: "fee_formula", Type: field.TypeString, Nullable: true, Comment: "逾期费用计算公式"},
		{Name: "subscribe_id", Type: field.TypeUint64},
		{Name: "plan_id", Type: field.TypeUint64},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
	}
	// SubscribeReminderTable holds the schema information for the "subscribe_reminder" table.
	SubscribeReminderTable = &schema.Table{
		Name:       "subscribe_reminder",
		Columns:    SubscribeReminderColumns,
		PrimaryKey: []*schema.Column{SubscribeReminderColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_reminder_subscribe_subscribe",
				Columns:    []*schema.Column{SubscribeReminderColumns[12]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_reminder_plan_plan",
				Columns:    []*schema.Column{SubscribeReminderColumns[13]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_reminder_rider_rider",
				Columns:    []*schema.Column{SubscribeReminderColumns[14]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribereminder_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[12]},
			},
			{
				Name:    "subscribereminder_plan_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[13]},
			},
			{
				Name:    "subscribereminder_rider_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[14]},
			},
			{
				Name:    "subscribereminder_type",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[3]},
			},
			{
				Name:    "subscribereminder_date",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[9]},
			},
			{
				Name:    "subscribereminder_name",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[5]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
			{
				Name:    "subscribereminder_phone",
				Unique:  false,
				Columns: []*schema.Column{SubscribeReminderColumns[4]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "gin_trgm_ops",
					Types: map[string]string{
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// SubscribeSuspendColumns holds the columns for the "subscribe_suspend" table.
	SubscribeSuspendColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "creator", Type: field.TypeJSON, Nullable: true, Comment: "创建人"},
		{Name: "last_modifier", Type: field.TypeJSON, Nullable: true, Comment: "最后修改人"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "管理员改动原因/备注"},
		{Name: "days", Type: field.TypeInt, Comment: "暂停天数", Default: 0},
		{Name: "start_at", Type: field.TypeTime, Comment: "开始时间"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "结束时间"},
		{Name: "end_reason", Type: field.TypeString, Nullable: true, Comment: "结束理由"},
		{Name: "end_modifier", Type: field.TypeJSON, Nullable: true, Comment: "继续计费管理员信息"},
		{Name: "subscribe_id", Type: field.TypeUint64, Comment: "订阅ID"},
		{Name: "pause_id", Type: field.TypeUint64, Nullable: true, Comment: "寄存ID"},
		{Name: "city_id", Type: field.TypeUint64, Comment: "城市ID"},
		{Name: "rider_id", Type: field.TypeUint64, Comment: "骑手ID"},
	}
	// SubscribeSuspendTable holds the schema information for the "subscribe_suspend" table.
	SubscribeSuspendTable = &schema.Table{
		Name:       "subscribe_suspend",
		Columns:    SubscribeSuspendColumns,
		PrimaryKey: []*schema.Column{SubscribeSuspendColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscribe_suspend_subscribe_suspends",
				Columns:    []*schema.Column{SubscribeSuspendColumns[9]},
				RefColumns: []*schema.Column{SubscribeColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_suspend_subscribe_pause_suspends",
				Columns:    []*schema.Column{SubscribeSuspendColumns[10]},
				RefColumns: []*schema.Column{SubscribePauseColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "subscribe_suspend_city_city",
				Columns:    []*schema.Column{SubscribeSuspendColumns[11]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "subscribe_suspend_rider_rider",
				Columns:    []*schema.Column{SubscribeSuspendColumns[12]},
				RefColumns: []*schema.Column{RiderColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "subscribesuspend_city_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeSuspendColumns[11]},
			},
			{
				Name:    "subscribesuspend_rider_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeSuspendColumns[12]},
			},
			{
				Name:    "subscribesuspend_subscribe_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeSuspendColumns[9]},
			},
			{
				Name:    "subscribesuspend_pause_id",
				Unique:  false,
				Columns: []*schema.Column{SubscribeSuspendColumns[10]},
			},
		},
	}
	// AgentStationsColumns holds the columns for the "agent_stations" table.
	AgentStationsColumns = []*schema.Column{
		{Name: "agent_id", Type: field.TypeInt},
		{Name: "enterprise_station_id", Type: field.TypeInt},
	}
	// AgentStationsTable holds the schema information for the "agent_stations" table.
	AgentStationsTable = &schema.Table{
		Name:       "agent_stations",
		Columns:    AgentStationsColumns,
		PrimaryKey: []*schema.Column{AgentStationsColumns[0], AgentStationsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "agent_stations_agent_id",
				Columns:    []*schema.Column{AgentStationsColumns[0]},
				RefColumns: []*schema.Column{AgentColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "agent_stations_enterprise_station_id",
				Columns:    []*schema.Column{AgentStationsColumns[1]},
				RefColumns: []*schema.Column{EnterpriseStationColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CabinetModelsColumns holds the columns for the "cabinet_models" table.
	CabinetModelsColumns = []*schema.Column{
		{Name: "cabinet_id", Type: field.TypeInt},
		{Name: "battery_model_id", Type: field.TypeInt},
	}
	// CabinetModelsTable holds the schema information for the "cabinet_models" table.
	CabinetModelsTable = &schema.Table{
		Name:       "cabinet_models",
		Columns:    CabinetModelsColumns,
		PrimaryKey: []*schema.Column{CabinetModelsColumns[0], CabinetModelsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cabinet_models_cabinet_id",
				Columns:    []*schema.Column{CabinetModelsColumns[0]},
				RefColumns: []*schema.Column{CabinetColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "cabinet_models_battery_model_id",
				Columns:    []*schema.Column{CabinetModelsColumns[1]},
				RefColumns: []*schema.Column{BatteryModelColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PlanCitiesColumns holds the columns for the "plan_cities" table.
	PlanCitiesColumns = []*schema.Column{
		{Name: "plan_id", Type: field.TypeInt},
		{Name: "city_id", Type: field.TypeUint64},
	}
	// PlanCitiesTable holds the schema information for the "plan_cities" table.
	PlanCitiesTable = &schema.Table{
		Name:       "plan_cities",
		Columns:    PlanCitiesColumns,
		PrimaryKey: []*schema.Column{PlanCitiesColumns[0], PlanCitiesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plan_cities_plan_id",
				Columns:    []*schema.Column{PlanCitiesColumns[0]},
				RefColumns: []*schema.Column{PlanColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "plan_cities_city_id",
				Columns:    []*schema.Column{PlanCitiesColumns[1]},
				RefColumns: []*schema.Column{CityColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AgentTable,
		AllocateTable,
		AssistanceTable,
		AttendanceTable,
		BatteryTable,
		BatteryFlowTable,
		BatteryModelTable,
		BranchTable,
		BranchContractTable,
		BusinessTable,
		CabinetTable,
		CabinetFaultTable,
		CityTable,
		CommissionTable,
		ContractTable,
		CouponTable,
		CouponAssemblyTable,
		CouponTemplateTable,
		EbikeTable,
		EbikeBrandTable,
		EmployeeTable,
		EnterpriseTable,
		EnterpriseBillTable,
		EnterpriseContractTable,
		EnterprisePrepaymentTable,
		EnterprisePriceTable,
		EnterpriseStatementTable,
		EnterpriseStationTable,
		ExceptionTable,
		ExchangeTable,
		ExportTable,
		FeedbackTable,
		InventoryTable,
		ManagerTable,
		OrderTable,
		OrderRefundTable,
		PersonTable,
		PlanTable,
		PlanIntroduceTable,
		PointLogTable,
		ReserveTable,
		RiderTable,
		RiderFollowUpTable,
		RoleTable,
		SettingTable,
		StockTable,
		StoreTable,
		SubscribeTable,
		SubscribeAlterTable,
		SubscribePauseTable,
		SubscribeReminderTable,
		SubscribeSuspendTable,
		AgentStationsTable,
		CabinetModelsTable,
		PlanCitiesTable,
	}
)

func init() {
	AgentTable.ForeignKeys[0].RefTable = EnterpriseTable
	AgentTable.ForeignKeys[1].RefTable = EnterpriseTable
	AgentTable.Annotation = &entsql.Annotation{
		Table: "agent",
	}
	AllocateTable.ForeignKeys[0].RefTable = RiderTable
	AllocateTable.ForeignKeys[1].RefTable = SubscribeTable
	AllocateTable.ForeignKeys[2].RefTable = EmployeeTable
	AllocateTable.ForeignKeys[3].RefTable = CabinetTable
	AllocateTable.ForeignKeys[4].RefTable = StoreTable
	AllocateTable.ForeignKeys[5].RefTable = EbikeTable
	AllocateTable.ForeignKeys[6].RefTable = EbikeBrandTable
	AllocateTable.Annotation = &entsql.Annotation{
		Table: "allocate",
	}
	AssistanceTable.ForeignKeys[0].RefTable = StoreTable
	AssistanceTable.ForeignKeys[1].RefTable = RiderTable
	AssistanceTable.ForeignKeys[2].RefTable = SubscribeTable
	AssistanceTable.ForeignKeys[3].RefTable = CityTable
	AssistanceTable.ForeignKeys[4].RefTable = EmployeeTable
	AssistanceTable.ForeignKeys[5].RefTable = OrderTable
	AssistanceTable.Annotation = &entsql.Annotation{
		Table: "assistance",
	}
	AttendanceTable.ForeignKeys[0].RefTable = EmployeeTable
	AttendanceTable.ForeignKeys[1].RefTable = StoreTable
	AttendanceTable.Annotation = &entsql.Annotation{
		Table: "attendance",
	}
	BatteryTable.ForeignKeys[0].RefTable = CityTable
	BatteryTable.ForeignKeys[1].RefTable = CabinetTable
	BatteryTable.ForeignKeys[2].RefTable = EnterpriseTable
	BatteryTable.ForeignKeys[3].RefTable = EnterpriseStationTable
	BatteryTable.ForeignKeys[4].RefTable = RiderTable
	BatteryTable.ForeignKeys[5].RefTable = SubscribeTable
	BatteryTable.Annotation = &entsql.Annotation{
		Table: "battery",
	}
	BatteryFlowTable.ForeignKeys[0].RefTable = BatteryTable
	BatteryFlowTable.ForeignKeys[1].RefTable = SubscribeTable
	BatteryFlowTable.ForeignKeys[2].RefTable = CabinetTable
	BatteryFlowTable.ForeignKeys[3].RefTable = RiderTable
	BatteryFlowTable.Annotation = &entsql.Annotation{
		Table: "battery_flow",
	}
	BatteryModelTable.Annotation = &entsql.Annotation{
		Table: "battery_model",
	}
	BranchTable.ForeignKeys[0].RefTable = CityTable
	BranchTable.Annotation = &entsql.Annotation{
		Table: "branch",
	}
	BranchContractTable.ForeignKeys[0].RefTable = BranchTable
	BranchContractTable.Annotation = &entsql.Annotation{
		Table: "branch_contract",
	}
	BusinessTable.ForeignKeys[0].RefTable = RiderTable
	BusinessTable.ForeignKeys[1].RefTable = CityTable
	BusinessTable.ForeignKeys[2].RefTable = SubscribeTable
	BusinessTable.ForeignKeys[3].RefTable = EmployeeTable
	BusinessTable.ForeignKeys[4].RefTable = StoreTable
	BusinessTable.ForeignKeys[5].RefTable = PlanTable
	BusinessTable.ForeignKeys[6].RefTable = EnterpriseTable
	BusinessTable.ForeignKeys[7].RefTable = EnterpriseStationTable
	BusinessTable.ForeignKeys[8].RefTable = CabinetTable
	BusinessTable.ForeignKeys[9].RefTable = BatteryTable
	BusinessTable.Annotation = &entsql.Annotation{
		Table: "business",
	}
	CabinetTable.ForeignKeys[0].RefTable = BranchTable
	CabinetTable.ForeignKeys[1].RefTable = CityTable
	CabinetTable.ForeignKeys[2].RefTable = EnterpriseTable
	CabinetTable.ForeignKeys[3].RefTable = EnterpriseStationTable
	CabinetTable.Annotation = &entsql.Annotation{
		Table: "cabinet",
	}
	CabinetFaultTable.ForeignKeys[0].RefTable = BranchTable
	CabinetFaultTable.ForeignKeys[1].RefTable = CabinetTable
	CabinetFaultTable.ForeignKeys[2].RefTable = CityTable
	CabinetFaultTable.ForeignKeys[3].RefTable = RiderTable
	CabinetFaultTable.Annotation = &entsql.Annotation{
		Table: "cabinet_fault",
	}
	CityTable.ForeignKeys[0].RefTable = CityTable
	CityTable.Annotation = &entsql.Annotation{
		Table: "city",
	}
	CommissionTable.ForeignKeys[0].RefTable = BusinessTable
	CommissionTable.ForeignKeys[1].RefTable = SubscribeTable
	CommissionTable.ForeignKeys[2].RefTable = PlanTable
	CommissionTable.ForeignKeys[3].RefTable = RiderTable
	CommissionTable.ForeignKeys[4].RefTable = EmployeeTable
	CommissionTable.ForeignKeys[5].RefTable = OrderTable
	CommissionTable.Annotation = &entsql.Annotation{
		Table: "commission",
	}
	ContractTable.ForeignKeys[0].RefTable = AllocateTable
	ContractTable.ForeignKeys[1].RefTable = SubscribeTable
	ContractTable.ForeignKeys[2].RefTable = EmployeeTable
	ContractTable.ForeignKeys[3].RefTable = RiderTable
	ContractTable.Annotation = &entsql.Annotation{
		Table: "contract",
	}
	CouponTable.ForeignKeys[0].RefTable = RiderTable
	CouponTable.ForeignKeys[1].RefTable = CouponAssemblyTable
	CouponTable.ForeignKeys[2].RefTable = PlanTable
	CouponTable.ForeignKeys[3].RefTable = CouponTemplateTable
	CouponTable.ForeignKeys[4].RefTable = OrderTable
	CouponTable.Annotation = &entsql.Annotation{
		Table: "coupon",
	}
	CouponAssemblyTable.ForeignKeys[0].RefTable = CouponTemplateTable
	CouponAssemblyTable.Annotation = &entsql.Annotation{
		Table: "coupon_assembly",
	}
	CouponTemplateTable.Annotation = &entsql.Annotation{
		Table: "coupon_template",
	}
	EbikeTable.ForeignKeys[0].RefTable = EbikeBrandTable
	EbikeTable.ForeignKeys[1].RefTable = RiderTable
	EbikeTable.ForeignKeys[2].RefTable = StoreTable
	EbikeTable.Annotation = &entsql.Annotation{
		Table: "ebike",
	}
	EbikeBrandTable.Annotation = &entsql.Annotation{
		Table: "ebike_brand",
	}
	EmployeeTable.ForeignKeys[0].RefTable = CityTable
	EmployeeTable.Annotation = &entsql.Annotation{
		Table: "employee",
	}
	EnterpriseTable.ForeignKeys[0].RefTable = CityTable
	EnterpriseTable.Annotation = &entsql.Annotation{
		Table: "enterprise",
	}
	EnterpriseBillTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseBillTable.ForeignKeys[1].RefTable = RiderTable
	EnterpriseBillTable.ForeignKeys[2].RefTable = CityTable
	EnterpriseBillTable.ForeignKeys[3].RefTable = EnterpriseStationTable
	EnterpriseBillTable.ForeignKeys[4].RefTable = EnterpriseStatementTable
	EnterpriseBillTable.ForeignKeys[5].RefTable = SubscribeTable
	EnterpriseBillTable.Annotation = &entsql.Annotation{
		Table: "enterprise_bill",
	}
	EnterpriseContractTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseContractTable.Annotation = &entsql.Annotation{
		Table: "enterprise_contract",
	}
	EnterprisePrepaymentTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterprisePrepaymentTable.Annotation = &entsql.Annotation{
		Table: "enterprise_prepayment",
	}
	EnterprisePriceTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterprisePriceTable.ForeignKeys[1].RefTable = CityTable
	EnterprisePriceTable.Annotation = &entsql.Annotation{
		Table: "enterprise_price",
	}
	EnterpriseStatementTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseStatementTable.Annotation = &entsql.Annotation{
		Table: "enterprise_statement",
	}
	EnterpriseStationTable.ForeignKeys[0].RefTable = EnterpriseTable
	EnterpriseStationTable.Annotation = &entsql.Annotation{
		Table: "enterprise_station",
	}
	ExceptionTable.ForeignKeys[0].RefTable = CityTable
	ExceptionTable.ForeignKeys[1].RefTable = EmployeeTable
	ExceptionTable.ForeignKeys[2].RefTable = StoreTable
	ExceptionTable.Annotation = &entsql.Annotation{
		Table: "exception",
	}
	ExchangeTable.ForeignKeys[0].RefTable = CabinetTable
	ExchangeTable.ForeignKeys[1].RefTable = EmployeeTable
	ExchangeTable.ForeignKeys[2].RefTable = SubscribeTable
	ExchangeTable.ForeignKeys[3].RefTable = CityTable
	ExchangeTable.ForeignKeys[4].RefTable = StoreTable
	ExchangeTable.ForeignKeys[5].RefTable = EnterpriseTable
	ExchangeTable.ForeignKeys[6].RefTable = EnterpriseStationTable
	ExchangeTable.ForeignKeys[7].RefTable = RiderTable
	ExchangeTable.Annotation = &entsql.Annotation{
		Table: "exchange",
	}
	ExportTable.ForeignKeys[0].RefTable = ManagerTable
	ExportTable.Annotation = &entsql.Annotation{
		Table: "export",
	}
	FeedbackTable.ForeignKeys[0].RefTable = EnterpriseTable
	FeedbackTable.Annotation = &entsql.Annotation{
		Table: "feedback",
	}
	InventoryTable.Annotation = &entsql.Annotation{
		Table: "inventory",
	}
	ManagerTable.ForeignKeys[0].RefTable = RoleTable
	ManagerTable.Annotation = &entsql.Annotation{
		Table: "manager",
	}
	OrderTable.ForeignKeys[0].RefTable = PlanTable
	OrderTable.ForeignKeys[1].RefTable = CityTable
	OrderTable.ForeignKeys[2].RefTable = EbikeBrandTable
	OrderTable.ForeignKeys[3].RefTable = EbikeTable
	OrderTable.ForeignKeys[4].RefTable = OrderTable
	OrderTable.ForeignKeys[5].RefTable = RiderTable
	OrderTable.ForeignKeys[6].RefTable = SubscribeTable
	OrderTable.Annotation = &entsql.Annotation{
		Table: "order",
	}
	OrderRefundTable.ForeignKeys[0].RefTable = OrderTable
	OrderRefundTable.Annotation = &entsql.Annotation{
		Table: "order_refund",
	}
	PersonTable.Annotation = &entsql.Annotation{
		Table: "person",
	}
	PlanTable.ForeignKeys[0].RefTable = EbikeBrandTable
	PlanTable.ForeignKeys[1].RefTable = PlanTable
	PlanTable.Annotation = &entsql.Annotation{
		Table: "plan",
	}
	PlanIntroduceTable.ForeignKeys[0].RefTable = EbikeBrandTable
	PlanIntroduceTable.Annotation = &entsql.Annotation{
		Table: "plan_introduce",
	}
	PointLogTable.ForeignKeys[0].RefTable = RiderTable
	PointLogTable.ForeignKeys[1].RefTable = OrderTable
	PointLogTable.Annotation = &entsql.Annotation{
		Table: "point_log",
	}
	ReserveTable.ForeignKeys[0].RefTable = CabinetTable
	ReserveTable.ForeignKeys[1].RefTable = RiderTable
	ReserveTable.ForeignKeys[2].RefTable = CityTable
	ReserveTable.ForeignKeys[3].RefTable = BusinessTable
	ReserveTable.Annotation = &entsql.Annotation{
		Table: "reserve",
	}
	RiderTable.ForeignKeys[0].RefTable = EnterpriseTable
	RiderTable.ForeignKeys[1].RefTable = PersonTable
	RiderTable.ForeignKeys[2].RefTable = EnterpriseStationTable
	RiderTable.Annotation = &entsql.Annotation{
		Table: "rider",
	}
	RiderFollowUpTable.ForeignKeys[0].RefTable = RiderTable
	RiderFollowUpTable.ForeignKeys[1].RefTable = ManagerTable
	RiderFollowUpTable.Annotation = &entsql.Annotation{
		Table: "rider_follow_up",
	}
	RoleTable.Annotation = &entsql.Annotation{
		Table: "role",
	}
	SettingTable.Annotation = &entsql.Annotation{
		Table: "setting",
	}
	StockTable.ForeignKeys[0].RefTable = CabinetTable
	StockTable.ForeignKeys[1].RefTable = EmployeeTable
	StockTable.ForeignKeys[2].RefTable = EnterpriseTable
	StockTable.ForeignKeys[3].RefTable = EnterpriseStationTable
	StockTable.ForeignKeys[4].RefTable = RiderTable
	StockTable.ForeignKeys[5].RefTable = CityTable
	StockTable.ForeignKeys[6].RefTable = SubscribeTable
	StockTable.ForeignKeys[7].RefTable = EbikeTable
	StockTable.ForeignKeys[8].RefTable = EbikeBrandTable
	StockTable.ForeignKeys[9].RefTable = BatteryTable
	StockTable.ForeignKeys[10].RefTable = StockTable
	StockTable.ForeignKeys[11].RefTable = StockTable
	StockTable.ForeignKeys[12].RefTable = StoreTable
	StockTable.Annotation = &entsql.Annotation{
		Table: "stock",
	}
	StoreTable.ForeignKeys[0].RefTable = BranchTable
	StoreTable.ForeignKeys[1].RefTable = EmployeeTable
	StoreTable.ForeignKeys[2].RefTable = CityTable
	StoreTable.Annotation = &entsql.Annotation{
		Table: "store",
	}
	SubscribeTable.ForeignKeys[0].RefTable = EnterpriseTable
	SubscribeTable.ForeignKeys[1].RefTable = RiderTable
	SubscribeTable.ForeignKeys[2].RefTable = PlanTable
	SubscribeTable.ForeignKeys[3].RefTable = EmployeeTable
	SubscribeTable.ForeignKeys[4].RefTable = CityTable
	SubscribeTable.ForeignKeys[5].RefTable = EnterpriseStationTable
	SubscribeTable.ForeignKeys[6].RefTable = StoreTable
	SubscribeTable.ForeignKeys[7].RefTable = CabinetTable
	SubscribeTable.ForeignKeys[8].RefTable = EbikeBrandTable
	SubscribeTable.ForeignKeys[9].RefTable = EbikeTable
	SubscribeTable.ForeignKeys[10].RefTable = OrderTable
	SubscribeTable.Annotation = &entsql.Annotation{
		Table: "subscribe",
	}
	SubscribeAlterTable.ForeignKeys[0].RefTable = SubscribeTable
	SubscribeAlterTable.ForeignKeys[1].RefTable = RiderTable
	SubscribeAlterTable.ForeignKeys[2].RefTable = ManagerTable
	SubscribeAlterTable.ForeignKeys[3].RefTable = EnterpriseTable
	SubscribeAlterTable.ForeignKeys[4].RefTable = AgentTable
	SubscribeAlterTable.Annotation = &entsql.Annotation{
		Table: "subscribe_alter",
	}
	SubscribePauseTable.ForeignKeys[0].RefTable = SubscribeTable
	SubscribePauseTable.ForeignKeys[1].RefTable = RiderTable
	SubscribePauseTable.ForeignKeys[2].RefTable = EmployeeTable
	SubscribePauseTable.ForeignKeys[3].RefTable = CityTable
	SubscribePauseTable.ForeignKeys[4].RefTable = StoreTable
	SubscribePauseTable.ForeignKeys[5].RefTable = StoreTable
	SubscribePauseTable.ForeignKeys[6].RefTable = CabinetTable
	SubscribePauseTable.ForeignKeys[7].RefTable = CabinetTable
	SubscribePauseTable.ForeignKeys[8].RefTable = EmployeeTable
	SubscribePauseTable.Annotation = &entsql.Annotation{
		Table: "subscribe_pause",
	}
	SubscribeReminderTable.ForeignKeys[0].RefTable = SubscribeTable
	SubscribeReminderTable.ForeignKeys[1].RefTable = PlanTable
	SubscribeReminderTable.ForeignKeys[2].RefTable = RiderTable
	SubscribeReminderTable.Annotation = &entsql.Annotation{
		Table: "subscribe_reminder",
	}
	SubscribeSuspendTable.ForeignKeys[0].RefTable = SubscribeTable
	SubscribeSuspendTable.ForeignKeys[1].RefTable = SubscribePauseTable
	SubscribeSuspendTable.ForeignKeys[2].RefTable = CityTable
	SubscribeSuspendTable.ForeignKeys[3].RefTable = RiderTable
	SubscribeSuspendTable.Annotation = &entsql.Annotation{
		Table: "subscribe_suspend",
	}
	AgentStationsTable.ForeignKeys[0].RefTable = AgentTable
	AgentStationsTable.ForeignKeys[1].RefTable = EnterpriseStationTable
	CabinetModelsTable.ForeignKeys[0].RefTable = CabinetTable
	CabinetModelsTable.ForeignKeys[1].RefTable = BatteryModelTable
	PlanCitiesTable.ForeignKeys[0].RefTable = PlanTable
	PlanCitiesTable.ForeignKeys[1].RefTable = CityTable
}
