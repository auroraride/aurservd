// Code generated by entc, DO NOT EDIT.

package rider

import (
	"time"
)

const (
	// Label holds the string label denoting the rider type in the database.
	Label = "rider"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldLastModify holds the string denoting the last_modify field in the database.
	FieldLastModify = "last_modify"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldPersonID holds the string denoting the person_id field in the database.
	FieldPersonID = "person_id"
	// FieldPhone holds the string denoting the phone field in the database.
	FieldPhone = "phone"
	// FieldContact holds the string denoting the contact field in the database.
	FieldContact = "contact"
	// FieldDeviceType holds the string denoting the device_type field in the database.
	FieldDeviceType = "device_type"
	// FieldLastDevice holds the string denoting the last_device field in the database.
	FieldLastDevice = "last_device"
	// FieldLastFace holds the string denoting the last_face field in the database.
	FieldLastFace = "last_face"
	// FieldPushID holds the string denoting the push_id field in the database.
	FieldPushID = "push_id"
	// EdgePerson holds the string denoting the person edge name in mutations.
	EdgePerson = "person"
	// Table holds the table name of the rider in the database.
	Table = "rider"
	// PersonTable is the table that holds the person relation/edge.
	PersonTable = "rider"
	// PersonInverseTable is the table name for the Person entity.
	// It exists in this package in order to avoid circular dependency with the "person" package.
	PersonInverseTable = "person"
	// PersonColumn is the table column denoting the person relation/edge.
	PersonColumn = "person_id"
)

// Columns holds all SQL columns for rider fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldLastModify,
	FieldRemark,
	FieldPersonID,
	FieldPhone,
	FieldContact,
	FieldDeviceType,
	FieldLastDevice,
	FieldLastFace,
	FieldPushID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	PhoneValidator func(string) error
	// LastDeviceValidator is a validator for the "last_device" field. It is called by the builders before save.
	LastDeviceValidator func(string) error
	// PushIDValidator is a validator for the "push_id" field. It is called by the builders before save.
	PushIDValidator func(string) error
)
