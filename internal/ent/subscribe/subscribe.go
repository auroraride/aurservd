// Code generated by entc, DO NOT EDIT.

package subscribe

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the subscribe type in the database.
	Label = "subscribe"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldLastModifier holds the string denoting the last_modifier field in the database.
	FieldLastModifier = "last_modifier"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldPlanID holds the string denoting the plan_id field in the database.
	FieldPlanID = "plan_id"
	// FieldEmployeeID holds the string denoting the employee_id field in the database.
	FieldEmployeeID = "employee_id"
	// FieldCityID holds the string denoting the city_id field in the database.
	FieldCityID = "city_id"
	// FieldRiderID holds the string denoting the rider_id field in the database.
	FieldRiderID = "rider_id"
	// FieldInitialOrderID holds the string denoting the initial_order_id field in the database.
	FieldInitialOrderID = "initial_order_id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldVoltage holds the string denoting the voltage field in the database.
	FieldVoltage = "voltage"
	// FieldDays holds the string denoting the days field in the database.
	FieldDays = "days"
	// FieldAlterDays holds the string denoting the alter_days field in the database.
	FieldAlterDays = "alter_days"
	// FieldPauseDays holds the string denoting the pause_days field in the database.
	FieldPauseDays = "pause_days"
	// FieldPausedAt holds the string denoting the paused_at field in the database.
	FieldPausedAt = "paused_at"
	// FieldStartAt holds the string denoting the start_at field in the database.
	FieldStartAt = "start_at"
	// FieldEndAt holds the string denoting the end_at field in the database.
	FieldEndAt = "end_at"
	// FieldRefundAt holds the string denoting the refund_at field in the database.
	FieldRefundAt = "refund_at"
	// EdgePlan holds the string denoting the plan edge name in mutations.
	EdgePlan = "plan"
	// EdgeEmployee holds the string denoting the employee edge name in mutations.
	EdgeEmployee = "employee"
	// EdgeCity holds the string denoting the city edge name in mutations.
	EdgeCity = "city"
	// EdgeRider holds the string denoting the rider edge name in mutations.
	EdgeRider = "rider"
	// EdgePauses holds the string denoting the pauses edge name in mutations.
	EdgePauses = "pauses"
	// EdgeAlters holds the string denoting the alters edge name in mutations.
	EdgeAlters = "alters"
	// EdgeOrders holds the string denoting the orders edge name in mutations.
	EdgeOrders = "orders"
	// EdgeInitialOrder holds the string denoting the initial_order edge name in mutations.
	EdgeInitialOrder = "initial_order"
	// Table holds the table name of the subscribe in the database.
	Table = "subscribe"
	// PlanTable is the table that holds the plan relation/edge.
	PlanTable = "subscribe"
	// PlanInverseTable is the table name for the Plan entity.
	// It exists in this package in order to avoid circular dependency with the "plan" package.
	PlanInverseTable = "plan"
	// PlanColumn is the table column denoting the plan relation/edge.
	PlanColumn = "plan_id"
	// EmployeeTable is the table that holds the employee relation/edge.
	EmployeeTable = "subscribe"
	// EmployeeInverseTable is the table name for the Employee entity.
	// It exists in this package in order to avoid circular dependency with the "employee" package.
	EmployeeInverseTable = "employee"
	// EmployeeColumn is the table column denoting the employee relation/edge.
	EmployeeColumn = "employee_id"
	// CityTable is the table that holds the city relation/edge.
	CityTable = "subscribe"
	// CityInverseTable is the table name for the City entity.
	// It exists in this package in order to avoid circular dependency with the "city" package.
	CityInverseTable = "city"
	// CityColumn is the table column denoting the city relation/edge.
	CityColumn = "city_id"
	// RiderTable is the table that holds the rider relation/edge.
	RiderTable = "subscribe"
	// RiderInverseTable is the table name for the Rider entity.
	// It exists in this package in order to avoid circular dependency with the "rider" package.
	RiderInverseTable = "rider"
	// RiderColumn is the table column denoting the rider relation/edge.
	RiderColumn = "rider_id"
	// PausesTable is the table that holds the pauses relation/edge.
	PausesTable = "subscribe_pause"
	// PausesInverseTable is the table name for the SubscribePause entity.
	// It exists in this package in order to avoid circular dependency with the "subscribepause" package.
	PausesInverseTable = "subscribe_pause"
	// PausesColumn is the table column denoting the pauses relation/edge.
	PausesColumn = "subscribe_id"
	// AltersTable is the table that holds the alters relation/edge.
	AltersTable = "subscribe_alter"
	// AltersInverseTable is the table name for the SubscribeAlter entity.
	// It exists in this package in order to avoid circular dependency with the "subscribealter" package.
	AltersInverseTable = "subscribe_alter"
	// AltersColumn is the table column denoting the alters relation/edge.
	AltersColumn = "subscribe_id"
	// OrdersTable is the table that holds the orders relation/edge.
	OrdersTable = "order"
	// OrdersInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrdersInverseTable = "order"
	// OrdersColumn is the table column denoting the orders relation/edge.
	OrdersColumn = "subscribe_id"
	// InitialOrderTable is the table that holds the initial_order relation/edge.
	InitialOrderTable = "subscribe"
	// InitialOrderInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	InitialOrderInverseTable = "order"
	// InitialOrderColumn is the table column denoting the initial_order relation/edge.
	InitialOrderColumn = "initial_order_id"
)

// Columns holds all SQL columns for subscribe fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldCreator,
	FieldLastModifier,
	FieldRemark,
	FieldPlanID,
	FieldEmployeeID,
	FieldCityID,
	FieldRiderID,
	FieldInitialOrderID,
	FieldType,
	FieldVoltage,
	FieldDays,
	FieldAlterDays,
	FieldPauseDays,
	FieldPausedAt,
	FieldStartAt,
	FieldEndAt,
	FieldRefundAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/auroraride/aurservd/internal/ent/runtime"
//
var (
	Hooks [2]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultAlterDays holds the default value on creation for the "alter_days" field.
	DefaultAlterDays uint
	// DefaultPauseDays holds the default value on creation for the "pause_days" field.
	DefaultPauseDays uint
)
