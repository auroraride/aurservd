// Code generated by ent, DO NOT EDIT.

package pushmessage

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/auroraride/aurservd/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldDeletedAt, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldRemark, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldTitle, v))
}

// Image applies equality check predicate on the "image" field. It's identical to ImageEQ.
func Image(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldImage, v))
}

// Content applies equality check predicate on the "content" field. It's identical to ContentEQ.
func Content(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldContent, v))
}

// PushType applies equality check predicate on the "push_type" field. It's identical to PushTypeEQ.
func PushType(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldPushType, v))
}

// PushTime applies equality check predicate on the "push_time" field. It's identical to PushTimeEQ.
func PushTime(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldPushTime, v))
}

// IsHome applies equality check predicate on the "is_home" field. It's identical to IsHomeEQ.
func IsHome(v bool) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldIsHome, v))
}

// HomeContent applies equality check predicate on the "home_content" field. It's identical to HomeContentEQ.
func HomeContent(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldHomeContent, v))
}

// MessageStatus applies equality check predicate on the "message_status" field. It's identical to MessageStatusEQ.
func MessageStatus(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldMessageStatus, v))
}

// MessageType applies equality check predicate on the "message_type" field. It's identical to MessageTypeEQ.
func MessageType(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldMessageType, v))
}

// ThirdPartyID applies equality check predicate on the "third_party_id" field. It's identical to ThirdPartyIDEQ.
func ThirdPartyID(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldThirdPartyID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotNull(FieldDeletedAt))
}

// CreatorIsNil applies the IsNil predicate on the "creator" field.
func CreatorIsNil() predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIsNull(FieldCreator))
}

// CreatorNotNil applies the NotNil predicate on the "creator" field.
func CreatorNotNil() predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotNull(FieldCreator))
}

// LastModifierIsNil applies the IsNil predicate on the "last_modifier" field.
func LastModifierIsNil() predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIsNull(FieldLastModifier))
}

// LastModifierNotNil applies the NotNil predicate on the "last_modifier" field.
func LastModifierNotNil() predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotNull(FieldLastModifier))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkIsNil applies the IsNil predicate on the "remark" field.
func RemarkIsNil() predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIsNull(FieldRemark))
}

// RemarkNotNil applies the NotNil predicate on the "remark" field.
func RemarkNotNil() predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotNull(FieldRemark))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldContainsFold(FieldRemark, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldContainsFold(FieldTitle, v))
}

// ImageEQ applies the EQ predicate on the "image" field.
func ImageEQ(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldImage, v))
}

// ImageNEQ applies the NEQ predicate on the "image" field.
func ImageNEQ(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldImage, v))
}

// ImageIn applies the In predicate on the "image" field.
func ImageIn(vs ...string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldImage, vs...))
}

// ImageNotIn applies the NotIn predicate on the "image" field.
func ImageNotIn(vs ...string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldImage, vs...))
}

// ImageGT applies the GT predicate on the "image" field.
func ImageGT(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldImage, v))
}

// ImageGTE applies the GTE predicate on the "image" field.
func ImageGTE(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldImage, v))
}

// ImageLT applies the LT predicate on the "image" field.
func ImageLT(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldImage, v))
}

// ImageLTE applies the LTE predicate on the "image" field.
func ImageLTE(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldImage, v))
}

// ImageContains applies the Contains predicate on the "image" field.
func ImageContains(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldContains(FieldImage, v))
}

// ImageHasPrefix applies the HasPrefix predicate on the "image" field.
func ImageHasPrefix(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldHasPrefix(FieldImage, v))
}

// ImageHasSuffix applies the HasSuffix predicate on the "image" field.
func ImageHasSuffix(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldHasSuffix(FieldImage, v))
}

// ImageEqualFold applies the EqualFold predicate on the "image" field.
func ImageEqualFold(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEqualFold(FieldImage, v))
}

// ImageContainsFold applies the ContainsFold predicate on the "image" field.
func ImageContainsFold(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldContainsFold(FieldImage, v))
}

// ContentEQ applies the EQ predicate on the "content" field.
func ContentEQ(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldContent, v))
}

// ContentNEQ applies the NEQ predicate on the "content" field.
func ContentNEQ(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldContent, v))
}

// ContentIn applies the In predicate on the "content" field.
func ContentIn(vs ...string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldContent, vs...))
}

// ContentNotIn applies the NotIn predicate on the "content" field.
func ContentNotIn(vs ...string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldContent, vs...))
}

// ContentGT applies the GT predicate on the "content" field.
func ContentGT(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldContent, v))
}

// ContentGTE applies the GTE predicate on the "content" field.
func ContentGTE(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldContent, v))
}

// ContentLT applies the LT predicate on the "content" field.
func ContentLT(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldContent, v))
}

// ContentLTE applies the LTE predicate on the "content" field.
func ContentLTE(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldContent, v))
}

// ContentContains applies the Contains predicate on the "content" field.
func ContentContains(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldContains(FieldContent, v))
}

// ContentHasPrefix applies the HasPrefix predicate on the "content" field.
func ContentHasPrefix(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldHasPrefix(FieldContent, v))
}

// ContentHasSuffix applies the HasSuffix predicate on the "content" field.
func ContentHasSuffix(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldHasSuffix(FieldContent, v))
}

// ContentEqualFold applies the EqualFold predicate on the "content" field.
func ContentEqualFold(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEqualFold(FieldContent, v))
}

// ContentContainsFold applies the ContainsFold predicate on the "content" field.
func ContentContainsFold(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldContainsFold(FieldContent, v))
}

// PushTypeEQ applies the EQ predicate on the "push_type" field.
func PushTypeEQ(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldPushType, v))
}

// PushTypeNEQ applies the NEQ predicate on the "push_type" field.
func PushTypeNEQ(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldPushType, v))
}

// PushTypeIn applies the In predicate on the "push_type" field.
func PushTypeIn(vs ...uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldPushType, vs...))
}

// PushTypeNotIn applies the NotIn predicate on the "push_type" field.
func PushTypeNotIn(vs ...uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldPushType, vs...))
}

// PushTypeGT applies the GT predicate on the "push_type" field.
func PushTypeGT(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldPushType, v))
}

// PushTypeGTE applies the GTE predicate on the "push_type" field.
func PushTypeGTE(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldPushType, v))
}

// PushTypeLT applies the LT predicate on the "push_type" field.
func PushTypeLT(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldPushType, v))
}

// PushTypeLTE applies the LTE predicate on the "push_type" field.
func PushTypeLTE(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldPushType, v))
}

// PushTimeEQ applies the EQ predicate on the "push_time" field.
func PushTimeEQ(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldPushTime, v))
}

// PushTimeNEQ applies the NEQ predicate on the "push_time" field.
func PushTimeNEQ(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldPushTime, v))
}

// PushTimeIn applies the In predicate on the "push_time" field.
func PushTimeIn(vs ...time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldPushTime, vs...))
}

// PushTimeNotIn applies the NotIn predicate on the "push_time" field.
func PushTimeNotIn(vs ...time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldPushTime, vs...))
}

// PushTimeGT applies the GT predicate on the "push_time" field.
func PushTimeGT(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldPushTime, v))
}

// PushTimeGTE applies the GTE predicate on the "push_time" field.
func PushTimeGTE(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldPushTime, v))
}

// PushTimeLT applies the LT predicate on the "push_time" field.
func PushTimeLT(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldPushTime, v))
}

// PushTimeLTE applies the LTE predicate on the "push_time" field.
func PushTimeLTE(v time.Time) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldPushTime, v))
}

// PushTimeIsNil applies the IsNil predicate on the "push_time" field.
func PushTimeIsNil() predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIsNull(FieldPushTime))
}

// PushTimeNotNil applies the NotNil predicate on the "push_time" field.
func PushTimeNotNil() predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotNull(FieldPushTime))
}

// IsHomeEQ applies the EQ predicate on the "is_home" field.
func IsHomeEQ(v bool) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldIsHome, v))
}

// IsHomeNEQ applies the NEQ predicate on the "is_home" field.
func IsHomeNEQ(v bool) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldIsHome, v))
}

// HomeContentEQ applies the EQ predicate on the "home_content" field.
func HomeContentEQ(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldHomeContent, v))
}

// HomeContentNEQ applies the NEQ predicate on the "home_content" field.
func HomeContentNEQ(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldHomeContent, v))
}

// HomeContentIn applies the In predicate on the "home_content" field.
func HomeContentIn(vs ...string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldHomeContent, vs...))
}

// HomeContentNotIn applies the NotIn predicate on the "home_content" field.
func HomeContentNotIn(vs ...string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldHomeContent, vs...))
}

// HomeContentGT applies the GT predicate on the "home_content" field.
func HomeContentGT(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldHomeContent, v))
}

// HomeContentGTE applies the GTE predicate on the "home_content" field.
func HomeContentGTE(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldHomeContent, v))
}

// HomeContentLT applies the LT predicate on the "home_content" field.
func HomeContentLT(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldHomeContent, v))
}

// HomeContentLTE applies the LTE predicate on the "home_content" field.
func HomeContentLTE(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldHomeContent, v))
}

// HomeContentContains applies the Contains predicate on the "home_content" field.
func HomeContentContains(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldContains(FieldHomeContent, v))
}

// HomeContentHasPrefix applies the HasPrefix predicate on the "home_content" field.
func HomeContentHasPrefix(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldHasPrefix(FieldHomeContent, v))
}

// HomeContentHasSuffix applies the HasSuffix predicate on the "home_content" field.
func HomeContentHasSuffix(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldHasSuffix(FieldHomeContent, v))
}

// HomeContentEqualFold applies the EqualFold predicate on the "home_content" field.
func HomeContentEqualFold(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEqualFold(FieldHomeContent, v))
}

// HomeContentContainsFold applies the ContainsFold predicate on the "home_content" field.
func HomeContentContainsFold(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldContainsFold(FieldHomeContent, v))
}

// MessageStatusEQ applies the EQ predicate on the "message_status" field.
func MessageStatusEQ(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldMessageStatus, v))
}

// MessageStatusNEQ applies the NEQ predicate on the "message_status" field.
func MessageStatusNEQ(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldMessageStatus, v))
}

// MessageStatusIn applies the In predicate on the "message_status" field.
func MessageStatusIn(vs ...uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldMessageStatus, vs...))
}

// MessageStatusNotIn applies the NotIn predicate on the "message_status" field.
func MessageStatusNotIn(vs ...uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldMessageStatus, vs...))
}

// MessageStatusGT applies the GT predicate on the "message_status" field.
func MessageStatusGT(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldMessageStatus, v))
}

// MessageStatusGTE applies the GTE predicate on the "message_status" field.
func MessageStatusGTE(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldMessageStatus, v))
}

// MessageStatusLT applies the LT predicate on the "message_status" field.
func MessageStatusLT(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldMessageStatus, v))
}

// MessageStatusLTE applies the LTE predicate on the "message_status" field.
func MessageStatusLTE(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldMessageStatus, v))
}

// MessageTypeEQ applies the EQ predicate on the "message_type" field.
func MessageTypeEQ(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldMessageType, v))
}

// MessageTypeNEQ applies the NEQ predicate on the "message_type" field.
func MessageTypeNEQ(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldMessageType, v))
}

// MessageTypeIn applies the In predicate on the "message_type" field.
func MessageTypeIn(vs ...uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldMessageType, vs...))
}

// MessageTypeNotIn applies the NotIn predicate on the "message_type" field.
func MessageTypeNotIn(vs ...uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldMessageType, vs...))
}

// MessageTypeGT applies the GT predicate on the "message_type" field.
func MessageTypeGT(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldMessageType, v))
}

// MessageTypeGTE applies the GTE predicate on the "message_type" field.
func MessageTypeGTE(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldMessageType, v))
}

// MessageTypeLT applies the LT predicate on the "message_type" field.
func MessageTypeLT(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldMessageType, v))
}

// MessageTypeLTE applies the LTE predicate on the "message_type" field.
func MessageTypeLTE(v uint8) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldMessageType, v))
}

// ThirdPartyIDEQ applies the EQ predicate on the "third_party_id" field.
func ThirdPartyIDEQ(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEQ(FieldThirdPartyID, v))
}

// ThirdPartyIDNEQ applies the NEQ predicate on the "third_party_id" field.
func ThirdPartyIDNEQ(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNEQ(FieldThirdPartyID, v))
}

// ThirdPartyIDIn applies the In predicate on the "third_party_id" field.
func ThirdPartyIDIn(vs ...string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldIn(FieldThirdPartyID, vs...))
}

// ThirdPartyIDNotIn applies the NotIn predicate on the "third_party_id" field.
func ThirdPartyIDNotIn(vs ...string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldNotIn(FieldThirdPartyID, vs...))
}

// ThirdPartyIDGT applies the GT predicate on the "third_party_id" field.
func ThirdPartyIDGT(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGT(FieldThirdPartyID, v))
}

// ThirdPartyIDGTE applies the GTE predicate on the "third_party_id" field.
func ThirdPartyIDGTE(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldGTE(FieldThirdPartyID, v))
}

// ThirdPartyIDLT applies the LT predicate on the "third_party_id" field.
func ThirdPartyIDLT(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLT(FieldThirdPartyID, v))
}

// ThirdPartyIDLTE applies the LTE predicate on the "third_party_id" field.
func ThirdPartyIDLTE(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldLTE(FieldThirdPartyID, v))
}

// ThirdPartyIDContains applies the Contains predicate on the "third_party_id" field.
func ThirdPartyIDContains(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldContains(FieldThirdPartyID, v))
}

// ThirdPartyIDHasPrefix applies the HasPrefix predicate on the "third_party_id" field.
func ThirdPartyIDHasPrefix(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldHasPrefix(FieldThirdPartyID, v))
}

// ThirdPartyIDHasSuffix applies the HasSuffix predicate on the "third_party_id" field.
func ThirdPartyIDHasSuffix(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldHasSuffix(FieldThirdPartyID, v))
}

// ThirdPartyIDEqualFold applies the EqualFold predicate on the "third_party_id" field.
func ThirdPartyIDEqualFold(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldEqualFold(FieldThirdPartyID, v))
}

// ThirdPartyIDContainsFold applies the ContainsFold predicate on the "third_party_id" field.
func ThirdPartyIDContainsFold(v string) predicate.Pushmessage {
	return predicate.Pushmessage(sql.FieldContainsFold(FieldThirdPartyID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Pushmessage) predicate.Pushmessage {
	return predicate.Pushmessage(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Pushmessage) predicate.Pushmessage {
	return predicate.Pushmessage(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Pushmessage) predicate.Pushmessage {
	return predicate.Pushmessage(sql.NotPredicates(p))
}
